Questa è la parte 5 di project_tree. Continua da quella precedente.

        Testa una funzione precedentemente iniettata eseguendola.

        Args:
            module_name (str): Nome del modulo target
            function_name (str): Nome della funzione da testare
            test_args (tuple): Argomenti di test da passare alla funzione

        Returns:
            str: Output del test o errore catturato.
        """
        try:
            module = importlib.import_module(module_name)
            func = getattr(module, function_name)
            result = func(*test_args)
            return f"✅ Output della funzione: {result}"
        except Exception:
            return f"❌ Errore durante il test:\n{traceback.format_exc()}"

### --- evolution/neural_plasticity.py --- ###
# evolution/neural_plasticity.py

"""
Modulo: neural_plasticity.py
Descrizione: Simula la plasticità neurale rinforzando l'uso dei moduli più attivi nel sistema Mercurius∞.
Aggiorna il log sinaptico e crea una mappa di rafforzamento.
"""

from memory.synaptic_log import SynapticLog
from collections import defaultdict
import json
import os

PLASTICITY_TRACKER = "data/plasticity_weights.json"


class NeuralPlasticity:
    def __init__(self):
        self.log = SynapticLog()
        self.weights = defaultdict(int)
        self._load_weights()

    def _load_weights(self):
        if os.path.exists(PLASTICITY_TRACKER):
            with open(PLASTICITY_TRACKER, "r") as f:
                self.weights.update(json.load(f))

    def _save_weights(self):
        with open(PLASTICITY_TRACKER, "w") as f:
            json.dump(self.weights, f, indent=2)

    def reinforce_module_usage(self, module_name: str):
        self.weights[module_name] += 1
        self._save_weights()
        self.log.log_event("NeuralPlasticity", "Reinforced", f"{module_name}: {self.weights[module_name]}")

### --- evolution/open_evolve.py --- ###
class OpenEvolve:
    def __init__(self):
        self.name = "OpenEvolve"

    def evolve(self, population: list, generations: int = 10) -> list:
        return [f"{indiv}_gen{generations}" for indiv in population]

### --- evolution/openalpha_evolve.py --- ###
class OpenAlphaEvolve:
    def __init__(self):
        self.name = "OpenAlphaEvolve"

    def simulate_strategy(self, context: dict) -> str:
        return f"[{self.name}] Strategia simulata con successo in contesto: {context}"

### --- evolution/pwb_alphaevolve.py --- ###
class PWBAlphaEvolve:
    def __init__(self):
        self.name = "PWB-AlphaEvolve"

    def evolve_strategy(self, data: list, constraints: dict = {}) -> str:
        return f"[{self.name}] Strategia evoluta su {len(data)} dati con vincoli {constraints}"

### --- evolution/web_scraper.py --- ###
# evolution/web_scraper.py

"""
Modulo: web_scraper.py
Descrizione: Sistema di acquisizione automatica per l’auto-evoluzione di Mercurius∞.
Scarica, estrae e indicizza contenuti testuali e di codice da pagine web, GitHub e documentazione.
"""

import requests
from bs4 import BeautifulSoup
from typing import List


class WebScraper:
    def __init__(self, user_agent: str = "MercuriusBot/1.0"):
        self.headers = {"User-Agent": user_agent}

    def get_text_from_url(self, url: str) -> str:
        """
        Scarica testo leggibile da una pagina web.
        """
        try:
            response = requests.get(url, headers=self.headers, timeout=10)
            if response.status_code != 200:
                return f"[Errore HTTP {response.status_code}]"

            soup = BeautifulSoup(response.text, "html.parser")
            texts = [p.get_text() for p in soup.find_all(["p", "pre", "code", "li"])]
            return "\n".join(texts).strip()

        except Exception as e:
            return f"[Errore scraping]: {e}"

    def extract_code_blocks(self, html_text: str) -> List[str]:
        """
        Estrae blocchi <code> o <pre> come frammenti di codice.
        """
        soup = BeautifulSoup(html_text, "html.parser")
        code_blocks = soup.find_all(["code", "pre"])
        return [block.get_text() for block in code_blocks if block.get_text()]

### --- exports/README.txt --- ###
🧠 Mercurius∞ – Builder Esegubile Desktop

▶ Per creare la versione installabile dell'interfaccia grafica:

1. Installa PyInstaller (se non già presente):
   pip install pyinstaller

2. Avvia il processo build:

   - Windows:
     build_win.bat

   - macOS/Linux:
     bash build_mac.sh

▶ Output:
Troverai l'eseguibile finale in: dist/MercuriusGUI(.exe)

📎 Requisiti:
- Python 3.9+
- dashboard.py funzionante
- Icona in /exports/icon/

### --- exports/build_dashboard.py --- ###
# build_dashboard.py
"""
Script: build_dashboard.py
Uso: genera un eseguibile standalone per il modulo dashboard.py
"""

import os

ENTRY = "dashboard.py"
ICON = "icon/icon.ico"

os.system(f"pyinstaller --onefile --windowed --icon={ICON} --name=MercuriusGUI {ENTRY}")

### --- file_albero_locale.txt --- ###
./
  .env
  .gitignore
  CHANGELOG.md
  dashboard.py
  dashboard_streamlit.py
  file_albero_locale.txt
  list_files.py
  main.py
  pyproject.toml
  README.md
  requirements.txt
  seleziona_cartella.py
  setup.py
  start_fullmode.py
  .git/
    COMMIT_EDITMSG
    config
    description
    HEAD
    index
    ORIG_HEAD
    packed-refs
    filter-repo/
      already_ran
      changed-refs
      commit-map
      first-changed-commits
      ref-map
      suboptimal-issues
    hooks/
      applypatch-msg.sample
      commit-msg.sample
      fsmonitor-watchman.sample
      post-update.sample
      pre-applypatch.sample
      pre-commit.sample
      pre-merge-commit.sample
      pre-push.sample
      pre-rebase.sample
      pre-receive.sample
      prepare-commit-msg.sample
      push-to-checkout.sample
      sendemail-validate.sample
      update.sample
    info/
      exclude
      refs
    logs/
      HEAD
      refs/
        heads/
          main
        remotes/
          origin/
            main
    objects/
      00/
        0c4644329642ba78e2cd1ada115ebe379e4af6
        40e74021c0f90d510ff5aa9f38bf82908244ff
      01/
        b3671f539a7617178cbdd179a4a535602776f9
      02/
        c930a34428141958379765db4bb989840a88a3
      03/
        e6bb6588fb106c53a10dee28bf3bdb27ed2fc1
      0d/
        6a08a82018bce35f3ab880ed1fa1df80cffbf4
      0f/
        50667778bb680abbcad2348d51c2c02a0078c3
      12/
        530a8fb7fc2b755796dfab2086c44b8df7a246
      14/
        d8c1a972d89bd64097a3559dfb766305f5f0f2
        d94ebe296e560f13495faaeb9648bd243ef208
      19/
        8a47d2914853cb4f213bbd8b73a3e26fe16cad
      1d/
        4ba5c319325d9e9d189299deb4901629f3f395
      20/
        056a4c1fd358f0d139b65c43fb63b518cd3848
      21/
        9d837349412896a75ceb68aab0b38dab13ed97
      24/
        a5784c4fc7c271693ed05e4f46aa863d7e5f6e
      2b/
        77c9c83c394c02fd5d95e687efb73468940a3a
      2d/
        ebc1262e7a92680d539c8f002591e9ab77593a
      2e/
        ef76e34370364369b94979cdc99527b20617f3
      2f/
        28bc65fdf6e148b20c5f0738f09285640cfc6f
        c19b97dd57ea97cfd10600ac68b4d61747c996
      31/
        84ce130d0f13fa15de77c28ac2486eb1e28912
      32/
        1666aff24ebbb930479bcdacff81b954e43b21
        af33f12fb23d2c3ae21d49583b1d52c0bbafb6
      36/
        503255b325774ac1fe6b49004dbfd5d14e9580
      37/
        52a5657bd32b93c61a22924768f4f492d35e40
      38/
        65f8bcf47772734860d05e9b994954061c5638
      3a/
        d59d6ab52b67ff4c8d85aa887ec1b77c143068
        e980edd84d82a624e5cc6656c1f56a8e45cfbe
      3b/
        c7adddf953153a87f0c04d1be830ea66021d82
        de6c485644a15663667e6d4ed6ef31c3b0faeb
      3f/
        e4cf13e9b6fedbdc8b92c47563ba76a3c20105
      40/
        dd2c56789c48bdec3b9dc1184c32b4154b47af
      42/
        031961e2440f8a310cea430b28e23554135904
      43/
        a8a34b1a83aa3f2a06e5be17387d6e17123f6c
      45/
        a831f84b29ece71af0e4cbda6c1da7a4d9230a
      46/
        a623b5b01f12213ec2eecf94fbf3975d3a9124
      49/
        d6a927f096f2dedab1cdd59e6a759d245c1687
      4f/
        f6637d7bbf45d17eab8f7a8f8345b6cde1050c
      51/
        b9e9411ce94c940f82906d72f0a73effb175fd
      55/
        ac947908ad60015e354cfbea8962367f3b970d
      61/
        78c8f22b1327b32d3543ed440278c06a7cf4ba
      63/
        5f0e407457031cb5a5dece2fb1822b6a5ee673
      64/
        ab547d9e87cb92cfb2d334d82175945ee2b7e7
      65/
        8828e17ef2b5738dfdc041b3ad56d537e832f5
      6a/
        394f4eddeb14d370aaf711f5768ffcea2889b3
      70/
        082f880e8320e7b4e4de7e20bda48a8e3b63ac
      73/
        2d944117fa42c29e8d0be77ed342c72d963adb
        d2e59fa3096da60ebbf3de0bb6ab169b8d9e2c
      78/
        1dde7c5b9c27dd781649cd31594baa8e07c39a
        a170643d812e320454934759d2d30d90b92f58
      7b/
        b93032b2b1f5142920248083853b3176b5d2a7
      7c/
        611ced77cf01fd1f688ec3ede8beff5c7a4917
      7e/
        d6f4eb069ee594996ca364131749a27858aee6
      7f/
        7e45524f1d4216fad3ad8acef3f9fb5d071410
      82/
        323b2bd60dc79727864edd63304e29370c54a2
      86/
        b17b3330d9051c4c02c4c5411b815bddad6814
      8d/
        0baa0d93ef23efff4a8bde0aad237a3ab5a64c
      93/
        508a98edc13ac1cfe7dfc1eeff523fa23b0f73
      94/
        c338617eafd887ca0a56f955beb05e2bcf2db9
      95/
        148ebe84aa6644c00c7e497e1e770171ad6ed3
      98/
        547da4dfbf3e5007866039a538fa2f66ccddbc
        c493a5744baeede6b56cb9e63a31c57fea90ba
      99/
        872b86a4932047b650a2aef12205c6cd86c3b6
      9c/
        80bea82e6ebcc22b425931e8b96d36f76aa4fc
      9f/
        a66be0fdaf549d7b9d0e1a34edfe86eb165131
      a6/
        1220886f2417d5ae9fb1680d121016fa95c9b8
      aa/
        da2afa8162881d4a4bf014b1149e4f9b7bf759
      ab/
        ed01a85f4054496f02409f222b2fef46c89661
      af/
        421fbfa76ac1b03c8f37d181c2dd2fd12a5511
      b3/
        c74fed4dfa9630a073957deac56ec22e1e732b
      b6/
        c71cb45876dc9b13efe491564e2a1e462253e0
        e462cbe09e34ca4ff35a170649088cbc19e3eb
      b7/
        af62409324ee822ce49bb5d786f9da43ee1d05
        f978b23af63f4b543ae4aef1f712b0ccd0981c
      ba/
        d078afcd23d2592c4bbff1eee3279b0d254aed
      be/
        be983b4c563b8d740ccac743784cf1c9321033
      c1/
        4c6dfeef82e93d78f815213b42a8da4f38ffe9
      c5/
        46b9aa095742f2506885c426dd691f0d993fbe
        6322249fbdb0dee59831a3351ec306d91bd0b5
      c6/
        09404ce4c36da110330885d93dacdac69b82ae
      c9/
        46c14af18a212dc745427f7df47d2e4ca91422
        70434c4e59b08a81680cefc9d4800f0ae56d69
        a026d96964a87e44b9c432ceb60695b23b9217
        e551c0bab3018aabf61fc4ef3600ec1e7fbbc1
      cd/
        f209b0e7219d4623111a82ade9251117925dd6
      d4/
        6a8c88a40a0693799bc9fc6ec637a3d2cf625a
      d6/
        199849ec1e87d76a0dbe15b195b906d17886d7
        f52913d8d9458718d451956f9b8ece11a97078
      df/
        27f27b8a191096a854128385a57175027de4a1
      e1/
        43736092a3e0db145bb1deaeff1c61c5c95fa4
        a995cdc0f94d6eb4f4af45b74111216b801237
      e3/
        0b99f84d01ea9282ec44d1792bda262c4fee80
      e5/
        18f93ba932e89e75022826a575cf6532fc74c9
      e6/
        1ce56f02f4424a0fe349395aa2ff45ab974a4b
      ea/
        964054e3e2e8a4bf1a2b9a61cd0e10ce53a664
      eb/
        16876a95b5aa6f62a94ecee828f228582a5b4c
      ec/
        38faf96f5924e3f17610af99e4d58f5df63d0a
      ed/
        6b29cd2cc84f7cc468308487ad3697c168abe4
      ef/
        48957df5280fa00d0ddcc5cad9d7f6a8870a36
      f3/
        c86da61aff2175b8b80cd77ab9de74df9c0632
      f6/
        2308f65f197683375cb0a1210d2b2b031a9cf1
      f7/
        10bd788e901eb029b08c43c4743a186820755c
      f8/
        21dfb5e1b3333f8c0567857bb66abc0a46cb11
      f9/
        40ed04adebc5c927d5cb67f6682c7fae3f441e
      fa/
        98df16de60f034511cb3f3d16449573e3706c7
      fb/
        80a3df37e322de8fa00df6bc971d654d8b2d37
      info/
        commit-graph
        packs
      pack/
        pack-b1e8f7c545bf0d92a3c1c41584aea2f6133cae93.idx
        pack-b1e8f7c545bf0d92a3c1c41584aea2f6133cae93.pack
        pack-b1e8f7c545bf0d92a3c1c41584aea2f6133cae93.rev
    refs/
      heads/
        main
      remotes/
        origin/
          main
      tags/
  .venv/
    pyvenv.cfg
    etc/
      jupyter/
        nbconfig/
          notebook.d/
            pydeck.json
    Include/
    Lib/
      site-packages/
        .DS_Store
        decorator.py
        distutils-precedence.pth
        isympy.py
        numpy-2.2.6-cp312-cp312-win_amd64.whl
        pefile.py
        peutils.py
        pylab.py
        pythoncom.py
        PyWin32.chm
        pywin32.pth
        pywin32.version.txt
        scipy-1.15.3-cp312-cp312-win_amd64.whl
        six.py
        sounddevice.py
        srt.py
        threadpoolctl.py
        typing_extensions.py
        whisper.py
        _cffi_backend.cp312-win_amd64.pyd
        _sounddevice.py
        __editable__.mercurius_infinite-1.0.0.pth
        __editable___mercurius_infinite_1_0_0_finder.py
        adodbapi/
          adodbapi.py
          ado_consts.py
          apibase.py
          is64bit.py
          license.txt
          process_connect_string.py
          readme.txt
          schema_table.py
          setup.py
          __init__.py
          examples/
            db_print.py
            db_table_names.py
            xls_read.py
            xls_write.py
            __pycache__/
              db_print.cpython-312.pyc
              db_table_names.cpython-312.pyc
              xls_read.cpython-312.pyc
              xls_write.cpython-312.pyc
          test/
            adodbapitest.py
            adodbapitestconfig.py
            dbapi20.py
            is64bit.py
            setuptestframework.py
            test_adodbapi_dbapi20.py
            tryconnection.py
            __pycache__/
              adodbapitest.cpython-312.pyc
              adodbapitestconfig.cpython-312.pyc
              dbapi20.cpython-312.pyc
              is64bit.cpython-312.pyc
              setuptestframework.cpython-312.pyc
              test_adodbapi_dbapi20.cpython-312.pyc
              tryconnection.cpython-312.pyc
          __pycache__/
            adodbapi.cpython-312.pyc
            ado_consts.cpython-312.pyc
            apibase.cpython-312.pyc
            is64bit.cpython-312.pyc
            process_connect_string.cpython-312.pyc
            schema_table.cpython-312.pyc
            setup.cpython-312.pyc
            __init__.cpython-312.pyc
        altair/
          py.typed
          theme.py
          _magics.py
          __init__.py
          expr/
            consts.py
            core.py
            funcs.py
            __init__.py
            __pycache__/
              consts.cpython-312.pyc
              core.cpython-312.pyc
              funcs.cpython-312.pyc
              __init__.cpython-312.pyc
          jupyter/
            jupyter_chart.py
            __init__.py
            js/
              index.js
              README.md
            __pycache__/
              jupyter_chart.cpython-312.pyc
              __init__.cpython-312.pyc
          typing/
            __init__.py
            __pycache__/
              __init__.cpython-312.pyc
          utils/
            compiler.py
            core.py
            data.py
            deprecation.py
            display.py
            execeval.py
            html.py
            mimebundle.py
            plugin_registry.py
            save.py
            schemapi.py
            selection.py
            server.py
            _dfi_types.py
            _importers.py
            _show.py
            _transformed_data.py
            _vegafusion_data.py
            __init__.py
            __pycache__/
              compiler.cpython-312.pyc
              core.cpython-312.pyc
              data.cpython-312.pyc
              deprecation.cpython-312.pyc
              display.cpython-312.pyc
              execeval.cpython-312.pyc
              html.cpython-312.pyc
              mimebundle.cpython-312.pyc
              plugin_registry.cpython-312.pyc
              save.cpython-312.pyc
              schemapi.cpython-312.pyc
              selection.cpython-312.pyc
              server.cpython-312.pyc
              _dfi_types.cpython-312.pyc
              _importers.cpython-312.pyc
              _show.cpython-312.pyc
              _transformed_data.cpython-312.pyc
              _vegafusion_data.cpython-312.pyc
              __init__.cpython-312.pyc
          vegalite/
            api.py
            data.py
            display.py
            schema.py
            __init__.py
            v5/
              api.py
              compiler.py
              data.py
              display.py
              theme.py
              __init__.py
              schema/
                channels.py
                core.py
                mixins.py
                vega-lite-schema.json
                vega-themes.json
                _config.py
                _typing.py
                __init__.py
                __pycache__/
                  channels.cpython-312.pyc
                  core.cpython-312.pyc
                  mixins.cpython-312.pyc
                  _config.cpython-312.pyc
                  _typing.cpython-312.pyc
                  __init__.cpython-312.pyc
              __pycache__/
                api.cpython-312.pyc
                compiler.cpython-312.pyc
                data.cpython-312.pyc
                display.cpython-312.pyc
                theme.cpython-312.pyc
                __init__.cpython-312.pyc
            __pycache__/
              api.cpython-312.pyc
              data.cpython-312.pyc
              display.cpython-312.pyc
              schema.cpython-312.pyc
              __init__.cpython-312.pyc
          __pycache__/
            theme.cpython-312.pyc
            _magics.cpython-312.pyc
            __init__.cpython-312.pyc
        altair-5.5.0.dist-info/
          INSTALLER
          METADATA
          RECORD
          WHEEL
          licenses/
            LICENSE
        altgraph/
          Dot.py
          Graph.py
          GraphAlgo.py
          GraphStat.py
          GraphUtil.py
          ObjectGraph.py
          __init__.py
          __pycache__/
            Dot.cpython-312.pyc
            Graph.cpython-312.pyc
            GraphAlgo.cpython-312.pyc
            GraphStat.cpython-312.pyc
            GraphUtil.cpython-312.pyc
            ObjectGraph.cpython-312.pyc
            __init__.cpython-312.pyc
        altgraph-0.17.4.dist-info/
          INSTALLER
          LICENSE
          METADATA
          RECORD
          top_level.txt
          WHEEL
          zip-safe
        annotated_types/
          py.typed
          test_cases.py
          __init__.py
          __pycache__/
            test_cases.cpython-312.pyc
            __init__.cpython-312.pyc
        annotated_types-0.7.0.dist-info/
          INSTALLER
          METADATA
          RECORD
          WHEEL
          licenses/
            LICENSE
        anyio/
          from_thread.py
          lowlevel.py
          py.typed
          pytest_plugin.py
          to_interpreter.py
          to_process.py
          to_thread.py
          __init__.py
          abc/
            _eventloop.py
            _resources.py
            _sockets.py
            _streams.py
            _subprocesses.py
            _tasks.py
            _testing.py
            __init__.py
            __pycache__/
              _eventloop.cpython-312.pyc
              _resources.cpython-312.pyc
              _sockets.cpython-312.pyc
              _streams.cpython-312.pyc
              _subprocesses.cpython-312.pyc
              _tasks.cpython-312.pyc
              _testing.cpython-312.pyc
              __init__.cpython-312.pyc
          streams/
            buffered.py
            file.py
            memory.py
            stapled.py
            text.py
            tls.py
            __init__.py
            __pycache__/
              buffered.cpython-312.pyc
              file.cpython-312.pyc
              memory.cpython-312.pyc
              stapled.cpython-312.pyc
              text.cpython-312.pyc
              tls.cpython-312.pyc
              __init__.cpython-312.pyc
          _backends/
            _asyncio.py
            _trio.py
            __init__.py
            __pycache__/
              _asyncio.cpython-312.pyc
              _trio.cpython-312.pyc
              __init__.cpython-312.pyc
          _core/
            _asyncio_selector_thread.py
            _eventloop.py
            _exceptions.py
            _fileio.py
            _resources.py
            _signals.py
            _sockets.py
            _streams.py
            _subprocesses.py
            _synchronization.py
            _tasks.py
            _tempfile.py
            _testing.py
            _typedattr.py
            __init__.py
            __pycache__/
              _asyncio_selector_thread.cpython-312.pyc
              _eventloop.cpython-312.pyc
              _exceptions.cpython-312.pyc
              _fileio.cpython-312.pyc
              _resources.cpython-312.pyc
              _signals.cpython-312.pyc
              _sockets.cpython-312.pyc
              _streams.cpython-312.pyc
              _subprocesses.cpython-312.pyc
              _synchronization.cpython-312.pyc
              _tasks.cpython-312.pyc
              _tempfile.cpython-312.pyc
              _testing.cpython-312.pyc
              _typedattr.cpython-312.pyc
              __init__.cpython-312.pyc
          __pycache__/
            from_thread.cpython-312.pyc
            lowlevel.cpython-312.pyc
            pytest_plugin.cpython-312.pyc
            to_interpreter.cpython-312.pyc
            to_process.cpython-312.pyc
            to_thread.cpython-312.pyc
            __init__.cpython-312.pyc
        anyio-4.9.0.dist-info/
          entry_points.txt
          INSTALLER
          LICENSE
          METADATA
          RECORD
          top_level.txt
          WHEEL
        attr/
          converters.py
          converters.pyi
          exceptions.py
          exceptions.pyi
          filters.py
          filters.pyi
          py.typed
          setters.py
          setters.pyi
          validators.py
          validators.pyi
          _cmp.py