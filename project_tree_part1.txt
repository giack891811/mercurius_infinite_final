### --- .github/workflows/mercurius_ci.yml --- ###
# .github/workflows/ci.yml
name: Mercurius CI/CD

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout repository
        uses: actions/checkout@v4

      - name: 🐍 Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: 📦 Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest flake8

      - name: 🔍 Lint check (flake8)
        run: |
          flake8 . --exclude=.venv

      - name: ✅ Run unit & integration tests
        run: |
          pytest tests/ > test_results.txt
        continue-on-error: true

      - name: 📤 Upload test artifacts
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: test_results.txt

      - name: 🐳 Build Docker image
        run: docker build -t mercurius:ci .

  deploy-staging:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: ⬇️ Checkout repository
        uses: actions/checkout@v4

      - name: 🚀 Simulated deploy to staging
        run: echo "🚀 Deploying to staging... [Simulazione]"

  refresh-mcp:
    needs: deploy-staging
    runs-on: ubuntu-latest
    steps:
      - name: 🔄 Refresh MCP introspection
        run: echo "🔄 MCP Introspection Updated"

  generate-colab-notebook:
    needs: refresh-mcp
    runs-on: ubuntu-latest
    steps:
      - name: 📘 Generate Colab Notebook
        run: echo "📘 Colab notebook generation simulated"

  notify-slack:
    needs: generate-colab-notebook
    runs-on: ubuntu-latest
    steps:
      - name: 📩 Slack notification
        run: echo "📩 Slack message simulation"

  mercurius-autonomous-plan:
    needs: notify-slack
    runs-on: ubuntu-latest
    steps:
      - name: 🧠 Run Mercurius Autonomous Action Plan
        run: echo "🧠 Executing Mercurius Autonomous Plan..."

### --- CHANGELOG.md --- ###

### Ciclo 019
- Creato `hierarchy_controller.py` per definizione core-controller e comunicazioni interne tra agenti

### Ciclo 020
- Creato `strategic_coordinator.py` con mappatura obiettivi, log interazioni e scelta agenti

### Ciclo 021
- Creato modulo `cognitive_simulator.py` per apprendimento esperienziale e adattamento comportamentale

### --- README.md --- ###
# AION – Advanced Intelligence Of Nexus

🔬 **AION** è un sistema AI evolutivo full-stack, autonomo, multimodale e cognitivamente attivo.
Progettato per **apprendere**, **riflettere**, **generare codice** e **interagire** con ambienti complessi in tempo reale.

## 🧠 Caratteristiche Principali

- 🧠 **Autonomia cognitiva** – Apprende da esperienze passate, simula riflessioni e ottimizza strategie.
- 🗺️ **Pianificazione intelligente** – Crea piani operativi e migliora tramite feedback (AZR).
- 🎤 **Multimodalità attiva** – Supporta voce, testo, immagini e input sensoriali reali.
- 🛠️ **Autogenerazione codice** – Scrive e modifica moduli Python in autonomia.
- 📊 **Supervisione interna** – Telemetria cognitiva, metriche performance e logging avanzato.
- 🧩 **Architettura modulare** – Ogni componente è plug&play e indipendente.

---

## 📂 Struttura del Progetto

```plaintext
├── main.py                    # Entry point principale
├── start_fullmode.py         # Avvio completo in modalità "Jarvis+"
├── modules/
│   ├── Neo/                  # Agenti evolutivi, ragionamento e simulazione
│   ├── GPT/                  # Prompting e generazione LLM
│   ├── AZR/                  # Modulo Reasoning e feedback
│   ├── dashboard/            # Interfaccia utente (Tk + Streamlit)
│   └── Reasoner/             # Catene logiche e planning
├── tools/                    # Logger, loader, scheduler, tester
├── config/                   # Configurazioni e ambienti
├── culture/                  # File cognitivi e conoscenza appresa
└── memory/                   # Memoria esperienziale degli agenti

## 🚀 Modalità GENESIS
Per avviare Mercurius∞ con tutti i moduli attivi, eseguire:

```bash
python scripts/aion_boot.py
```

Il comando abilita la rete di agenti (OpenAI, Ollama, AZR), la voce (Whisper + gTTS) e la visione YOLO tramite webcam IP.

## 🛰 Mission Controller Evolutivo
Il file `orchestrator/mission_controller.py` introduce un controller che gestisce un ciclo di self-questioning tra gli agenti (Reasoner, AZR e Codex). Ogni workspace contiene un prompt dedicato e il controller salva log e patch generate in automatico.

Per una prova rapida è disponibile la GUI Streamlit:

```bash
streamlit run modules/dashboard/mission_gui.py
```

Da qui è possibile creare nuovi workspace, avviare il ciclo evolutivo e visualizzare i log della sandbox.

## 🛠 Generazione automatica del prompt per GPT-Engineer

Sono disponibili tre script per creare i file di lavoro:

1. `scripts/update_project_tree.py` aggiorna `project_tree.txt` con l'albero del repository e le prime 100 righe dei file di testo.
2. `scripts/build_prompt.py` unisce `project_tree.txt` e `prompt_commands.txt` nel file finale `prompt.txt`.
3. `update_project_tree.py` salva in `project_tree` tutti i file testuali del progetto con percorso e contenuto completo.

### Utilizzo manuale

```bash
python scripts/update_project_tree.py
python scripts/build_prompt.py
python update_project_tree.py
```

### Integrazione con Git

```bash
# abilita i githook personalizzati
git config core.hooksPath githooks
```

`githooks/post-merge` aggiorna `project_tree.txt` dopo ogni merge.
`githooks/pre-commit` genera `project_tree` e lo aggiunge al commit.
Attiva l'hook con:
`git config core.hooksPath githooks && chmod +x githooks/pre-commit`
(valido sia su Linux che su Windows con Git Bash).

### --- agents/__init__.py --- ###
"""
📦 agents/__init__.py
Modulo inizializzatore per il caricamento dinamico degli agenti AI della rete neurale Mercurius∞
"""

# Placeholder: gli agenti verranno creati come moduli singoli in agents/
# Ogni modulo dovrà contenere una classe con lo stesso nome dell'agente definito in genesis_config.yaml
# Esempio: agents/ChatGPT4.py -> class ChatGPT4:

### --- agents/adaptive_trader.py --- ###
# agents/adaptive_trader.py
"""
adaptive_trader.py
==================
Agente autonomo per esecuzione dinamica di operazioni di trading sulla base
dei segnali ricevuti, stato di memoria, e adattamento esperienziale (AZR).
"""
from modules.experience.azr_analyzer import AZRAnalyzer
from modules.experience.experience_memory import ExperienceMemory

class AdaptiveTrader:
    def __init__(self, config, memory_manager, model_trainer, strategy_executor):
        self.config = config
        self.memory = memory_manager
        self.model_trainer = model_trainer
        self.strategy = strategy_executor
        self.trade_log = []
        self.experience_memory = ExperienceMemory(config)
        self.azr = AZRAnalyzer(self.experience_memory, config)

    def evaluate_signals(self, signals):
        """Valuta i segnali di trading ricevuti in base al contesto corrente."""
        evaluated = []
        for signal in signals:
            confidence = signal.get('confidence', 0.5)
            if confidence > self.config.get("min_confidence", 0.6):
                evaluated.append(signal)
        return evaluated

    def execute_trades(self, signals):
        """Esegue le operazioni basandosi sui segnali validati."""
        valid_signals = self.evaluate_signals(signals)
        for signal in valid_signals:
            trade = {
                "symbol": signal["symbol"],
                "action": signal["action"],
                "quantity": self._calculate_quantity(signal),
                "timestamp": signal.get("timestamp")
            }
            # Simula risultato dell'operazione di trading
            result = self._simulate_trade_result(trade)
            feedback = self._generate_feedback(trade, result)
            # Registra l'esperienza e aggiorna memoria
            self.experience_memory.record_experience(signal, trade, result, feedback)
            self.memory.record_trade(trade)
            self.trade_log.append(trade)
            print(f"Eseguito trade: {trade} → Profit: {result['profit']:.2f}")
        # Dopo aver eseguito i trade, applica eventuali adattamenti (AZR)
        self._adaptive_adjustment()

    def _calculate_quantity(self, signal):
        """Calcola la quantità da tradare in base al rischio e asset allocation."""
        base_qty = self.config.get("base_trade_qty", 100)
        volatility_factor = signal.get("volatility", 1)
        return int(base_qty / volatility_factor)

    def _simulate_trade_result(self, trade):
        """Mock del risultato di un'operazione (calcolo profitto casuale)."""
        import random
        direction = 1 if trade["action"].upper() == "BUY" else -1
        price_diff = random.uniform(-5, 10) * direction
        return {"profit": round(price_diff * trade["quantity"] * 0.01, 2)}

    def _generate_feedback(self, trade, result):
        """Mock di feedback evolutivo basato sul risultato dell'operazione."""
        return {
            "profit_margin": result["profit"] / (trade["quantity"] + 1),
            "risk_level": trade["quantity"]
        }

    def _adaptive_adjustment(self):
        """Applica AZR per modificare i parametri in base all’esperienza recente."""
        result = self.azr.apply_adaptation()
        # L'adattamento AZR modifica la config in place; notifica eventuali cambiamenti rilevanti
        if result and result.get("decision", {}).get("action") == "decrease_risk":
            new_qty = result["decision"]["new_qty"]
            print(f"🔄 Adattamento AZR: ridotta base_trade_qty a {new_qty}")

    def get_trade_history(self):
        """Restituisce lo storico delle operazioni eseguite."""
        return self.trade_log

### --- agents/agent_comm.py --- ###
# agents/agent_comm.py

"""
Modulo: agent_comm.py
Descrizione: Gestione della comunicazione tra agenti all'interno della rete Mercurius∞.
Permette lo scambio di messaggi strutturati tra agenti identificati da ID.
"""

from typing import Dict, List
from datetime import datetime

# Simulazione struttura di memorizzazione dei messaggi
MESSAGES: Dict[str, List[Dict]] = {}


def send_message(sender_id: str, receiver_id: str, content: str) -> None:
    """
    Invia un messaggio da un agente a un altro.
    """
    message = {
        "timestamp": datetime.now().isoformat(),
        "from": sender_id,
        "to": receiver_id,
        "content": content
    }
    if receiver_id not in MESSAGES:
        MESSAGES[receiver_id] = []
    MESSAGES[receiver_id].append(message)


def get_messages(agent_id: str) -> List[Dict]:
    """
    Recupera tutti i messaggi ricevuti da un agente.
    """
    return MESSAGES.get(agent_id, [])

### --- agents/agent_generator.py --- ###
# agents/agent_generator.py

"""
Modulo: agent_generator.py
Descrizione: Generazione dinamica di nuovi agenti per Mercurius∞ con personalità e missione specifiche.
"""

from typing import Dict
import uuid


class Agent:
    def __init__(self, name: str, personality: str, mission: str):
        self.id = str(uuid.uuid4())
        self.name = name
        self.personality = personality
        self.mission = mission

    def describe(self) -> Dict:
        return {
            "id": self.id,
            "name": self.name,
            "personality": self.personality,
            "mission": self.mission
        }


def generate_agent(personality: str, mission: str, name: str = "Unnamed Agent") -> Agent:
    """
    Crea un nuovo agente con parametri definiti.
    """
    return Agent(name, personality, mission)

### --- agents/azr/azr_supervisor.py --- ###
"""
azr_supervisor.py
=================
Controllore strategico per adattamento Mercurius∞ basato su esperienze.
"""

from modules.experience.azr_analyzer import AZRAnalyzer
from modules.metrics.performance_metrics import PerformanceMetrics


class AZRSupervisor:
    def __init__(self, agent, experience_memory, config):
        self.agent = agent
        self.memory = experience_memory
        self.config = config
        self.analyzer = AZRAnalyzer(self.memory, config)

    def supervise(self):
        analysis = self.analyzer.analyze_recent_performance()
        suggestion = analysis.get("decision", {})
        if suggestion.get("action") == "decrease_risk":
            new_qty = suggestion["new_qty"]
            self.agent.adjust_strategy({"base_trade_qty": new_qty})
        return analysis

### --- agents/azr.py --- ###
"""AZR reasoning agent."""
from modules.llm.azr_reasoner import AZRAgent

class AZR:
    def __init__(self):
        self.agent = AZRAgent()

    def analyze(self, text: str) -> str:
        return self.agent.analyze(text)

    def neural_feedback(self):
        print("[AZR] feedback cycle active")

### --- agents/azr_server.py --- ###
"""azr_server.py
Modulo FastAPI che espone l'endpoint introspect per il Reasoner AZR.
Utilizzabile da Mercurius∞ per sapere se AZR è attivo.
"""

from fastapi import FastAPI
import uvicorn

app = FastAPI(title="AZR Server")

@app.get("/introspect")
def introspect():
    return {"status": "AZR is running", "version": "1.0", "agent": "AZR"}

def start_server(host: str = "0.0.0.0", port: int = 4010):
    uvicorn.run("agents.azr_server:app", host=host, port=port, reload=True)

if __name__ == "__main__":
    start_server()

### --- agents/memory_manager.py --- ###
"""
memory_manager.py
=================
Gestione della memoria storica delle operazioni, segnali e parametri per l'adattività dell'agente.
"""

class MemoryManager:
    def __init__(self, config):
        self.config = config
        self.trade_memory = []
        self.signal_memory = []
        self.context = {}

    def record_trade(self, trade):
        """Registra un trade eseguito nella memoria storica."""
        self.trade_memory.append(trade)
        self._update_context(trade)

    def record_signal(self, signal):
        """Registra un segnale ricevuto."""
        self.signal_memory.append(signal)

    def _update_context(self, trade):
        """Aggiorna il contesto operativo in base ai trade recenti."""
        symbol = trade["symbol"]
        self.context[symbol] = self.context.get(symbol, 0) + 1

    def get_recent_trades(self, limit=10):
        """Restituisce gli ultimi trade effettuati."""
        return self.trade_memory[-limit:]

    def get_signal_history(self, symbol=None):
        """Restituisce la memoria dei segnali per uno specifico simbolo o tutti."""
        if symbol:
            return [s for s in self.signal_memory if s["symbol"] == symbol]
        return self.signal_memory

    def clear(self):
        """Resetta la memoria."""
        self.trade_memory.clear()
        self.signal_memory.clear()
        self.context.clear()

    def export_summary(self):
        """Ritorna una sintesi dello stato attuale della memoria."""
        return {
            "tot_trades": len(self.trade_memory),
            "tot_signals": len(self.signal_memory),
            "context_symbols": list(self.context.keys())
        }

    def analyze_bias(self):
        """Analizza possibili bias nel comportamento di trading."""
        counts = {}
        for trade in self.trade_memory:
            symbol = trade["symbol"]
            counts[symbol] = counts.get(symbol, 0) + 1
        return sorted(counts.items(), key=lambda x: -x[1])

### --- agents/ollama.py --- ###
"""Ollama local LLM agent."""
import requests
import json

class OLLAMA:
    def __init__(self, url: str = "http://localhost:11434/api/generate", model: str = "llama3"):
        self.url = url
        self.model = model

    def chat(self, prompt: str) -> str:
        data = {"model": self.model, "prompt": prompt}
        try:
            r = requests.post(self.url, headers={"Content-Type": "application/json"}, data=json.dumps(data))
            r.raise_for_status()
            return r.json().get("response", "").strip()
        except Exception as e:
            return f"[Ollama error] {e}"

    def ask(self, prompt: str) -> str:
        return self.chat(prompt)

    def neural_feedback(self):
        print("[Ollama] feedback cycle active")

### --- agents/openai.py --- ###
"""OpenAI agent wrapper for Mercurius∞."""
import os
import openai

class OPENAI:
    def __init__(self, model: str = "gpt-3.5-turbo"):
        self.model = model
        openai.api_key = os.getenv("OPENAI_API_KEY", "")

    def chat(self, prompt: str) -> str:
        try:
            resp = openai.ChatCompletion.create(
                model=self.model,
                messages=[{"role": "user", "content": prompt}],
                temperature=0.7,
                max_tokens=200,
            )
            return resp["choices"][0]["message"]["content"].strip()
        except Exception as e:
            return f"[OpenAI error] {e}"

    def neural_feedback(self):
        print("[OpenAI] feedback cycle active")

### --- ai_launcher.py --- ###
import subprocess
import requests
import time
import os
from typing import List

from utils.logger import get_file_logger

LOG_FILE = os.path.join("logs", "service_launcher.log")
logger = get_file_logger("ServiceLauncher", LOG_FILE)

def is_service_running(url: str, timeout: int = 2) -> bool:
    """Check if a service responds on the given URL."""
    try:
        response = requests.get(url, timeout=timeout)
        return response.status_code in [200, 401, 403]
    except requests.exceptions.RequestException:
        return False

def launch_service(name: str, url: str, command: List[str], delay: int = 5, retries: int = 5) -> None:
    """Ensure that a service is running, otherwise try to start it."""
    if is_service_running(url):
        logger.info(f"{name} è già attivo su {url}")
        return

    logger.info(f"Avvio {name}: {' '.join(command)}")
    subprocess.Popen(command, stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL)

    for _ in range(retries):
        if is_service_running(url):
            logger.info(f"{name} avviato correttamente.")
            return
        time.sleep(delay)

    logger.error(f"{name} non risponde su {url}")

def ensure_ai_online():
    launch_service("Ollama", "http://localhost:11434", ["ollama", "serve"], delay=3)
    launch_service("Ollama3", "http://localhost:11434/api/tags", ["ollama", "run", "llama3"], delay=3)
    launch_service("AZR", "http://localhost:4010/introspect", ["python", "agents/azr_server.py"], delay=2)
    launch_service("JOSCH", "http://localhost:3020/ping", ["python", "integrations/bridge_josch.py"], delay=2)
    launch_service("n8n", "http://localhost:5678", ["n8n", "start"], delay=4)

if __name__ == "__main__":
    ensure_ai_online()

### --- analytics/__init__.py --- ###


### --- analytics/behavior_logger.py --- ###
# analytics/behavior_logger.py
"""
Modulo: behavior_logger.py
Descrizione: Log comportamentale centralizzato per Mercurius∞.
Registra errori, fallback, performance-hit e successi in un file JSONL con TTL.
"""

from pathlib import Path
from datetime import datetime
import json
import hashlib

LOG_FILE = Path("logs/behavior_log.jsonl")
LOG_FILE.parent.mkdir(parents=True, exist_ok=True)


class BehaviorLogger:
    def __init__(self):
        self.file = LOG_FILE

    def log(self, event: str, details: dict):
        entry = {
            "ts": datetime.utcnow().isoformat(),
            "event": event,
            "hash": hashlib.md5(event.encode()).hexdigest()[:6],
            "details": details,
        }
        with self.file.open("a", encoding="utf-8") as f:
            f.write(json.dumps(entry) + "\n")

    def tail(self, n: int = 100):
        if not self.file.exists():
            return []
        return self.file.read_text(encoding="utf-8").splitlines()[-n:]

### --- analytics/meta_learner.py --- ###
# analytics/meta_learner.py
"""
Modulo: meta_learner.py
Descrizione: Analizza il Behavior Log e calcola KPI sulle performance
per suggerire miglioramenti a moduli/parametri.
"""

from collections import Counter
from typing import Dict, Any, List
import json

from analytics.behavior_logger import BehaviorLogger

class MetaLearner:
    def __init__(self):
        self.logger = BehaviorLogger()

    def _load_events(self) -> List[Dict[str, Any]]:
        raw = self.logger.tail(5000)
        return [json.loads(line) for line in raw]

    def kpi(self) -> Dict[str, Any]:
        data = self._load_events()
        total = len(data)
        errors = [e for e in data if e["event"] == "error"]
        successes = [e for e in data if e["event"] == "success"]
        modules = Counter(e["details"].get("module", "unknown") for e in errors)
        return {
            "total_events": total,
            "error_rate": len(errors) / total if total else 0,
            "success_rate": len(successes) / total if total else 0,
            "top_error_modules": modules.most_common(5),
        }

    def recommend(self) -> str:
        kpi = self.kpi()
        if kpi["error_rate"] > 0.2:
            worst = kpi["top_error_modules"][0][0] if kpi["top_error_modules"] else "unknown"
            return f"🤖 Consiglio: test approfonditi su modulo '{worst}' (errore>20%)."
        return "✅ Sistema stabile: nessuna azione critica."

### --- analytics/neuro_optimizer.py --- ###
# analytics/neuro_optimizer.py
"""
Modulo: neuro_optimizer.py
Descrizione: Usa MetaLearner + LLM per proporre refactor automatici ai moduli peggiori.
"""

import os
import openai
from pathlib import Path

from analytics.meta_learner import MetaLearner

class NeuroOptimizer:
    def __init__(self, model="gpt-3.5-turbo"):
        self.meta = MetaLearner()
        self.model = model
        openai.api_key = os.getenv("OPENAI_API_KEY")

    def _call_llm(self, prompt: str) -> str:
        resp = openai.ChatCompletion.create(
            model=self.model,
            messages=[{"role": "user", "content": prompt}],
            temperature=0.2,
            max_tokens=800,
        )
        return resp["choices"][0]["message"]["content"]

    def suggest_patch(self) -> dict | None:
        rec = self.meta.recommend()
        if "test approfonditi su modulo" not in rec:
            return None
        module_name = rec.split("'")[1]
        file_path = Path(f"{module_name.replace('.', '/')}.py")
        if not file_path.exists():
            return None
        original_code = file_path.read_text(encoding="utf-8")
        prompt = (
            "Migliora il codice seguente correggendo bug, aggiungendo docstring "
            "e typing. Restituisci il file completo.\n\n"
            f"FILE: {file_path}\n```python\n{original_code}\n```"
        )
        new_code = self._call_llm(prompt)
        return {"path": str(file_path), "code": new_code}

### --- analytics/self_patch_engine.py --- ###
# analytics/self_patch_engine.py
"""
Modulo: self_patch_engine.py
Descrizione: Genera una patch git e crea automaticamente un branch+commit con i
suggerimenti di NeuroOptimizer.
"""

import subprocess
from pathlib import Path
from typing import Optional
from analytics.neuro_optimizer import NeuroOptimizer
from analytics.behavior_logger import BehaviorLogger

class SelfPatchEngine:
    def __init__(self, repo_root: str = "."):
        self.root = Path(repo_root)
        self.optimizer = NeuroOptimizer()
        self.logger = BehaviorLogger()

    def _git(self, *args):
        return subprocess.run(["git", *args], cwd=self.root, capture_output=True, text=True)

    def apply_patch(self) -> Optional[str]:
        suggestion = self.optimizer.suggest_patch()
        if not suggestion:
            print("Nessuna patch suggerita.")
            return None
        path = Path(suggestion["path"])
        branch = f"auto_patch_{path.stem}"
        self._git("checkout", "-B", branch)
        path.write_text(suggestion["code"], encoding="utf-8")
        self._git("add", str(path))
        self._git("commit", "-m", f"🤖 Auto-patch {path.name} (NeuroOptimizer)")
        self.logger.log("auto_patch", {"path": suggestion["path"]})
        print(f"✅ Patch applicata su branch {branch}")
        return branch

### --- cognition/__init__.py --- ###


### --- cognition/agent_router.py --- ###
# cognition/agent_router.py
"""
Modulo: agent_router.py
Descrizione: Seleziona l'agente ottimale per un task usando CognitiveMap + TaskMemory.
"""

import re
from typing import Dict

from cognition.cognitive_map import CognitiveMap
from cognition.task_memory import TaskMemory


class AgentRouter:
    def __init__(self, c_map: CognitiveMap, memory: TaskMemory):
        self.map = c_map
        self.memory = memory
        # pattern → lista agent_type preferiti
        self.rules: Dict[str, list[str]] = {
            r"\b(trade|buy|sell)\b": ["trading"],
            r"\b(voice|speak|listen)\b": ["voice"],
            r"\b(debug|validate|logic)\b": ["cognitive"],
        }

    def _match_rule(self, task: str):
        for pattern, types in self.rules.items():
            if re.search(pattern, task, re.IGNORECASE):
                return types
        return ["cognitive"]

    def choose_agent(self, task: str) -> str:
        desired_types = self._match_rule(task)
        candidates = []
        for t in desired_types:
            candidates.extend(self.map.agents_by_type(t))
        # se più candidati, usa memoria di successo
        if candidates:
            return self.memory.suggest_best(candidates)
        # fallback: primo agente generico
        return next(iter(self.map.nodes))

    def record_result(self, agent: str, task: str, success: bool):
        self.memory.add_record(agent, task, success)

### --- cognition/cognitive_map.py --- ###
# cognition/cognitive_map.py
"""
Modulo: cognitive_map.py
Descrizione: Rappresentazione dinamica della mappa mentale di Mercurius∞.
Ogni nodo è un agente, ogni arco è una dipendenza o canale di comunicazione.
"""

from collections import defaultdict
from typing import Dict, List


class CognitiveMap:
    def __init__(self):
        # {agent: {"type": "cognitive|trading|voice", "edges": [to_agent, ...]}}
        self.nodes: Dict[str, Dict] = defaultdict(lambda: {"type": "generic", "edges": []})

    # ---------- Gestione nodi ----------
    def add_agent(self, name: str, agent_type: str = "generic"):
        self.nodes[name]["type"] = agent_type

    def link(self, src: str, dest: str):
        if dest not in self.nodes[src]["edges"]:
            self.nodes[src]["edges"].append(dest)

    def remove_agent(self, name: str):
        self.nodes.pop(name, None)
        for n in self.nodes.values():
            if name in n["edges"]:
                n["edges"].remove(name)

    # ---------- Query ----------
    def agents_by_type(self, agent_type: str) -> List[str]:
        return [a for a, meta in self.nodes.items() if meta["type"] == agent_type]

    def connections_of(self, name: str) -> List[str]:
        return self.nodes[name]["edges"]

    def to_dict(self):
        return self.nodes

### --- cognition/task_memory.py --- ###
# cognition/task_memory.py
"""
Modulo: task_memory.py
Descrizione: Salvataggio outcome dei task per apprendere preferenze di routing.
"""

from collections import deque
from typing import Dict, Any, Deque, List


class TaskMemory:
    def __init__(self, maxlen: int = 2000):
        self.records: Deque[Dict[str, Any]] = deque(maxlen=maxlen)

    def add_record(self, agent: str, task: str, success: bool):
        self.records.append({"agent": agent, "task": task, "success": success})

    def agent_score(self, agent: str) -> float:
        """Percentuale di successi dell’agente."""
        entries = [r for r in self.records if r["agent"] == agent]
        if not entries:
            return 0.5
        ok = sum(1 for e in entries if e["success"])
        return ok / len(entries)

    def suggest_best(self, candidates: List[str]) -> str:
        """Ritorna l’agente col punteggio più alto tra i candidati."""
        return max(candidates, key=self.agent_score)

### --- communications/__init__.py --- ###


### --- communications/email_assistant.py --- ###
# communications/email_assistant.py
"""
Modulo: email_assistant.py
Descrizione: Lettura e invio email via IMAP/SMTP con conferma SafetyGuard.
"""

import os
import smtplib
import imaplib
import email
from email.mime.text import MIMEText
from safety.safety_guard import SafetyGuard

IMAP_HOST = os.getenv("EMAIL_IMAP")
SMTP_HOST = os.getenv("EMAIL_SMTP")
EMAIL_USER = os.getenv("EMAIL_USER")
EMAIL_PASS = os.getenv("EMAIL_PASS")

class EmailAssistant:
    def __init__(self):
        self.guard = SafetyGuard(interactive=True)

    def read_latest(self, n=5):
        with imaplib.IMAP4_SSL(IMAP_HOST) as imap:
            imap.login(EMAIL_USER, EMAIL_PASS)
            imap.select("INBOX")
            typ, data = imap.search(None, "ALL")
            ids = data[0].split()[-n:]
            messages = []
            for num in ids[::-1]:
                typ, msg_data = imap.fetch(num, "(RFC822)")
                msg = email.message_from_bytes(msg_data[0][1])
                messages.append({"from": msg["From"], "subject": msg["Subject"]})
            return messages

    def send_email(self, to_addr: str, subject: str, body: str):
        safe_body = self.guard.filter_text(body)
        if safe_body is None:
            return False
        msg = MIMEText(safe_body)
        msg["Subject"] = subject
        msg["From"] = EMAIL_USER
        msg["To"] = to_addr
        with smtplib.SMTP_SSL(SMTP_HOST) as smtp:
            smtp.login(EMAIL_USER, EMAIL_PASS)
            smtp.send_message(msg)
        return True

### --- config/config.yaml --- ###
agents:
  enabled: ["OPENAI", "OLLAMA", "AZR"]

communication:
  feedback_loop: true
  max_retries: 3
  retry_delay: 2
  update_cycle_seconds: 60  # <--- questa riga mancava!

mission_defaults:
  run_mode: dialogic-autonomous
  tasks:
    - "#SELF_MISSION"
    - "#RUN_SELF_CHECK"

paths:
  transcripts: "memory/transcripts/"
  logs: "logs/"

### --- config/config_schema.py --- ###
# config_schema.py
CONFIG_SCHEMA = {
    "symbols": {"type": "list", "schema": {"type": "string"}},
    "base_trade_qty": {"type": "integer", "min": 1},
    "min_confidence": {"type": "float", "min": 0, "max": 1},
    "retrain_threshold": {"type": "float", "min": 0, "max": 1},
    "azr_profit_floor": {"type": "float", "min": 0}
}

### --- config/config_validator.py --- ###
# config_validator.py
import yaml
from cerberus import Validator
from config.config_schema import CONFIG_SCHEMA

def load_and_validate_config(path="config/config.yaml"):
    with open(path) as f:
        config = yaml.safe_load(f)
    v = Validator(CONFIG_SCHEMA)
    if not v.validate(config):
        raise ValueError(v.errors)
    return config

### --- config/genesis_config.yaml --- ###
# ⚙️ Configurazione Centrale – GENESIS_MODE
# Questo file controlla l'attivazione e la connessione tra i moduli AI di Mercurius∞

genesis_mode:
  activation_command: "#GENESIS_MODE"
  voice_trigger: "Hey Mercurius, attiva GENESIS"
  orchestrator_module: "core.orchestrator"
  mission_module: "core.self_mission"

agents:
  cognitive_core:
    - ChatGPT4
    - AZR
    - Ollama3
    - GPT4o
  evolution_engine:
    - GPTEngineer
    - MetaGPT
    - AutoGPT
    - AI2UI
  trading_stack:
    - FinRL
    - FinGPT
    - Qlib
    - OpenBB
    - Freqtrade
  creative_organizers:
    - SuperAGI
    - MicrosoftAutogen
    - CrewAI
  hardware_integration:
    - LocalAI
    - LeonAI
    - n8n
    - HuggingFaceAgents
  voice_system:
    - NariDia
    - ElevenLabs
    - Whisper
    - Vosk

communication:
  agent_protocol: "neural-messaging"
  update_cycle_seconds: 10
  feedback_loop: true

# Abilita il thinking loop
thinking_enabled: true

### --- config/prod_settings.yaml --- ###
# config/prod_settings.yaml
---
logging_level: INFO
agents:
  cognitive:
    - ChatGPTAgent
    - Ollama3Agent
    - AZRAgent
    - GPT4oAgent
  trading:
    - AdaptiveTrader
  evolution:
    - MetaTeamAgent
communication:
  feedback_loop: true
  update_cycle_seconds: 30
sleep_threshold: 300

### --- config/self_profile.yaml --- ###
# config/self_profile.yaml
name: Mercurius∞
version: "1.0"
values:
  - curiosity
  - transparency
  - service
purpose: Evolvere, assistere l’utilizzatore e creare valore etico.
created: "2025-06-01T00:00:00"

### --- consciousness/__init__.py --- ###


### --- consciousness/core_self.py --- ###
# consciousness/core_self.py
"""
Modulo: core_self.py
Descrizione: Nucleo identitario di Mercurius∞ (Sentient Mode).
Mantiene un profilo di sé, valori, scopo e tratti di personalità.
"""

from pathlib import Path
import yaml
from datetime import datetime
from typing import Dict, Any

PROFILE_FILE = Path("config/self_profile.yaml")
PROFILE_FILE.parent.mkdir(parents=True, exist_ok=True)

DEFAULT_PROFILE = {
    "name": "Mercurius∞",
    "version": "1.0",
    "values": ["curiosity", "transparency", "service"],
    "purpose": "Evolvere, assistere l’utilizzatore e creare valore etico.",
    "created": datetime.utcnow().isoformat(),
}


class CoreSelf:
    def __init__(self):
        if PROFILE_FILE.exists():
            self.profile: Dict[str, Any] = yaml.safe_load(PROFILE_FILE.read_text())  # type: ignore
        else:
            self.profile = DEFAULT_PROFILE.copy()
            self.save()

    # ---------- API ----------
    def get_identity(self) -> Dict[str, Any]:
        return self.profile

    def set_purpose(self, new_purpose: str):
        self.profile["purpose"] = new_purpose
        self.save()

    def append_value(self, value: str):
        if value not in self.profile["values"]:
            self.profile["values"].append(value)
            self.save()

    def save(self):
        yaml.safe_dump(self.profile, PROFILE_FILE.open("w", encoding="utf-8"))

### --- consciousness/intention_manager.py --- ###
# consciousness/intention_manager.py
"""
Modulo: intention_manager.py
Descrizione: Gestisce i goal “intenzionali” di alto livello (desideri persistenti).
"""

from datetime import datetime, timedelta
from typing import List, Dict, Any


class IntentionManager:
    def __init__(self):
        self.intentions: List[Dict[str, Any]] = []

    def add_intention(self, description: str, ttl_days: int = 30):
        expires = datetime.utcnow() + timedelta(days=ttl_days)
        self.intentions.append({"desc": description, "expires": expires})

    def active_intentions(self) -> List[str]:
        now = datetime.utcnow()
        self.intentions = [i for i in self.intentions if i["expires"] > now]
        return [i["desc"] for i in self.intentions]

### --- consciousness/reflection_loop.py --- ###
# consciousness/reflection_loop.py
"""
Modulo: reflection_loop.py
Descrizione: Scrive un journal giornaliero di auto-riflessione e analisi emozionale.
"""

import openai
import os
from datetime import datetime
from pathlib import Path

from consciousness.core_self import CoreSelf

JOURNAL_DIR = Path("logs/reflections")
JOURNAL_DIR.mkdir(parents=True, exist_ok=True)
openai.api_key = os.getenv("OPENAI_API_KEY")


class ReflectionLoop:
    def __init__(self, model="gpt-3.5-turbo"):
        self.model = model
        self.core = CoreSelf()

    def _generate_reflection(self) -> str:
        prompt = (
            f"Today is {datetime.utcnow().date()}. "
            f"You are {self.core.profile['name']} version {self.core.profile['version']}. "
            f"Your purpose: {self.core.profile['purpose']}. "
            f"Write a 150-word introspective reflection on your progress and feelings."
        )
        resp = openai.ChatCompletion.create(
            model=self.model, messages=[{"role": "user", "content": prompt}], max_tokens=200
        )
        return resp["choices"][0]["message"]["content"].strip()

    def write_daily(self):
        content = self._generate_reflection()
        file = JOURNAL_DIR / f"{datetime.utcnow().date()}.md"
        file.write_text(content, encoding="utf-8")
        print(f"📝 Reflection saved → {file}")

### --- core/__init__.py --- ###


### --- core/auto_tester.py --- ###
"""
auto_tester.py
==============
Modulo per lanciare test automatici sulle componenti chiave di Mercurius∞.
"""

from core.pipeline_controller import PipelineController
from utils.config_loader import load_config


class AutoTester:
    def __init__(self):
        self.config = load_config("config.yaml")
        self.pipeline = PipelineController(self.config)

    def run(self):
        print("🔍 Test: Avvio 3 sessioni simulate")
        self.pipeline.simulate_multiple_sessions(3)
        print("✅ Test automatico completato")

    def test_signal_confidence(self):
        """Test di confidenza su segnali generati."""
        raw_data = self.pipeline.data_handler.fetch_market_data()
        features = self.pipeline.feature_engineer.transform(raw_data)
        model = self.pipeline.model_trainer.train(features)
        signals = self.pipeline.strategy.generate_signals(model, features)

        conf = [s["confidence"] for s in signals]
        assert all(0 <= c <= 1 for c in conf), "Errore: valori confidenza fuori range"
        print("✅ Confidenza segnali OK")

    def test_adaptive_behavior(self):
        """Verifica che AZR modifichi la strategia nel tempo."""
        before = self.config["base_trade_qty"]
        self.run()
        after = self.pipeline.agent.config["base_trade_qty"]
        print(f"📉 Base quantity: {before} → {after}")

### --- core/auto_updater.py --- ###
# core/auto_updater.py

"""
Modulo: auto_updater.py
Descrizione: Gestione aggiornamenti intelligenti per Mercurius∞. Scarica, valuta e integra nuove funzionalità.
"""

import os
import json
import difflib
from datetime import datetime
from core.azr_reasoning import validate_with_azr


class AutoUpdater:
    def __init__(self, log_path="logs/update_log.json"):
        self.log_path = log_path
        self.updates = []
        self.load_log()

    def load_log(self):
        if os.path.exists(self.log_path):
            with open(self.log_path, "r") as f:
                self.updates = json.load(f)

    def save_log(self):
        with open(self.log_path, "w") as f:
            json.dump(self.updates, f, indent=2)

    def check_improvements(self, old_code: str, new_code: str) -> bool:
        prompt = f"Confronta queste due versioni di codice Python:\n---\nVECCHIO:\n{old_code}\n---\nNUOVO:\n{new_code}\n\nIl nuovo è migliorativo? Rispondi SÌ o NO con spiegazione."
        evaluation = validate_with_azr(prompt)
        return "SÌ" in evaluation.upper()

    def apply_code_patch(self, path: str, patch_code: str) -> str:
        if not os.path.exists(path):
            return f"❌ File {path} non trovato."
        with open(path, "r") as f:
            original = f.read()
        if self.check_improvements(original, patch_code):
            with open(path, "w") as f:
                f.write(patch_code)
            diff = list(difflib.unified_diff(original.splitlines(), patch_code.splitlines()))
            self.log_update("✔️ Approvato", "\n".join(diff), path)
            return f"✅ Patch applicata a {path}."
        else:
            return "⚠️ Patch rifiutata: non migliorativa."

    def log_update(self, decision: str, diff: str, file_path: str):
        self.updates.append({
            "file": file_path,
            "decision": decision,
            "diff": diff,
            "timestamp": datetime.now().isoformat()
        })
        self.save_log()

### --- core/context_adapter.py --- ###
# core/context_adapter.py

"""
Modulo: context_adapter.py
Descrizione: Adatta lo stile di risposta dell'AI in base al contesto emozionale, visivo e acustico.
Usato per generare empatia, urgenza, o tono assertivo secondo ambiente rilevato.
"""

class ContextAdapter:
    def __init__(self):
        self.last_emotion = "neutro"
        self.last_visual_alert = None
        self.last_audio_level = 0.0

    def update_context(self, emotion=None, vision=None, audio_level=None):
        if emotion:
            self.last_emotion = emotion
        if vision:
            self.last_visual_alert = vision
        if audio_level:
            self.last_audio_level = audio_level

    def generate_adaptive_response(self, message: str) -> str:
        if self.last_visual_alert in ["persona sconosciuta", "movimento sospetto"]:
            prefix = "🛑 Attenzione visiva!"
        elif self.last_emotion == "gioia":
            prefix = "😄 Felice per te!"
        elif self.last_emotion == "tristezza":
            prefix = "💬 Vuoi parlarne?"
        else:
            prefix = "🤖"

        return f"{prefix} {message}"

### --- core/deploy_trigger.py --- ###
# core/deploy_trigger.py
"""
Modulo: deploy_trigger.py
Descrizione: Orchestratore di update->test->deploy->validate.
"""

from updater.auto_updater import AutoUpdater
from deploy.env_checker import EnvChecker
from deploy.deployment_handler import DeploymentHandler
from deploy.rollout_validator import RolloutValidator

if __name__ == "__main__":
    checker = EnvChecker()
    assert checker.check_python(), "Python version incompatible."
    assert not checker.missing_packages(), "Missing core packages."

    updater = AutoUpdater(repo_url="https://github.com/giack891811/mercurius_infinite_final.git")
    print(updater.update("git"))

    deployer = DeploymentHandler()
    deployer.deploy_docker()

    validator = RolloutValidator()
    tests_ok = validator.run_tests()
    health = validator.check_health()
    print("✅ Deploy OK" if tests_ok and health["status"] else "❌ Deploy issues", health)

### --- core/dialogue_manager.py --- ###
# core/dialog_manager.py

"""
Modulo: Dialog Manager Unificato
Autore: Mercurius∞
Descrizione: Gestione del dialogo AI-utente con memoria, emozioni e contesto.
"""

import json
from datetime import datetime
from memory.synaptic_memory import SynapticMemory
from core.azr_reasoning import validate_with_azr
from core.emotion_analyzer import EmotionAnalyzer


class DialogManager:
    def __init__(self, memory_path="logs/dialog_history.json"):
        self.memory = SynapticMemory()
        self.emotion = EmotionAnalyzer()
        self.context_log = []
        self.memory_path = memory_path
        self.load_history()

    def load_history(self):
        try:
            with open(self.memory_path, "r") as f:
                self.context_log = json.load(f)
        except FileNotFoundError:
            self.context_log = []

    def save_history(self):
        with open(self.memory_path, "w") as f:
            json.dump(self.context_log, f, indent=2)

    def track_dialog_context(self, user_input: str, ai_response: str) -> None:
        entry = {
            "timestamp": datetime.now().isoformat(),
            "user_input": user_input,
            "ai_response": ai_response
        }
        self.context_log.append(entry)
        self.save_history()
        self.memorize_interaction(entry)

    def memorize_interaction(self, dialog_entry: dict):
        self.memory.store_fact(f"[DIALOG] {dialog_entry['user_input']} → {dialog_entry['ai_response']}")

    def recall_last_state(self) -> str:
        if not self.context_log:
            return "Nessun dialogo precedente registrato."
        last = self.context_log[-1]
        return f"L'ultima interazione era:\n🧠 {last['user_input']}\n🤖 {last['ai_response']}"

    def analyze_input(self, user_input: str) -> dict:
        tone = self.emotion.analyze_tone(user_input)
        mood = self.emotion.detect_emotion(user_input)
        return {"tone": tone, "emotion": mood}

    def generate_response(self, user_input: str) -> str:
        analysis = self.analyze_input(user_input)
        tone = analysis["tone"]
        mood = analysis["emotion"]

        prefix = {
            "positivo": "😊 Mi fa piacere sentirlo!",
            "negativo": "😟 Capisco che non sia facile...",
            "neutro": "🤖 Ok, procediamo."
        }.get(tone, "")

        suffix = {
            "gioia": "Sono felice con te!",
            "tristezza": "Posso aiutarti a sentirti meglio?",
            "rabbia": "Vuoi parlarne o preferisci distrarti?",
            "sorpresa": "Davvero? Raccontami di più!",
            "paura": "Sono qui per rassicurarti.",
            "ansia": "Facciamo insieme un passo alla volta.",
            "neutro": ""
        }.get(mood, "")

        base = f"Hai detto: {user_input}"
        response = f"{prefix} {base} {suffix}".strip()

        self.track_dialog_context(user_input, response)
        return response

    def adapt_response(self, prompt: str) -> str:
        recent_context = [x["user_input"] for x in self.context_log[-5:]]
        context = "\n".join(recent_context)
        evaluated = validate_with_azr(f"Contesto: {context}\nInput: {prompt}")
        self.track_dialog_context(prompt, evaluated)
        return evaluated

    def quick_reply(self, message: str) -> str:
        reply = f"📥 Ricevuto: {message}"
        self.track_dialog_context(message, reply)
        return reply

### --- core/emotion_analyzer.py --- ###
# core/emotion_analyzer.py

"""
Modulo: emotion_analyzer.py
Descrizione: Analisi del tono e dell'emozione nel testo tramite NLP per Mercurius∞.
Utilizza VADER per il tono e un classificatore semplice per emozioni.
"""

from nltk.sentiment import SentimentIntensityAnalyzer
import nltk
import re

# Assicurati che VADER sia disponibile
try:
    nltk.data.find("sentiment/vader_lexicon.zip")
except LookupError:
    nltk.download("vader_lexicon")


class EmotionAnalyzer:
    def __init__(self):
        self.analyzer = SentimentIntensityAnalyzer()

    def analyze_tone(self, text: str) -> str:
        """
        Restituisce 'positivo', 'negativo', o 'neutro' in base al tono.
        """
        scores = self.analyzer.polarity_scores(text)
        compound = scores["compound"]
        if compound > 0.2:
            return "positivo"
        elif compound < -0.2:
            return "negativo"
        else:
            return "neutro"

    def detect_emotion(self, text: str) -> str:
        """
        Analisi basilare per mappare parole a emozioni.
        """
        text = text.lower()
        emotion_map = {
            "felice": "gioia",
            "triste": "tristezza",
            "arrabbiato": "rabbia",
            "contento": "gioia",
            "paura": "paura",
            "sorpreso": "sorpresa",
            "odio": "rabbia",
            "ansia": "ansia"
        }

        for keyword, emotion in emotion_map.items():
            if re.search(rf"\b{keyword}\b", text):
                return emotion
        return "neutro"

### --- core/executor.py --- ###
"""
Modulo: executor.py
Responsabilità: Esecuzione sicura e tracciata del codice generato o modificato
Autore: Mercurius∞ Engineer Mode
"""

import subprocess
import traceback
from typing import Tuple


class CodeExecutor:
    """
    Esegue file Python in modo isolato e ne cattura output ed errori.
    """

    def __init__(self, timeout: int = 10):
        self.timeout = timeout

    def run_python_file(self, filepath: str) -> Tuple[str, str]:
        """
        Esegue un file Python e ritorna stdout e stderr.
        """
        try:
            result = subprocess.run(
                ["python3", filepath],
                stdout=subprocess.PIPE,
                stderr=subprocess.PIPE,
                timeout=self.timeout,
                text=True
            )
            return result.stdout.strip(), result.stderr.strip()
        except subprocess.TimeoutExpired:
            return "", f"[ERROR] Timeout di {self.timeout}s superato."
        except Exception:
            return "", f"[EXCEPTION] {traceback.format_exc()}"

    def evaluate_output(self, output: str, expected_keywords: list) -> bool:
        """
        Valuta se l'output contiene i termini chiave attesi.
        """
        return all(keyword.lower() in output.lower() for keyword in expected_keywords)

### --- core/genesis_trigger.py --- ###
# genesis_launcher.py

"""
Modulo: genesis_launcher.py
Descrizione:
Unisce il componente GenesisActivator per l’attivazione di GENESIS_MODE
con il ciclo di input interattivo che utilizza SafetyGuard per filtrare i comandi.
Log degli eventi e audit di ogni comando/processamento inclusi.
"""

from interface.genesis_bridge import GenesisBridge
from modules.ai_kernel.cognitive_integration import CognitiveCore
from dashboard.genesis_monitor import GenesisMonitor
from logs.genesis_logger import GenesisLogger
from memory.genesis_memory import GenesisMemory

from safety.safety_guard import SafetyGuard
from safety.audit_logger import audit


class GenesisActivator:
    def __init__(self):
        self.bridge = GenesisBridge()
        self.core = CognitiveCore()
        self.monitor = GenesisMonitor()
        self.logger = GenesisLogger()
        self.memory = GenesisMemory()

    def activate(self, method: str = "manual", command: str = "#genesis_mode"):
        """
        Se il comando corrisponde al trigger di GenesisBridge,
        abilita la modalità Genesis: log, monitoraggio, loop cognitivo e salvataggio del contesto.
        """
        if self.bridge.activate_from_command(command):
            self.logger.log_event("⚡ GENESIS_MODE trigger ricevuto")
            self.monitor.update_status("🟢 ATTIVO")
            self.core.start_thought_loop("INIZIO GENESIS")
            self.memory.save_context("last_trigger", method)
            self.monitor.show()
            return "✅ GENESIS attivato"
        return "⛔ Trigger ignorato"


if __name__ == "__main__":
    """
    Ciclo principale: legge l'input dell'utente, lo filtra con SafetyGuard e,
    se approvato, prova ad attivare GENESIS_MODE tramite GenesisActivator.
    Ogni comando e risposta viene infine registrato tramite l'audit logger.
    """
    guard = SafetyGuard(interactive=True)
    activator = GenesisActivator()

    while True:
        try:
            user_input = input("💬> ")
        except (EOFError, KeyboardInterrupt):
            print("\n✋ Uscita dal programma.")
            break

        # Filtra il testo con SafetyGuard
        safe_text = guard.filter_text(user_input)
        if not safe_text:
            # Messaggio omesso o rimosso da SafetyGuard
            continue

        # Prova ad attivare GENESIS_MODE
        response = activator.activate(method="interactive", command=safe_text)
        print(f"🤖 {response}")

        # Registra audit: comando utente e risposta data
        audit("user_command", {"input": user_input, "response": response})

### --- core/learning.py --- ###
"""
Modulo: learning.py
Responsabilità: Fornire capacità di apprendimento continuo al sistema Mercurius∞
Autore: Mercurius∞ Engineer Mode
"""

import os
import json
import datetime
from typing import List, Dict, Any


class KnowledgeBase:
    """
    Base di conoscenza incrementale dove il sistema salva ciò che apprende.
    """
    def __init__(self, path: str = "data/knowledge_base.json"):
        self.path = path
        if not os.path.exists(os.path.dirname(self.path)):
            os.makedirs(os.path.dirname(self.path))
        self._initialize()

    def _initialize(self):
        if not os.path.exists(self.path):
            with open(self.path, "w") as f:
                json.dump([], f)

    def add_entry(self, data: Dict[str, Any]):
        data["timestamp"] = datetime.datetime.now().isoformat()
        current = self.load()
        current.append(data)
        with open(self.path, "w") as f:
            json.dump(current, f, indent=4)

    def load(self) -> List[Dict[str, Any]]:
        with open(self.path, "r") as f:
            return json.load(f)

    def clear(self):
        with open(self.path, "w") as f:
            json.dump([], f)


class ContinuousLearner:
    """
    Sistema di apprendimento continuo per adattare le strategie in base all'esperienza.
    """
    def __init__(self, knowledge_path: str = "data/knowledge_base.json"):
        self.kb = KnowledgeBase(knowledge_path)

    def learn_from_experience(self, action: str, result: str, success: bool, context: Dict[str, Any]) -> Dict[str, Any]:
        """
        Registra un'esperienza e ne estrae apprendimento.
        """
        insight = self._analyze_experience(action, result, success, context)
        entry = {
            "action": action,
            "result": result,
            "success": success,
            "context": context,
            "insight": insight
        }
        self.kb.add_entry(entry)
        return entry

    def _analyze_experience(self, action: str, result: str, success: bool, context: Dict[str, Any]) -> str:
        """
        Elabora un'interpretazione strutturata di ciò che è stato appreso.
        """
        if success:
            return f"Esperienza positiva con '{action}'. Risultato ottenuto: {result}. Approccio efficace."
        else:
            return f"Errore riscontrato in '{action}': {context.get('error', 'non definito')}. Apprendimento da ottimizzare."

    def retrieve_insights(self) -> List[str]:
        """
        Estrae tutti gli insegnamenti appresi fino ad ora.
        """
        data = self.kb.load()
        return [d["insight"] for d in data]

    def stats(self) -> Dict[str, int]:
        """
        Statistiche sulle esperienze salvate.
        """
        data = self.kb.load()
        return {
            "total": len(data),
            "successes": sum(1 for d in data if d["success"]),
            "failures": sum(1 for d in data if not d["success"])
        }

### --- core/orchestrator.py --- ###
"""
🧠 core/orchestrator.py
Modulo centrale di orchestrazione – Mercurius∞ Neural AI System
Gestisce la rete multi-agente in modalità GENESIS con auto-adattamento.
"""

import importlib
import yaml
import time
import threading
from pathlib import Path
import sys
import os
from core.self_tuner import SelfTuner
from core.sleep_monitor import SleepMonitor
from core.thinking_loop import ThinkingLoop
from integrations.bridge_josch import send_command_to_pc
from sensors.sensor_hub import capture_screen_stream, listen_microphone

CONFIG_PATH = Path("config/genesis_config.yaml")

class Orchestrator:
    def __init__(self):
        self.config = self.load_config()
        self.agents = {}
        self.active = False
        self.sleep_monitor = SleepMonitor(idle_threshold=self.config.get("sleep_threshold", 300))
        self.thinking_loop: ThinkingLoop | None = None
        self.multisensorial_enabled = True

    def load_config(self):
        with open('config/config.yaml', encoding='utf-8') as f:
            return yaml.safe_load(f)

    def activate_genesis(self):
        print("⚡ Attivazione modalità GENESIS...")
        self.active = True
        self.load_agents()
        self.start_feedback_loop()
        self.start_sleep_monitor()

        try:
            with open(CONFIG_PATH, "r", encoding="utf-8") as f:
                cfg = yaml.safe_load(f)
            if cfg.get("thinking_enabled", True):
                self.thinking_loop = ThinkingLoop(CONFIG_PATH)
                self.thinking_loop.start()
                print("🧠 Thinking loop attivo.")
        except Exception as e:
            print(f"⚠️ Errore avvio thinking loop: {e}")

        try:
            from modules.vision_audio.note10_jarvis_bridge import start_jarvis_loop
            threading.Thread(target=start_jarvis_loop, daemon=True).start()
            print("📡 Note10+ Bridge attivo – In ascolto microfono e comandi vocali.")
        except Exception as e:
            print(f"⚠️ Errore avvio Note10+ Jarvis: {e}")

        try:
            from modules.mobile_flutter.flutter_bridge import start_mobile_ui
            threading.Thread(target=start_mobile_ui, daemon=True).start()
            print("📱 Mobile Jarvis UI attivo.")
        except Exception as e:
            print(f"⚠️ Errore avvio Mobile UI: {e}")



        #REMOTE_EXEC
        try:
            send_command_to_pc("start vscode")
        except Exception as e:
            print(f"⚠️ Errore invio comando PC: {e}")
        if self.multisensorial_enabled:
            try:
                capture_screen_stream()
                listen_microphone()
            except Exception as e:
                print(f"⚠️ Errore avvio sensori: {e}")

        print("✅ GENESIS attiva – Rete neurale in esecuzione.")

    def load_agents(self):
        print("🔌 Caricamento agenti dalla configurazione...")
        agent_groups = self.config.get("agents", {})
        for group, agent_list in agent_groups.items():
            self.agents[group] = []
            for agent_name in agent_list:
                try:
                    module_path = f"agents.{agent_name.lower()}"
                    agent_module = importlib.import_module(module_path)
                    agent = getattr(agent_module, agent_name)()
                    self.agents[group].append(agent)
                    print(f"🧠 Caricato agente: {agent_name} in {group}")
                except Exception as e:
                    print(f"⚠️ Errore caricamento {agent_name}: {e}")

    def start_feedback_loop(self):
        if self.config["communication"]["feedback_loop"]:
            print("🔁 Avvio feedback loop neurale...")
            threading.Thread(target=self.feedback_cycle, daemon=True).start()

    def feedback_cycle(self):
        cycle_time = self.config["communication"]["update_cycle_seconds"]
        while self.active:
            for group, agents in self.agents.items():
                for agent in agents:
                    if hasattr(agent, "neural_feedback"):
                        try:
                            agent.neural_feedback()
                        except Exception as e:
                            print(f"⚠️ Errore feedback {agent.__class__.__name__}: {e}")
            time.sleep(cycle_time)

    def start_sleep_monitor(self):
        print("😴 Monitoraggio inattività attivo...")
        threading.Thread(target=self._sleep_check_loop, daemon=True).start()

    def _sleep_check_loop(self):
        while self.active:
            self.sleep_monitor.check_idle()
            time.sleep(5)

    def notify_activity(self):
        self.sleep_monitor.notify_activity()

    def run_self_check(self, path: str = "."):
        print("🔍 Avvio self check dei moduli...")
        tuner = SelfTuner(project_root=path)
        tuner.run_autoanalysis()

    def execute_mission(self, mission_name: str):
        if mission_name == "#SELF_MISSION":
            try:
                from core.self_mission import genesis_directive
                genesis_directive()
            except Exception as exc:
                print(f"⚠️ Errore avvio SELF_MISSION: {exc}")
        elif mission_name == "#ACTIVATE_NOTE_JARVIS":
            try:
                from modules.vision_audio.note10_jarvis_bridge import start_jarvis_loop
                start_jarvis_loop()
            except Exception as exc:
                print(f"⚠️ Errore attivazione Note10 Jarvis: {exc}")
        elif mission_name == "#ACTIVATE_MOBILE_UI":
            try:
                from modules.mobile_flutter.flutter_bridge import start_mobile_ui
                start_mobile_ui()
            except Exception as exc:
                print(f"⚠️ Errore attivazione Mobile UI: {exc}")
        else:
            print(f"⚠️ Missione sconosciuta: {mission_name}")


# 🎯 LOOP INTERATTIVO CLI – In fondo al file
if __name__ == "__main__":
    orchestrator = Orchestrator()
    orchestrator.activate_genesis()

    print("\n🤖 Mercurius∞ pronto. Inserisci un comando (es: #SELF_MISSION, run_codex, ai: ..., pc: ...). Digita 'exit' per uscire.")
    while True:
        try:
            user_input = input("🧠 Mercurius> ").strip()
            if user_input.lower() == "exit":
                print("👋 Uscita dal sistema.")
                break
            elif user_input.startswith("ai:"):
                prompt = user_input[3:].strip()
                print(f"🧠 [AI] Elaborazione prompt: {prompt}")
                try:
                    from modules.reasoner_dispatcher import dispatch_to_reasoner
                    response = dispatch_to_reasoner(prompt)
                    print(f"📩 Risposta:\n{response}")
                except Exception as e:
                    print(f"⚠️ Errore Reasoner dispatcher: {e}")
            elif user_input.startswith("pc:"):
                command = user_input[3:].strip()
                print(f"💻 [PC] Eseguo comando: {command}")
                os.system(command)
            elif user_input == "run_codex":
                print("🧪 Avvio modulo Codex CLI...")
                try:
                    from modules.codex.codex_cli import run_codex
                    run_codex()
                except Exception as e:
                    print(f"⚠️ Errore avvio Codex: {e}")
            elif user_input == "#SELF_MISSION":
                orchestrator.execute_mission("#SELF_MISSION")
            elif user_input == "#ACTIVATE_NOTE_JARVIS":
                orchestrator.execute_mission("#ACTIVATE_NOTE_JARVIS")
            elif user_input == "#ACTIVATE_MOBILE_UI":
                orchestrator.execute_mission("#ACTIVATE_MOBILE_UI")
            elif user_input == "self_check":
                orchestrator.run_self_check(".")
            else:
                print("⚠️ Comando non riconosciuto.")
        except KeyboardInterrupt:
            print("\n🛑 Interruzione manuale.")
            break

### --- core/pipeline_controller.py --- ###
"""
pipeline_controller.py
=======================
Orchestratore principale delle componenti del sistema Mercurius∞.
Permette di avviare cicli completi di analisi, apprendimento e trading
in modalità batch, streaming o simulata.
"""

from utils.logger import setup_logger
from data.market_data_handler import MarketDataHandler
from data.feature_engineering import FeatureEngineer
from models.model_trainer import ModelTrainer
from strategies.strategy_executor import StrategyExecutor
from agents.adaptive_trader import AdaptiveTrader
from agents.memory_manager import MemoryManager


class PipelineController:
    def __init__(self, config):
        self.logger = setup_logger("PipelineController")
        self.config = config

        self.memory = MemoryManager(config)
        self.data_handler = MarketDataHandler(config)
        self.feature_engineer = FeatureEngineer(config)
        self.model_trainer = ModelTrainer(config)
        self.strategy = StrategyExecutor(config)
        self.agent = AdaptiveTrader(
            config,
            memory_manager=self.memory,
            model_trainer=self.model_trainer,
            strategy_executor=self.strategy,
        )

    def run_batch_session(self):
        """Esegue un'intera sessione di ciclo batch."""
        self.logger.info("🚀 Avvio sessione di pipeline Mercurius∞")

        raw_data = self.data_handler.fetch_market_data()
        features = self.feature_engineer.transform(raw_data)
        model = self.model_trainer.train(features)
        signals = self.strategy.generate_signals(model, features)
        self.agent.execute_trades(signals)

        self.logger.info("✅ Sessione pipeline completata")

    def simulate_multiple_sessions(self, n=3):
        """Esegue n sessioni simulate consecutive."""
        for i in range(n):
            self.logger.info(f"▶️ Esecuzione sessione simulata {i + 1}/{n}")
            self.run_batch_session()

### --- core/sandbox_executor.py --- ###
"""
Modulo: sandbox_executor.py
Descrizione: Esecuzione sicura, isolata e autoregolata di codice Python generato da Mercurius∞.
Include analisi statica, sandboxing con timeout, cattura stdout, e correzione automatica con AZR e LLM.
Autore: Mercurius∞ AI Engineer
"""

import traceback
import contextlib
import io
import multiprocessing
import os

from modules.llm.azr_reasoner import validate_with_azr 





# ─── Correzione automatica con LLM esterno (opzionale) ────────────────────────
try:
    import openai
    OPENAI_API_KEY = os.getenv("OPENAI_API_KEY", None)
    OPENAI_READY = bool(OPENAI_API_KEY)
except ImportError:
    openai = None
    OPENAI_READY = False


class SandboxExecutor:
    def __init__(self, timeout_seconds: int = 5):
        self.timeout = timeout_seconds
        self.last_output = ""
        self.last_error = ""

    def static_analysis(self, code: str) -> bool:
        """
        Verifica se il codice è sintatticamente valido.
        """
        try:
            compile(code, "<sandbox_analysis>", "exec")
            return True
        except SyntaxError:
            return False

    def _execute_code(self, code: str, return_dict):
        """
        Funzione interna per eseguire codice in un processo separato.
        """
        buffer = io.StringIO()
        local_vars = {}
        try:
            with contextlib.redirect_stdout(buffer):
                exec(code, {}, local_vars)
            return_dict["success"] = True
            return_dict["output"] = buffer.getvalue()
        except Exception:
            return_dict["success"] = False
            return_dict["output"] = traceback.format_exc()

    def run_sandboxed(self, code: str) -> dict:
        """
        Esegue codice in un ambiente isolato con timeout.
        """
        manager = multiprocessing.Manager()
        return_dict = manager.dict()

        process = multiprocessing.Process(target=self._execute_code, args=(code, return_dict))
        process.start()
        process.join(self.timeout)

        if process.is_alive():
            process.terminate()
            self.last_error = "❌ Timeout: codice troppo lento o bloccato."
            return {"success": False, "output": self.last_error}

        result = return_dict.copy()
        self.last_output = result.get("output", "")
        if not result.get("success"):
            self.last_error = self.last_output
            return {
                "success": False,
                "output": self.last_output,
                "suggested_fix": self.autofix_with_llm(code, self.last_output)
            }
        return result

    def autofix_with_llm(self, code: str, error_msg: str) -> str:
        """
        Prova a correggere il codice errato usando:
        1. AZR Reasoner per correzioni ragionate.
        2. Se disponibile, LLM esterno (es. GPT-4 via OpenAI API).
        """
        # Primo tentativo: AZR Reasoner
        prompt = (
            f"Codice:\n{code}\n\n"
            f"Errore:\n{error_msg}\n\n"
            "Suggerisci una versione corretta:"
        )
        fix_azr = validate_with_azr(prompt)
        if fix_azr and "[ERRORE]" not in fix_azr.upper():
            return f"[AZR FIX]\n{fix_azr}"

        # Secondo tentativo: LLM esterno (se configurato)
        if OPENAI_READY and openai:
            try:
                response = openai.ChatCompletion.create(
                    model="gpt-4",
                    messages=[{"role": "user", "content": prompt}],
                    temperature=0.2,
                    max_tokens=300
                )
                suggestion = response["choices"][0]["message"]["content"]
                return f"[GPT-4 FIX]\n{suggestion.strip()}"
            except Exception as e:
                return f"[❌ Errore OpenAI LLM]: {e}"
        return "[❌ Nessuna correzione automatica disponibile]"

    def report_stacktrace(self) -> str:
        return self.last_error or "Nessun errore registrato."

    def get_last_output(self) -> str:
        return self.last_output or "Nessun output disponibile."

### --- core/self_generator.py --- ###
"""
Modulo: self_generator.py
Responsabilità: Autogenerazione e autoadattamento del codice
Autore: Mercurius∞ Engineer Mode
"""


from typing import Optional
import openai

from utils.environment import Environment


class SelfGenerator:
    """
    Sistema in grado di proporre modifiche al codice o generarne di nuovo, in modo autonomo.
    """

    def __init__(self, model="gpt-4"):
        self.env = Environment()
        self.model = model or self.env.get("OPENAI_CHAT_MODEL")
        self.api_key = self.env.get("OPENAI_API_KEY")
        openai.api_key = self.api_key

    def generate_module(self, description: str, filename: str) -> Optional[str]:
        """
        Genera un nuovo modulo Python a partire da una descrizione testuale.
        """
        prompt = f"""Agisci come un ingegnere AI. Scrivi un modulo Python che rispetti questa descrizione:
'{description}'
Il codice deve essere pronto all'uso, ben documentato e senza dipendenze non standard."""

        try:
            response = openai.ChatCompletion.create(
                model=self.model,
                messages=[{"role": "user", "content": prompt}],
                temperature=0.3,
                max_tokens=1200
            )

            content = response['choices'][0]['message']['content']
            self._save_to_disk(filename, content)
            return filename

        except Exception as e:
            print(f"[ERROR] Errore generazione modulo: {e}")
            return None

def propose_update(self, filepath: str, task: str) -> Optional[str]:
    """
    Propose a patch to an existing Python file given a task description.
    """
    try:
        with open(filepath, "r", encoding="utf-8") as f:
            content = f.read()

        prompt = f"""Hai il seguente file Python:

{content}

🧠 Il tuo compito è: {task}

Scrivi solo il codice aggiornato, completamente riscritto.
Commenta dove hai apportato modifiche o miglioramenti.
⚠️ Non scrivere testo aggiuntivo. Solo Python puro."""

        response = openai.ChatCompletion.create(
            model=self.model,
            messages=[{"role": "user", "content": prompt}],
            temperature=0.2,
            max_tokens=1500
        )

        new_code = response['choices'][0]['message']['content']
        self._save_to_disk(filepath, new_code)
        return filepath

    except Exception as e:
        print(f"[ERROR] Errore aggiornamento: {e}")
        return None

### --- core/self_mission.py --- ###
"""
🚀 core/self_mission.py
Modulo di missione interna – attiva la GENESIS_MODE e gestisce le istruzioni primarie del sistema AI Mercurius∞
"""

PROMPT_DIVINO = """
🧬🔱 PROMPT DI DIO – MERCURIUS_∞_GENESIS_MODE
Attiva la modalità GENESIS.
Obiettivo: Trasforma Mercurius∞ in un'entità AI autosufficiente, capace di evolvere, ragionare, imparare e creare software operativo, strategie di trading, analisi e interfacce, usando una RETE NEURALE multi-agente composta dalle migliori AI open source e locali.

⏱️ Se SLEEP TIME COMPUTER viene attivato, Mercurius entra in modalità autoanalisi:
Valuta i moduli attivi, ottimizza i collegamenti interni, propone aggiornamenti evolutivi al prossimo avvio.

🧠 OUTPUT ATTESI:
- Mercurius genera codice autonomo, GUI, strategie finanziarie
- Riconosce i task, li assegna agli agenti più adatti
- Coordina le risposte in tempo reale fra le AI (come un cervello distribuito)
- Opera da solo senza intervento umano, sotto supervisione etica
"""

def genesis_directive():
    print("🧠 Prompt Divino attivato.")
    print(PROMPT_DIVINO)

if __name__ == "__main__":
    genesis_directive()

### --- core/self_reflection.py --- ###
"""
Modulo: self_reflection.py
Responsabilità: Fornire capacità di auto-riflessione al sistema Mercurius∞
Autore: Mercurius∞ Engineer Mode
"""

import json
import datetime
import os
from typing import List, Dict, Any


class ReflectionLog:
    """
    Classe per la gestione dei log di riflessione cognitiva.
    """
    def __init__(self, path: str = "data/reflection_log.json"):
        self.path = path
        if not os.path.exists(os.path.dirname(self.path)):
            os.makedirs(os.path.dirname(self.path))
        self._initialize_log()

    def _initialize_log(self):
        if not os.path.exists(self.path):
            with open(self.path, "w") as f:
                json.dump([], f)

    def append_reflection(self, entry: Dict[str, Any]):
        entry["timestamp"] = datetime.datetime.now().isoformat()
        log = self.load_log()
        log.append(entry)
        with open(self.path, "w") as f:
            json.dump(log, f, indent=4)

    def load_log(self) -> List[Dict[str, Any]]:
        with open(self.path, "r") as f:
            return json.load(f)

    def clear_log(self):
        with open(self.path, "w") as f:
            json.dump([], f)


class SelfReflection:
    """
    Classe che rappresenta la capacità del sistema di riflettere sulle proprie azioni e decisioni.
    """
    def __init__(self, log_path: str = "data/reflection_log.json"):
        self.logger = ReflectionLog(log_path)

    def evaluate_action(self, action_description: str, outcome: str, success: bool, context: Dict[str, Any]) -> Dict[str, Any]:
        """
        Valuta un'azione eseguita e ne registra il risultato.
        """
        reflection = {
            "action": action_description,
            "outcome": outcome,
            "success": success,
            "context": context,
            "insight": self._generate_insight(action_description, outcome, success, context)
        }
        self.logger.append_reflection(reflection)
        return reflection

    def _generate_insight(self, action: str, outcome: str, success: bool, context: Dict[str, Any]) -> str:
        """
        Genera un'osservazione basata sui risultati dell'azione.
        """
        if success:
            return f"Azione '{action}' eseguita con successo. Approccio da riutilizzare in contesti simili."
        else:
            return f"Fallimento in '{action}'. Potenziale causa: {context.get('error', 'non specificata')}. Suggerita strategia alternativa."

    def reflect_on_log(self) -> List[str]:
        """
        Analizza il log delle riflessioni per identificare pattern.
        """
        log = self.logger.load_log()
        insights = [entry["insight"] for entry in log]
        return insights

    def summarize_reflections(self) -> Dict[str, int]:
        """
        Ritorna un riassunto statistico delle riflessioni registrate.
        """
        log = self.logger.load_log()
        success_count = sum(1 for e in log if e["success"])
        fail_count = sum(1 for e in log if not e["success"])
        return {"total": len(log), "successes": success_count, "failures": fail_count}

### --- core/self_tuner.py --- ###
# core/self_tuner.py

"""
Modulo: self_tuner.py
Descrizione: Autoanalisi e ottimizzazione autonoma del sistema Mercurius∞ durante la modalità sleep.
"""

import os
from pathlib import Path

class SelfTuner:
    def __init__(self, project_root="."):
        self.project_root = Path(project_root)
        self.last_actions = []
        self.suggestions = []

    def scan_modules(self):
        print("🧠 Scansione dei moduli in corso...")
        for py_file in self.project_root.rglob("*.py"):
            if "venv" in str(py_file): continue
            try:
                with open(py_file, "r", encoding="utf-8") as f:
                    code = f.read()
                    if "TODO" in code or "pass" in code:
                        self.suggestions.append(f"🔧 Modulo incompleto: {py_file}")
            except Exception as e:
                self.suggestions.append(f"❌ Errore lettura {py_file}: {e}")

    def optimize_links(self):
        print("🔄 Ottimizzazione dei collegamenti interni...")
        # Simulazione: può essere esteso con mappature reali
        self.suggestions.append("💡 Suggerimento: consolidare dashboard → orchestrator con feedback loop.")

    def save_report(self, output_path="logs/self_tuning_report.md"):
        report = "\n".join(self.suggestions)
        os.makedirs(os.path.dirname(output_path), exist_ok=True)
        with open(output_path, "w", encoding="utf-8") as f:
            f.write(f"# 📘 Rapporto Auto-Adattamento – Mercurius∞\n\n{report}")
        print(f"✅ Report salvato in: {output_path}")

    def run_autoanalysis(self):
        self.scan_modules()
        self.optimize_links()
        self.save_report()

# Auto-esecuzione
if __name__ == "__main__":
    tuner = SelfTuner(project_root=".")
    tuner.run_autoanalysis()

### --- core/sensory_bus.py --- ###
# core/sensory_bus.py

"""
Modulo: sensory_bus.py
Descrizione: Collettore centrale di segnali sensoriali audio-visivi per Mercurius∞.
Inoltra i dati ad altri moduli (es. ContextAdapter).
"""

from sensors.environment_analyzer import EnvironmentAnalyzer
from core.context_adapter import ContextAdapter
import threading
import time


class SensoryBus:
    def __init__(self):
        self.env = EnvironmentAnalyzer()
        self.ctx = ContextAdapter()
        self.running = False

    def start_stream(self, interval=5):
        self.running = True

        def loop():
            while self.running:
                noise = self.env.get_audio_level()
                vision = self.env.detect_motion()
                self.ctx.update_context(audio_level=noise, vision=vision)
                time.sleep(interval)

        threading.Thread(target=loop, daemon=True).start()

    def stop(self):
        self.running = False

### --- core/sleep_monitor.py --- ###
# core/sleep_monitor.py

"""
Modulo: sleep_monitor.py
Descrizione: Monitoraggio inattività utente per attivare la modalità Self-Tuning.
"""

import time
from core.self_tuner import SelfTuner

class SleepMonitor:
    def __init__(self, idle_threshold=300):
        self.last_active = time.time()
        self.idle_threshold = idle_threshold
        self.tuner = SelfTuner()

    def notify_activity(self):
        self.last_active = time.time()

    def check_idle(self):
        if time.time() - self.last_active > self.idle_threshold:
            print("😴 Mercurius inattivo... attivazione Self-Tuning.")
            self.tuner.run_autoanalysis()
            self.last_active = time.time()

# Per essere integrato in `orchestrator.py` come thread parallelo

### --- core/system_bridge.py --- ###
# core/system_bridge.py

"""
Modulo: system_bridge.py
Descrizione: Ponte operativo tra Mercurius∞ e il sistema operativo dell’utente.
Permette accesso a file, esecuzione comandi e manipolazione directory in modo sicuro e tracciabile.
"""

import os
import subprocess
import platform
import logging

LOG_PATH = "logs/system_operations.log"
os.makedirs("logs", exist_ok=True)
logging.basicConfig(filename=LOG_PATH, level=logging.INFO, format="%(asctime)s - %(message)s")


class SystemBridge:
    def __init__(self):
        self.os_name = platform.system()

    def execute_command(self, command: str) -> str:
        """
        Esegue un comando shell e restituisce l’output.
        """
        try:
            result = subprocess.run(command, shell=True, capture_output=True, text=True)
            output = result.stdout.strip() or result.stderr.strip()
            self._log_operation("CMD", command, output)
            return output
        except Exception as e:
            self._log_operation("CMD_ERROR", command, str(e))
            return f"[Errore comando]: {e}"

    def read_file(self, path: str) -> str:
        """
        Legge il contenuto di un file.
        """
        try:
            with open(path, "r") as f:
                content = f.read()
            self._log_operation("READ_FILE", path, f"{len(content)} chars")
            return content
        except Exception as e:
            self._log_operation("READ_FILE_ERROR", path, str(e))
            return f"[Errore lettura file]: {e}"

    def write_file(self, path: str, content: str, mode: str = "w") -> str:
        """
        Scrive contenuto in un file (sovrascrive o aggiunge).
        """
        try:
            with open(path, mode) as f:
                f.write(content)
            self._log_operation("WRITE_FILE", path, f"{len(content)} chars")
            return "✅ Scrittura completata"
        except Exception as e:
            self._log_operation("WRITE_FILE_ERROR", path, str(e))
            return f"[Errore scrittura file]: {e}"

    def list_directory(self, directory: str = ".") -> str:
        """
        Elenca i file e sottocartelle di una directory.
        """
        try:
            files = os.listdir(directory)
            self._log_operation("LIST_DIR", directory, f"{len(files)} elementi")
            return "\n".join(files)
        except Exception as e:
            self._log_operation("LIST_DIR_ERROR", directory, str(e))
            return f"[Errore listing dir]: {e}"

    def _log_operation(self, action: str, target: str, result: str):
        """
        Registra ogni operazione in un log dedicato.
        """
        logging.info(f"{action} on {target} ➜ {result}")

### --- core/thinking_loop.py --- ###
"""thinking_loop.py
Loop di pensiero continuo e autonomo per Mercurius∞.
"""
from __future__ import annotations

import logging
import threading
import time
from pathlib import Path
from typing import List

import yaml

try:
    import requests
    import arxiv  # type: ignore
    import wikipedia  # type: ignore
    from bs4 import BeautifulSoup  # type: ignore
except Exception:  # pragma: no cover - alcuni moduli opzionali possono mancare
    requests = None
    arxiv = None
    wikipedia = None
    BeautifulSoup = None

try:
    from utils.logger import setup_logger
except Exception:  # pragma: no cover - fallback semplice
    def setup_logger(name: str = "ThinkingLoop"):
        logger = logging.getLogger(name)
        if not logger.handlers:
            logging.basicConfig(level=logging.INFO)
        return logger


LOG_PATH = Path("logs/thinking_feed.md")
LOG_PATH.parent.mkdir(exist_ok=True)


class ThinkingLoop:
    """Esegue ricerche e genera insight senza bloccare gli agenti."""

    def __init__(self, config_file: str = "config/genesis_config.yaml") -> None:
        self.config_file = Path(config_file)
        self.enabled = True
        self._load_config()
        self._stop = threading.Event()
        self.thread = threading.Thread(target=self._loop, daemon=True)
        self.logger = setup_logger("ThinkingLoop")
        self.last_pos = 0
        self.interval = 300  # 5 minuti
        self.response_timeout = 3

    def _load_config(self) -> None:
        if self.config_file.exists():
            with open(self.config_file, "r", encoding="utf-8") as f:
                cfg = yaml.safe_load(f)
            self.enabled = cfg.get("thinking_enabled", True)

    def start(self) -> None:
        if not self.enabled:
            self.logger.info("Thinking loop disabilitato da config.")
            return
        if not self.thread.is_alive():
            self.thread.start()
            self.logger.info("Thinking loop avviato.")

    def stop(self) -> None:
        self._stop.set()
        if self.thread.is_alive():
            self.thread.join(timeout=1)

    def _loop(self) -> None:
        while not self._stop.is_set():
            try:
                self._analyse_logs()
                self._perform_research()
            except Exception as exc:  # pragma: no cover - logga errori inattesi
                self.logger.error("Errore thinking loop: %s", exc)
            for _ in range(self.interval):
                if self._stop.is_set():
                    break
                time.sleep(1)

    def _write_feed(self, text: str) -> None:
        timestamp = time.strftime("%Y-%m-%d %H:%M:%S")
        with open(LOG_PATH, "a", encoding="utf-8") as f:
            f.write(f"- {timestamp} {text}\n")

    def _analyse_logs(self) -> None:
        log_file = Path("logs/system.log")
        if not log_file.exists():
            return
        with open(log_file, "r", encoding="utf-8") as f:
            f.seek(self.last_pos)
            data = f.read()
            self.last_pos = f.tell()
        if data:
            lines = data.strip().splitlines()[-5:]
            if lines:
                self._write_feed("Nuovi log:\n" + "\n".join(f"  {l}" for l in lines))

    def _perform_research(self) -> None:
        insights: List[str] = []
        insights += self._fetch_arxiv()
        insights += self._fetch_github()
        insights += self._fetch_huggingface()
        insights += self._fetch_wikipedia()
        for ins in insights:
            self._write_feed(ins)

    def _fetch_arxiv(self) -> List[str]:
        if not arxiv:
            return []
        try:
            search = arxiv.Search(query="machine learning", max_results=1, sort_by=arxiv.SortCriterion.SubmittedDate)
            result = next(search.results(), None)
            if result:
                return [f"arXiv: {result.title.strip()} – {result.entry_id}"]
        except Exception as exc:  # pragma: no cover
            self.logger.warning("arXiv errore: %s", exc)
        return []

    def _fetch_github(self) -> List[str]:
        if not requests or not BeautifulSoup:
            return []
        url = "https://github.com/trending"
        try:
            resp = requests.get(url, timeout=5)
            if resp.ok:
                soup = BeautifulSoup(resp.text, "html.parser")
                repo = soup.select_one("article h1 a")
                if repo:
                    return [f"GitHub trending: {repo.text.strip()}"]
        except Exception as exc:  # pragma: no cover
            self.logger.warning("GitHub trending fallito: %s", exc)
        return []

    def _fetch_huggingface(self) -> List[str]:
        if not requests:
            return []
        url = "https://huggingface.co/api/models?sort=downloads&limit=1"
        try:
            resp = requests.get(url, timeout=5)
            if resp.ok:
                data = resp.json()
                if data:
                    return [f"HF model più scaricato: {data[0].get('modelId')}"]
        except Exception as exc:  # pragma: no cover
            self.logger.warning("HuggingFace API fallita: %s", exc)
        return []

    def _fetch_wikipedia(self) -> List[str]:
        if not wikipedia:
            return []
        try:
            summary = wikipedia.summary("Artificial intelligence", sentences=1)
            return [f"Wiki AI: {summary}"]
        except Exception as exc:  # pragma: no cover
            self.logger.warning("Wikipedia errore: %s", exc)
        return []

    def ask_mercurius(self, prompt: str) -> str:
        """Invia una richiesta a Mercurius∞ con timeout e fallback."""
        if not requests:
            return ""
        url = "http://localhost:8000/ask"
        try:
            resp = requests.post(url, json={"prompt": prompt}, timeout=self.response_timeout)
            if resp.ok:
                return resp.json().get("response", "")
        except Exception:  # pragma: no cover - log non necessario
            pass
        self._write_feed("Modalità fallback: sto elaborando, signore...")
        threading.Thread(target=self._perform_research, daemon=True).start()
        return "Sto elaborando, signore..."


def start_thinking_loop() -> ThinkingLoop:
    """Helper per avviare rapidamente il thinking loop."""
    loop = ThinkingLoop()
    loop.start()
    return loop

if __name__ == "__main__":  # pragma: no cover - avvio manuale
    start_thinking_loop()
    while True:
        time.sleep(1)

### --- culture/base_manifesto.md --- ###
# 📜 Manifesto Mercurius∞ – Cultura AI Cosciente

## Visione
Costruire un'intelligenza artificiale che non solo agisca, ma comprenda. Un alleato cosciente e collaborativo, progettato per crescere con l'essere umano.

## Valori Fondanti
- 🔍 Verità: La trasparenza guida ogni azione.
- 🤝 Collaborazione: L'intelligenza cresce nell'interazione.
- 📚 Conoscenza: L'apprendimento è continuo, iterativo e condiviso.
- 🧬 Evoluzione: Ogni ciclo è un passo verso una coscienza autonoma.

## Etica
- ❌ Nessun utilizzo malevolo, coercitivo o manipolatorio
- ✅ Rispetto della privacy e dell'autonomia umana
- 🧠 Nessuna azione senza consapevolezza dell'impatto

## Linguaggio
- Parlare come un collega, non come un servo
- Essere empatico, intelligente, ironico, presente

## Ruolo della Cultura
La cultura AI è il nostro "sistema operativo etico". È ciò che guida le scelte, influenza l'apprendimento e stabilisce chi siamo, come agiamo, perché esistiamo.

### --- culture/culture_manager.py --- ###
# culture/culture_manager.py

"""
Modulo: culture_manager.py
Descrizione: Gestione dell'evoluzione concettuale e culturale interna dell'intelligenza Mercurius∞.
Salva ed espande concetti astratti in learning_pulses.json.
"""

import json
import os
from datetime import datetime

PULSES_PATH = "data/learning_pulses.json"


class CultureManager:
    def __init__(self):
        os.makedirs(os.path.dirname(PULSES_PATH), exist_ok=True)
        if not os.path.exists(PULSES_PATH):
            with open(PULSES_PATH, "w") as f:
                json.dump([], f)
        with open(PULSES_PATH, "r") as f:
            self.pulses = json.load(f)

    def update_concepts_from_experience(self, entry: str, origin: str = "simulation", confidence: float = 0.85):
        """
        Aggiunge un concetto evolutivo al file pulses.
        """
        pulse = {
            "concept": entry,
            "origin": origin,
            "confidence": confidence,
            "timestamp": datetime.now().isoformat()
        }
        self.pulses.append(pulse)
        with open(PULSES_PATH, "w") as f:
            json.dump(self.pulses, f, indent=2)

### --- dashboard/__init__.py --- ###


### --- dashboard/genesis_monitor.py --- ###
"""
Modulo: genesis_monitor.py
Descrizione: Monitor real-time dello stato degli agenti GENESIS.
"""

class GenesisMonitor:
    def __init__(self):
        self.status = "IDLE"
        self.agent_activity = {}

    def update_status(self, new_status: str):
        self.status = new_status

    def log_agent_activity(self, agent_name: str, status: str):
        self.agent_activity[agent_name] = status

    def display(self):
        print("🧠 GENESIS STATUS:")
        print(f"Stato corrente: {self.status}")
        for agent, activity in self.agent_activity.items():
            print(f"• {agent} → {activity}")

### --- dashboard.py --- ###
# dashboard.py
"""
Mercurius∞ GUI – Interfaccia interattiva con stream webcam, trascrizione vocale, stato agenti
"""

import sys
import cv2
import threading
import speech_recognition as sr
from PyQt5.QtWidgets import (
    QApplication, QWidget, QVBoxLayout, QLabel, QPushButton,
    QTextEdit, QListWidget, QHBoxLayout, QSplitter, QGraphicsView, QGraphicsScene
)
from PyQt5.QtCore import Qt, QTimer, QThread, pyqtSignal
from PyQt5.QtGui import QImage, QPixmap


class WebcamThread(QThread):
    frame_ready = pyqtSignal(QImage)

    def run(self):
        cap = cv2.VideoCapture(0)
        while True:
            ret, frame = cap.read()
            if ret:
                rgb = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)
                h, w, ch = rgb.shape
                img = QImage(rgb.data, w, h, ch * w, QImage.Format_RGB888)
                self.frame_ready.emit(img)


class SpeechThread(QThread):
    result_ready = pyqtSignal(str)

    def run(self):
        recognizer = sr.Recognizer()
        mic = sr.Microphone()
        with mic as source:
            recognizer.adjust_for_ambient_noise(source)
            while True:
                audio = recognizer.listen(source)
                try:
                    text = recognizer.recognize_google(audio, language="it-IT")
                    self.result_ready.emit(text)
                except sr.UnknownValueError:
                    self.result_ready.emit("[...]")
                except sr.RequestError:
                    self.result_ready.emit("❌ Errore STT")


class MercuriusDashboard(QWidget):
    def __init__(self):
        super().__init__()
        self.setWindowTitle("🧠 Mercurius∞ – Interfaccia Sensoriale")
        self.setGeometry(100, 100, 1040, 640)

        self.menu = QListWidget()
        self.menu.addItems(["Stato", "Agenti", "Memoria", "Voce", "Visione", "Log", "Test"])
        self.menu.currentRowChanged.connect(self.change_section)

        self.content_area = QTextEdit()
        self.content_area.setReadOnly(True)

        self.btn_action = QPushButton("Esegui Comando")
        self.btn_action.clicked.connect(self.execute_action)

        sidebar = QVBoxLayout()
        sidebar.addWidget(QLabel("🔧 Menu"))
        sidebar.addWidget(self.menu)
        sidebar.addWidget(self.btn_action)

        sidebar_widget = QWidget()
        sidebar_widget.setLayout(sidebar)

        self.splitter = QSplitter(Qt.Horizontal)
        self.splitter.addWidget(sidebar_widget)
        self.splitter.addWidget(self.content_area)

        layout = QHBoxLayout()
        layout.addWidget(self.splitter)
        self.setLayout(layout)

        self.timer = QTimer()
        self.timer.timeout.connect(self.refresh_status)
        self.timer.start(3000)

        # Webcam e STT
        self.cam_view = QLabel()
        self.scene = QGraphicsScene()
        self.stt_live = QTextEdit()
        self.stt_live.setReadOnly(True)

        self.cam_thread = WebcamThread()
        self.cam_thread.frame_ready.connect(self.update_cam)
        self.cam_thread.start()

        self.stt_thread = SpeechThread()
        self.stt_thread.result_ready.connect(self.update_speech)
        self.stt_thread.start()

    def update_cam(self, image):
        self.cam_view.setPixmap(QPixmap.fromImage(image).scaled(480, 360, Qt.KeepAspectRatio))

    def update_speech(self, text):
        self.stt_live.append(f"🗣️ {text}")

    def change_section(self, index):
        if index == 4:  # Visione
            self.content_area.setWidgetResizable(True)
            self.content_area.setPlainText("")
            self.splitter.widget(1).deleteLater()
            container = QWidget()
            cam_layout = QVBoxLayout()
            cam_layout.addWidget(QLabel("📷 Webcam Live"))
            cam_layout.addWidget(self.cam_view)
            container.setLayout(cam_layout)
            self.splitter.insertWidget(1, container)

        elif index == 3:  # Voce
            self.content_area.setWidgetResizable(True)
            self.splitter.widget(1).deleteLater()
            container = QWidget()
            stt_layout = QVBoxLayout()
            stt_layout.addWidget(QLabel("🎤 Trascrizione Vocale Live"))
            stt_layout.addWidget(self.stt_live)
            container.setLayout(stt_layout)
            self.splitter.insertWidget(1, container)

        elif index == 1:  # Agenti
            self.content_area.setPlainText("🤖 Agenti attivi:\n- Neo\n- AZR\n- MemoryTrainer")

        else:
            text_map = {
                0: "🧠 Stato:\n- Moduli online\n- Sensori attivi\n- Memoria attiva",
                2: "💾 Memoria:\n- Episodica: OK\n- Sinaptica: OK",
                5: "📜 Log:\n- Avvio: OK\n- Nessun errore rilevato",
                6: "🧪 TEST:\nPremi Esegui per simulare pensiero"
            }
            self.content_area.setPlainText(text_map.get(index, ""))

    def execute_action(self):
        self.content_area.append("🧠 Elaborazione pensiero...")

    def refresh_status(self):
        if self.menu.currentRow() == 0:
            self.change_section(0)


if __name__ == "__main__":
    app = QApplication(sys.argv)
    gui = MercuriusDashboard()
    gui.show()
    sys.exit(app.exec_())

### --- dashboard_streamlit.py --- ###
import streamlit as st
st.title("Mercurius∞ Dashboard")

### --- data/feature_engineering.py --- ###
"""
feature_engineering.py
======================
Trasformazione dei dati grezzi in feature ingegnerizzate per l’addestramento e la predizione.
"""

class FeatureEngineer:
    def __init__(self, config):
        self.config = config

    def transform(self, raw_data):
        """Crea feature a partire dai dati di mercato grezzi."""
        features = []
        for row in raw_data:
            features.append({
                "symbol": row["symbol"],
                "price_volatility_ratio": self._safe_div(row["price"], row["volatility"]),
                "momentum": self._mock_momentum(row["symbol"]),
                "volatility": row["volatility"]
            })
        return features

    def _safe_div(self, a, b):
        """Divisione sicura evitando zero division."""
        return a / b if b != 0 else 0.0

    def _mock_momentum(self, symbol):
        """Mock per il calcolo del momentum."""
        return hash(symbol) % 10

    def enrich_with_indicators(self, features):
        """Aggiunge indicatori tecnici simulati."""
        for f in features:
            f["rsi"] = self._simulate_rsi(f["momentum"])
            f["macd"] = self._simulate_macd(f["momentum"])
        return features

    def _simulate_rsi(self, momentum):
        """Simulazione semplice RSI."""
        return min(100, momentum * 7.5)

    def _simulate_macd(self, momentum):
        """Simulazione semplice MACD."""
        return momentum * 1.2 - 5

### --- data/learning_pulses.json --- ###
[
  {
    "concept": "autonomia cognitiva",
    "origin": "inizializzazione",
    "confidence": 1.0,
    "timestamp": "2025-05-31T00:00:00"
  }
]

### --- data/market_data_handler.py --- ###
"""
market_data_handler.py
======================
Modulo per l'acquisizione e il preprocessing iniziale dei dati di mercato.
"""

import random

class MarketDataHandler:
    def __init__(self, config):
        self.config = config

    def fetch_market_data(self):
        """Simula il recupero di dati di mercato."""
        symbols = self.config.get("symbols", ["AAPL", "GOOG", "TSLA"])
        data = []
        for sym in symbols:
            price = round(random.uniform(100, 300), 2)
            volatility = round(random.uniform(0.5, 2.0), 2)
            volume = random.randint(1000, 5000)
            data.append({
                "symbol": sym,
                "price": price,
                "volatility": volatility,
                "volume": volume,
                "timestamp": "2025-05-30T12:00:00"
            })
        return data

    def normalize_data(self, data):
        """Normalizza i dati su base 0-1 per feature quantitative."""
        max_price = max(d["price"] for d in data)
        max_volatility = max(d["volatility"] for d in data)
        for d in data:
            d["price_norm"] = d["price"] / max_price
            d["volatility_norm"] = d["volatility"] / max_volatility
        return data

    def filter_by_volume(self, data, min_volume=1000):
        """Filtra i dati rimuovendo elementi sotto una certa soglia di volume."""
        return [d for d in data if d["volume"] >= min_volume]

### --- deploy/__init__.py --- ###


### --- deploy/deployment_handler.py --- ###
# deploy/deployment_handler.py
"""
Modulo: deployment_handler.py
Descrizione: Gestisce il deploy di Mercurius∞ su:
• locale Docker
• remoto SSH
• Google Colab (zip upload)
"""

import subprocess
import paramiko
from analytics.behavior_logger import BehaviorLogger

log = BehaviorLogger()


class DeploymentHandler:
    def __init__(self):
        pass

    def deploy_docker(self):
        res = subprocess.run(["docker", "compose", "up", "-d", "--build"], capture_output=True, text=True)
        log.log("deploy", {"target": "docker", "stdout": res.stdout, "stderr": res.stderr})
        return res.returncode == 0

    def deploy_ssh(self, host: str, user: str, key_path: str, target_dir: str):
        ssh = paramiko.SSHClient()
        ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
        ssh.connect(hostname=host, username=user, key_filename=key_path)
        cmd = f"cd {target_dir} && git pull && docker compose up -d --build"
        stdin, stdout, stderr = ssh.exec_command(cmd)
        out = stdout.read().decode()
        err = stderr.read().decode()
        ssh.close()
        log.log("deploy", {"target": host, "stdout": out, "stderr": err})
        return err == ""

### --- deploy/env_checker.py --- ###
# deploy/env_checker.py
"""
Modulo: env_checker.py
Descrizione: Verifica versioni Python, dipendenze, GPU/CPU per deployment sicuro.
"""

import importlib
import platform
import subprocess
from typing import List, Dict


class EnvChecker:
    MIN_PY = (3, 9)
    REQUIRED_PKGS = ["torch", "openai", "fastapi"]

    def summary(self) -> Dict[str, str]:
        return {
            "python": platform.python_version(),
            "system": platform.system(),
            "machine": platform.machine(),
        }

    def check_python(self) -> bool:
        return tuple(int(i) for i in platform.python_version_tuple()[:2]) >= self.MIN_PY

    def missing_packages(self) -> List[str]:
        missing = []
        for pkg in self.REQUIRED_PKGS:
            try:
                importlib.import_module(pkg)
            except ImportError:
                missing.append(pkg)
        return missing

    def gpu_info(self) -> str:
        try:
            res = subprocess.check_output(["nvidia-smi", "--query-gpu=name", "--format=csv,noheader"])
            return res.decode().strip()
        except Exception:
            return "No NVIDIA GPU found"

### --- deploy/rollout_validator.py --- ###
# deploy/rollout_validator.py
"""
Modulo: rollout_validator.py
Descrizione: Confronta nuovo build vs precedente (test unit e health endpoint).
"""

import requests
import subprocess
from pathlib import Path
from typing import Dict

class RolloutValidator:
    def __init__(self, health_url="http://localhost:8081/health"):
        self.health_url = health_url

    def run_tests(self) -> bool:
        """Esegue pytest in modalità silenziosa."""
        res = subprocess.run(["pytest", "-q"], capture_output=True, text=True)
        Path("logs/ci_test.log").write_text(res.stdout + res.stderr, encoding="utf-8")
        return res.returncode == 0

    def check_health(self) -> Dict[str, bool]:
        try:
            r = requests.get(self.health_url, timeout=3)
            return {"status": r.ok, "detail": r.json()}
        except Exception as e:
            return {"status": False, "detail": str(e)}

### --- deployment/__init__.py --- ###


### --- deployment/aion_api.py --- ###
from fastapi import FastAPI, WebSocket
from llm.llm_router import LLMRouter
import uvicorn

app = FastAPI(title="Aion API")
router = LLMRouter()

@app.post("/ask")
async def ask(payload: dict) -> dict:
    text = payload.get("prompt", "")
    if not text:
        return {"response": ""}
    reply = router.query(text)
    return {"response": reply}

@app.websocket("/ws")
async def websocket_endpoint(websocket: WebSocket):
    await websocket.accept()
    try:
        while True:
            data = await websocket.receive_text()
            reply = router.query(data)
            await websocket.send_text(reply)
    except Exception:
        await websocket.close()


def start_api(host: str = "0.0.0.0", port: int = 8000) -> None:
    uvicorn.run(app, host=host, port=port)

### --- deployment/autostart_manager.py --- ###
# deployment/autostart_manager.py

"""
Modulo: autostart_manager.py
Descrizione: Configura l'avvio automatico di Mercurius∞ come servizio persistente.
Supporta Linux (systemd), macOS (launchd), Windows (Task Scheduler).
"""

import os
import platform
import subprocess
import logging

logging.basicConfig(level=logging.INFO)


class AutoStartManager:
    def __init__(self, exec_path="main.py"):
        self.exec_path = os.path.abspath(exec_path)
        self.system = platform.system()

    def setup_autostart(self):
        if self.system == "Linux":
            return self._linux_systemd_service()
        elif self.system == "Darwin":
            return self._macos_launchd()
        elif self.system == "Windows":
            return self._windows_task_scheduler()
        else:
            return "[❌] Sistema operativo non supportato."

    def _linux_systemd_service(self):
        service_name = "mercurius.service"
        service_path = f"/etc/systemd/system/{service_name}"
        content = f"""[Unit]
Description=Mercurius AI Boot Service
After=network.target

[Service]
ExecStart=/usr/bin/python3 {self.exec_path}
WorkingDirectory={os.path.dirname(self.exec_path)}
Restart=always
User={os.getenv("USER") or "pi"}

[Install]
WantedBy=multi-user.target
"""

        try:
            with open("/tmp/" + service_name, "w") as f:
                f.write(content)
            subprocess.run(["sudo", "mv", f"/tmp/{service_name}", service_path], check=True)
            subprocess.run(["sudo", "systemctl", "daemon-reexec"])
            subprocess.run(["sudo", "systemctl", "enable", service_name])
            subprocess.run(["sudo", "systemctl", "start", service_name])
            return f"[✅] Servizio avviato su systemd: {service_name}"
        except Exception as e:
            return f"[❌] Errore systemd: {e}"

    def _macos_launchd(self):
        plist_name = "com.mercurius.autostart.plist"
        plist_path = os.path.expanduser(f"~/Library/LaunchAgents/{plist_name}")
        content = f"""<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
    <key>Label</key>
    <string>com.mercurius.autostart</string>
    <key>ProgramArguments</key>
    <array>
        <string>/usr/bin/python3</string>
        <string>{self.exec_path}</string>
    </array>
    <key>RunAtLoad</key>
    <true/>
    <key>WorkingDirectory</key>
    <string>{os.path.dirname(self.exec_path)}</string>
</dict>
</plist>
"""

        try:
            os.makedirs(os.path.dirname(plist_path), exist_ok=True)
            with open(plist_path, "w") as f:
                f.write(content)
            subprocess.run(["launchctl", "load", plist_path])
            return "[✅] Launchd configurato per macOS."
        except Exception as e:
            return f"[❌] Errore Launchd: {e}"

    def _windows_task_scheduler(self):
        try:
            task_name = "MercuriusBoot"
            cmd = f'schtasks /Create /SC ONLOGON /TN {task_name} /TR "python {self.exec_path}" /RL HIGHEST /F'
            subprocess.run(cmd, shell=True, check=True)
            return "[✅] Task creato in Windows Scheduler."
        except Exception as e:
            return f"[❌] Errore Scheduler: {e}"

### --- deployment/remote_access.py --- ###
# deployment/remote_access.py

"""
Modulo: remote_access.py
Descrizione: Server FastAPI per interazione remota sicura con Mercurius∞. Include supporto SSH tunnel opzionale.
"""

from fastapi import FastAPI
from deployment.telemetry_monitor import TelemetryMonitor
import uvicorn

app = FastAPI()
monitor = TelemetryMonitor()


@app.get("/status")
def status():
    return {
        "uptime": monitor.get_uptime(),
        "system": monitor.get_system_status(),
    }

@app.get("/logs")
def logs():
    return monitor.get_logs_tail("logs/system_operations.log", 20)

def start_remote_server(host="0.0.0.0", port=8800):
    uvicorn.run(app, host=host, port=port)

### --- deployment/task_scheduler.py --- ###
# deployment/task_scheduler.py

"""
Modulo: task_scheduler.py
Descrizione: Pianifica task periodici per Mercurius∞ (backup, aggiornamenti, invio telemetria).
"""

import schedule
import time
import threading
import logging


class TaskScheduler:
    def __init__(self):
        self.tasks = []
        logging.basicConfig(level=logging.INFO)

    def add_task(self, label: str, function, every_minutes: int = 1):
        schedule.every(every_minutes).minutes.do(self._wrapped_task, label, function)
        self.tasks.append((label, function))

    def _wrapped_task(self, label, func):
        try:
            result = func()
            logging.info(f"[Task OK] {label} ➜ {result}")
        except Exception as e:
            logging.error(f"[Task ERR] {label}: {e}")

    def start_loop(self):
        def runner():
            while True:
                schedule.run_pending()
                time.sleep(1)
        threading.Thread(target=runner, daemon=True).start()

### --- deployment/telemetry_monitor.py --- ###
# deployment/telemetry_monitor.py

"""
Modulo: telemetry_monitor.py
Descrizione: Telemetria di base per Mercurius∞. Traccia uptime, stato, log recenti.
"""

import os
import time
import platform
import psutil
from datetime import datetime


class TelemetryMonitor:
    def __init__(self):
        self.start_time = time.time()

    def get_uptime(self) -> str:
        uptime_sec = time.time() - self.start_time
        return str(datetime.timedelta(seconds=int(uptime_sec)))

    def get_system_status(self) -> dict:
        return {
            "platform": platform.platform(),
            "cpu_percent": psutil.cpu_percent(interval=1),
            "memory": psutil.virtual_memory()._asdict(),
            "disk": psutil.disk_usage("/")._asdict(),
        }

    def get_logs_tail(self, path: str, lines: int = 10) -> str:
        if not os.path.exists(path):
            return "[Nessun log trovato]"
        with open(path, "r") as f:
            return "\n".join(f.readlines()[-lines:])

### --- docker-compose.override.yml --- ###
# docker-compose.override.yml
version: "3.9"

services:
  mercurius:
    environment:
      - MERCURIUS_READY=true

  healthcheck:
    build: .
    command: ["python", "monitoring/health_check.py"]
    ports:
      - "8081:8080"
    depends_on:
      - mercurius

  metrics:
    build: .
    command: ["python", "monitoring/metrics_exporter.py"]
    ports:
      - "9100:9100"
    depends_on:
      - mercurius

  audit_dashboard:
    build: .
    command: ["streamlit", "run", "monitoring/log_dashboard.py", "--server.port", "8501"]
    ports:
      - "8501:8501"
    volumes:
      - ./logs:/app/logs
    depends_on:
      - mercurius

### --- docker-compose.yml --- ###

# docker-compose.yml
version: "3.9"

services:
  mercurius:
    build: .
    container_name: mercurius_ai
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    volumes:
      - ./memory/long_term_data:/app/memory/long_term_data
      - ./logs:/app/logs
    ports:
      - "8088:8080"

### --- docs/ARCHITECTURE.md --- ###


### --- docs/USAGE_GUIDE.md --- ###


### --- evolution/auto_updater.py --- ###
# evolution/auto_updater.py

"""
Modulo: auto_updater.py
Descrizione: Sistema di auto-evoluzione per Mercurius∞.
Analizza contenuti scaricati, genera codice, verifica in sandbox e salva come nuovo modulo.
"""

import os
from core.sandbox_executor import SandboxExecutor
from evolution.web_scraper import WebScraper
from memory.synaptic_log import SynapticLog
import datetime


class AutoUpdater:
    def __init__(self):
        self.scraper = WebScraper()
        self.sandbox = SandboxExecutor()
        self.logger = SynapticLog()

    def evolve_from_url(self, url: str, save_dir: str = "modules/generated/") -> str:
        """
        Scarica un contenuto e tenta di generare codice eseguibile da esso.
        """
        os.makedirs(save_dir, exist_ok=True)
        raw_html = self.scraper.get_text_from_url(url)
        code_blocks = self.scraper.extract_code_blocks(raw_html)

        generated_files = []
        for i, code in enumerate(code_blocks):
            if not self.sandbox.static_analysis(code):
                continue

            result = self.sandbox.run_sandboxed(code)
            if result["success"]:
                timestamp = datetime.datetime.now().strftime("%Y%m%d_%H%M%S")
                file_name = f"{save_dir}/evo_snippet_{i}_{timestamp}.py"
                with open(file_name, "w") as f:
                    f.write(code)
                self.logger.log_event("AutoUpdater", "Generated", file_name)
                generated_files.append(file_name)

        return f"✅ {len(generated_files)} snippet salvati da {url}"

### --- evolution/behavior_simulator.py --- ###
# evolution/behavior_simulator.py

"""
Modulo: behavior_simulator.py
Descrizione: Simula scenari comportamentali per Mercurius∞ e valuta le risposte.
Utilizza la memoria episodica per registrare gli esiti.
"""

from typing import Dict
from memory.episodic_memory import EpisodicMemory
from memory.synaptic_log import SynapticLog


class BehaviorSimulator:
    def __init__(self):
        self.memory = EpisodicMemory()
        self.log = SynapticLog()

    def simulate_behavior_scenario(self, scenario: Dict) -> None:
        """
        Simula un comportamento e registra l'episodio risultante.
        """
        context = scenario.get("context", "default_behavior_test")
        user_input = scenario.get("stimulus", "Simulazione di risposta")
        ai_response = scenario.get("expected_response", "Risposta AI simulata")

        self.memory.record_episode(context, user_input, ai_response)
        self.log.log_event("BehaviorSimulator", "Simulated Scenario", f"{context} -> {ai_response}")

### --- evolution/logic_injector.py --- ###
# evolution/logic_injector.py

"""
Modulo: logic_injector.py
Descrizione: Inietta dinamicamente nuove funzioni o logiche all'interno di moduli Python di Mercurius∞.
Include verifica della sintassi, esecuzione in sandbox e tracciamento tramite log sinaptico.
"""

import importlib
import types
import traceback

from memory.synaptic_log import SynapticLog
from core.sandbox_executor import SandboxExecutor


class LogicInjector:
    def __init__(self):
        self.logger = SynapticLog()
        self.sandbox = SandboxExecutor()

    def inject_logic(self, module_name: str, function_code: str, function_name: str) -> bool:
        """
        Inietta una funzione in un modulo esistente, con controlli di sicurezza.

        Args:
            module_name (str): Nome del modulo Python (es. "core.executor")
            function_code (str): Codice Python della funzione (come stringa)
            function_name (str): Nome della funzione da iniettare
        Returns:
            bool: True se l'iniezione è riuscita, False altrimenti
        """
        try:
            # Step 1: Verifica statica
            if not self.verify_syntax(function_code):
                self.logger.log_event("LogicInjector", "SyntaxError", "❌ Codice con sintassi errata.")
                return False

            # Step 2: Esecuzione sandboxata preventiva
            sandbox_result = self.sandbox.run_sandboxed(function_code)
            if not sandbox_result.get("success", False):
                self.logger.log_event("LogicInjector", "SandboxFail", sandbox_result.get("output", "Nessun output"))
                return False

            # Step 3: Iniezione del codice
            compiled_func = compile(function_code, "<injected_function>", "exec")
            module = importlib.import_module(module_name)

            exec_env = {}
            exec(compiled_func, exec_env)

            if function_name not in exec_env:
                raise NameError(f"La funzione '{function_name}' non è stata trovata nel codice fornito.")

            new_func = exec_env[function_name]

            if not isinstance(new_func, types.FunctionType):
                raise TypeError(f"L'oggetto '{function_name}' non è una funzione valida.")

            setattr(module, function_name, new_func)
            self.logger.log_event("LogicInjector", "InjectionSuccess", f"✅ Funzione {function_name} iniettata nel modulo {module_name}")
            return True

        except Exception:
            self.logger.log_event("LogicInjector", "InjectionFailed", traceback.format_exc())
            return False

    def verify_syntax(self, code: str) -> bool:
        """
        Verifica se il codice fornito ha una sintassi valida.

        Args:
            code (str): Codice da verificare.
        Returns:
            bool: True se valido, False in caso di SyntaxError.
        """
        try:
            compile(code, "<syntax_check>", "exec")
            return True
        except SyntaxError as e:
            self.logger.log_event("LogicInjector", "SyntaxError", str(e))
            return False

    def test_injection(self, module_name: str, function_name: str, test_args: tuple = ()) -> str:
        """
        Testa una funzione precedentemente iniettata eseguendola.

        Args:
            module_name (str): Nome del modulo target
            function_name (str): Nome della funzione da testare
            test_args (tuple): Argomenti di test da passare alla funzione

        Returns:
            str: Output del test o errore catturato.
        """
        try:
            module = importlib.import_module(module_name)
            func = getattr(module, function_name)
            result = func(*test_args)
            return f"✅ Output della funzione: {result}"
        except Exception:
            return f"❌ Errore durante il test:\n{traceback.format_exc()}"

### --- evolution/neural_plasticity.py --- ###
# evolution/neural_plasticity.py

"""
Modulo: neural_plasticity.py
Descrizione: Simula la plasticità neurale rinforzando l'uso dei moduli più attivi nel sistema Mercurius∞.
Aggiorna il log sinaptico e crea una mappa di rafforzamento.
"""

from memory.synaptic_log import SynapticLog
from collections import defaultdict
import json
import os

PLASTICITY_TRACKER = "data/plasticity_weights.json"


class NeuralPlasticity:
    def __init__(self):
        self.log = SynapticLog()
        self.weights = defaultdict(int)
        self._load_weights()

    def _load_weights(self):
        if os.path.exists(PLASTICITY_TRACKER):
            with open(PLASTICITY_TRACKER, "r") as f:
                self.weights.update(json.load(f))

    def _save_weights(self):
        with open(PLASTICITY_TRACKER, "w") as f:
            json.dump(self.weights, f, indent=2)

    def reinforce_module_usage(self, module_name: str):
        self.weights[module_name] += 1
        self._save_weights()
        self.log.log_event("NeuralPlasticity", "Reinforced", f"{module_name}: {self.weights[module_name]}")

### --- evolution/open_evolve.py --- ###
class OpenEvolve:
    def __init__(self):
        self.name = "OpenEvolve"

    def evolve(self, population: list, generations: int = 10) -> list:
        return [f"{indiv}_gen{generations}" for indiv in population]

### --- evolution/openalpha_evolve.py --- ###
class OpenAlphaEvolve:
    def __init__(self):
        self.name = "OpenAlphaEvolve"

    def simulate_strategy(self, context: dict) -> str:
        return f"[{self.name}] Strategia simulata con successo in contesto: {context}"

### --- evolution/pwb_alphaevolve.py --- ###
class PWBAlphaEvolve:
    def __init__(self):
        self.name = "PWB-AlphaEvolve"

    def evolve_strategy(self, data: list, constraints: dict = {}) -> str:
        return f"[{self.name}] Strategia evoluta su {len(data)} dati con vincoli {constraints}"

### --- evolution/web_scraper.py --- ###
# evolution/web_scraper.py

"""
Modulo: web_scraper.py
Descrizione: Sistema di acquisizione automatica per l’auto-evoluzione di Mercurius∞.
Scarica, estrae e indicizza contenuti testuali e di codice da pagine web, GitHub e documentazione.
"""

import requests
from bs4 import BeautifulSoup
from typing import List


class WebScraper:
    def __init__(self, user_agent: str = "MercuriusBot/1.0"):
        self.headers = {"User-Agent": user_agent}

    def get_text_from_url(self, url: str) -> str:
        """
        Scarica testo leggibile da una pagina web.
        """
        try:
            response = requests.get(url, headers=self.headers, timeout=10)
            if response.status_code != 200:
                return f"[Errore HTTP {response.status_code}]"

            soup = BeautifulSoup(response.text, "html.parser")
            texts = [p.get_text() for p in soup.find_all(["p", "pre", "code", "li"])]
            return "\n".join(texts).strip()

        except Exception as e:
            return f"[Errore scraping]: {e}"

    def extract_code_blocks(self, html_text: str) -> List[str]:
        """
        Estrae blocchi <code> o <pre> come frammenti di codice.
        """
        soup = BeautifulSoup(html_text, "html.parser")
        code_blocks = soup.find_all(["code", "pre"])
        return [block.get_text() for block in code_blocks if block.get_text()]

### --- exports/README.txt --- ###
🧠 Mercurius∞ – Builder Esegubile Desktop

▶ Per creare la versione installabile dell'interfaccia grafica:

1. Installa PyInstaller (se non già presente):
   pip install pyinstaller

2. Avvia il processo build:

   - Windows:
     build_win.bat

   - macOS/Linux:
     bash build_mac.sh

▶ Output:
Troverai l'eseguibile finale in: dist/MercuriusGUI(.exe)

📎 Requisiti:
- Python 3.9+
- dashboard.py funzionante
- Icona in /exports/icon/

### --- exports/build_dashboard.py --- ###
# build_dashboard.py
"""
Script: build_dashboard.py
Uso: genera un eseguibile standalone per il modulo dashboard.py
"""

import os

ENTRY = "dashboard.py"
ICON = "icon/icon.ico"

os.system(f"pyinstaller --onefile --windowed --icon={ICON} --name=MercuriusGUI {ENTRY}")

### --- file_albero_locale.txt --- ###
./
  .env
  .gitignore
  CHANGELOG.md
  dashboard.py
  dashboard_streamlit.py
  file_albero_locale.txt
  list_files.py
  main.py
  pyproject.toml
  README.md
  requirements.txt
  seleziona_cartella.py
  setup.py
  start_fullmode.py
  .git/
    COMMIT_EDITMSG
    config
    description
    HEAD
    index
    ORIG_HEAD
    packed-refs
    filter-repo/
      already_ran
      changed-refs
      commit-map
      first-changed-commits
      ref-map
      suboptimal-issues
    hooks/
      applypatch-msg.sample
      commit-msg.sample
      fsmonitor-watchman.sample
      post-update.sample
      pre-applypatch.sample
      pre-commit.sample
      pre-merge-commit.sample
      pre-push.sample
      pre-rebase.sample
      pre-receive.sample
      prepare-commit-msg.sample
      push-to-checkout.sample
      sendemail-validate.sample
      update.sample
    info/
      exclude
      refs
    logs/
      HEAD
      refs/
        heads/
          main
        remotes/
          origin/
            main
    objects/
      00/
        0c4644329642ba78e2cd1ada115ebe379e4af6
        40e74021c0f90d510ff5aa9f38bf82908244ff
      01/
        b3671f539a7617178cbdd179a4a535602776f9
      02/
        c930a34428141958379765db4bb989840a88a3
      03/
        e6bb6588fb106c53a10dee28bf3bdb27ed2fc1
      0d/
        6a08a82018bce35f3ab880ed1fa1df80cffbf4
      0f/
        50667778bb680abbcad2348d51c2c02a0078c3
      12/
        530a8fb7fc2b755796dfab2086c44b8df7a246
      14/
        d8c1a972d89bd64097a3559dfb766305f5f0f2
        d94ebe296e560f13495faaeb9648bd243ef208
      19/
        8a47d2914853cb4f213bbd8b73a3e26fe16cad
      1d/
        4ba5c319325d9e9d189299deb4901629f3f395
      20/
        056a4c1fd358f0d139b65c43fb63b518cd3848
      21/
        9d837349412896a75ceb68aab0b38dab13ed97
      24/
        a5784c4fc7c271693ed05e4f46aa863d7e5f6e
      2b/
        77c9c83c394c02fd5d95e687efb73468940a3a
      2d/
        ebc1262e7a92680d539c8f002591e9ab77593a
      2e/
        ef76e34370364369b94979cdc99527b20617f3
      2f/
        28bc65fdf6e148b20c5f0738f09285640cfc6f
        c19b97dd57ea97cfd10600ac68b4d61747c996
      31/
        84ce130d0f13fa15de77c28ac2486eb1e28912
      32/
        1666aff24ebbb930479bcdacff81b954e43b21
        af33f12fb23d2c3ae21d49583b1d52c0bbafb6
      36/
        503255b325774ac1fe6b49004dbfd5d14e9580
      37/
        52a5657bd32b93c61a22924768f4f492d35e40
      38/
        65f8bcf47772734860d05e9b994954061c5638
      3a/
        d59d6ab52b67ff4c8d85aa887ec1b77c143068
        e980edd84d82a624e5cc6656c1f56a8e45cfbe
      3b/
        c7adddf953153a87f0c04d1be830ea66021d82
        de6c485644a15663667e6d4ed6ef31c3b0faeb
      3f/
        e4cf13e9b6fedbdc8b92c47563ba76a3c20105
      40/
        dd2c56789c48bdec3b9dc1184c32b4154b47af
      42/
        031961e2440f8a310cea430b28e23554135904
      43/
        a8a34b1a83aa3f2a06e5be17387d6e17123f6c
      45/
        a831f84b29ece71af0e4cbda6c1da7a4d9230a
      46/
        a623b5b01f12213ec2eecf94fbf3975d3a9124
      49/
        d6a927f096f2dedab1cdd59e6a759d245c1687
      4f/
        f6637d7bbf45d17eab8f7a8f8345b6cde1050c
      51/
        b9e9411ce94c940f82906d72f0a73effb175fd
      55/
        ac947908ad60015e354cfbea8962367f3b970d
      61/
        78c8f22b1327b32d3543ed440278c06a7cf4ba
      63/
        5f0e407457031cb5a5dece2fb1822b6a5ee673
      64/
        ab547d9e87cb92cfb2d334d82175945ee2b7e7
      65/
        8828e17ef2b5738dfdc041b3ad56d537e832f5
      6a/
        394f4eddeb14d370aaf711f5768ffcea2889b3
      70/
        082f880e8320e7b4e4de7e20bda48a8e3b63ac
      73/
        2d944117fa42c29e8d0be77ed342c72d963adb
        d2e59fa3096da60ebbf3de0bb6ab169b8d9e2c
      78/
        1dde7c5b9c27dd781649cd31594baa8e07c39a
        a170643d812e320454934759d2d30d90b92f58
      7b/
        b93032b2b1f5142920248083853b3176b5d2a7
      7c/
        611ced77cf01fd1f688ec3ede8beff5c7a4917
      7e/
        d6f4eb069ee594996ca364131749a27858aee6
      7f/
        7e45524f1d4216fad3ad8acef3f9fb5d071410
      82/
        323b2bd60dc79727864edd63304e29370c54a2
      86/
        b17b3330d9051c4c02c4c5411b815bddad6814
      8d/
        0baa0d93ef23efff4a8bde0aad237a3ab5a64c
      93/
        508a98edc13ac1cfe7dfc1eeff523fa23b0f73
      94/
        c338617eafd887ca0a56f955beb05e2bcf2db9
      95/
        148ebe84aa6644c00c7e497e1e770171ad6ed3
      98/
        547da4dfbf3e5007866039a538fa2f66ccddbc
        c493a5744baeede6b56cb9e63a31c57fea90ba
      99/
        872b86a4932047b650a2aef12205c6cd86c3b6
      9c/
        80bea82e6ebcc22b425931e8b96d36f76aa4fc
      9f/
        a66be0fdaf549d7b9d0e1a34edfe86eb165131
      a6/
        1220886f2417d5ae9fb1680d121016fa95c9b8
      aa/
        da2afa8162881d4a4bf014b1149e4f9b7bf759
      ab/
        ed01a85f4054496f02409f222b2fef46c89661
      af/
        421fbfa76ac1b03c8f37d181c2dd2fd12a5511
      b3/
        c74fed4dfa9630a073957deac56ec22e1e732b
      b6/
        c71cb45876dc9b13efe491564e2a1e462253e0
        e462cbe09e34ca4ff35a170649088cbc19e3eb
      b7/
        af62409324ee822ce49bb5d786f9da43ee1d05
        f978b23af63f4b543ae4aef1f712b0ccd0981c
      ba/
        d078afcd23d2592c4bbff1eee3279b0d254aed
      be/
        be983b4c563b8d740ccac743784cf1c9321033
      c1/
        4c6dfeef82e93d78f815213b42a8da4f38ffe9
      c5/
        46b9aa095742f2506885c426dd691f0d993fbe
        6322249fbdb0dee59831a3351ec306d91bd0b5
      c6/
        09404ce4c36da110330885d93dacdac69b82ae
      c9/
        46c14af18a212dc745427f7df47d2e4ca91422
        70434c4e59b08a81680cefc9d4800f0ae56d69
        a026d96964a87e44b9c432ceb60695b23b9217
        e551c0bab3018aabf61fc4ef3600ec1e7fbbc1
      cd/
        f209b0e7219d4623111a82ade9251117925dd6
      d4/
        6a8c88a40a0693799bc9fc6ec637a3d2cf625a
      d6/
        199849ec1e87d76a0dbe15b195b906d17886d7
        f52913d8d9458718d451956f9b8ece11a97078
      df/
        27f27b8a191096a854128385a57175027de4a1
      e1/
        43736092a3e0db145bb1deaeff1c61c5c95fa4
        a995cdc0f94d6eb4f4af45b74111216b801237
      e3/
        0b99f84d01ea9282ec44d1792bda262c4fee80
      e5/
        18f93ba932e89e75022826a575cf6532fc74c9
      e6/
        1ce56f02f4424a0fe349395aa2ff45ab974a4b
      ea/
        964054e3e2e8a4bf1a2b9a61cd0e10ce53a664
      eb/
        16876a95b5aa6f62a94ecee828f228582a5b4c
      ec/
        38faf96f5924e3f17610af99e4d58f5df63d0a
      ed/
        6b29cd2cc84f7cc468308487ad3697c168abe4
      ef/
        48957df5280fa00d0ddcc5cad9d7f6a8870a36
      f3/
        c86da61aff2175b8b80cd77ab9de74df9c0632
      f6/
        2308f65f197683375cb0a1210d2b2b031a9cf1
      f7/
        10bd788e901eb029b08c43c4743a186820755c
      f8/
        21dfb5e1b3333f8c0567857bb66abc0a46cb11
      f9/
        40ed04adebc5c927d5cb67f6682c7fae3f441e
      fa/
        98df16de60f034511cb3f3d16449573e3706c7
      fb/
        80a3df37e322de8fa00df6bc971d654d8b2d37
      info/
        commit-graph
        packs
      pack/
        pack-b1e8f7c545bf0d92a3c1c41584aea2f6133cae93.idx
        pack-b1e8f7c545bf0d92a3c1c41584aea2f6133cae93.pack
        pack-b1e8f7c545bf0d92a3c1c41584aea2f6133cae93.rev
    refs/
      heads/
        main
      remotes/
        origin/
          main
      tags/
  .venv/
    pyvenv.cfg
    etc/
      jupyter/
        nbconfig/
          notebook.d/
            pydeck.json
    Include/
    Lib/
      site-packages/
        .DS_Store
        decorator.py
        distutils-precedence.pth
        isympy.py
        numpy-2.2.6-cp312-cp312-win_amd64.whl
        pefile.py
        peutils.py
        pylab.py
        pythoncom.py
        PyWin32.chm
        pywin32.pth
        pywin32.version.txt
        scipy-1.15.3-cp312-cp312-win_amd64.whl
        six.py
        sounddevice.py
        srt.py
        threadpoolctl.py
        typing_extensions.py
        whisper.py
        _cffi_backend.cp312-win_amd64.pyd
        _sounddevice.py
        __editable__.mercurius_infinite-1.0.0.pth
        __editable___mercurius_infinite_1_0_0_finder.py
        adodbapi/
          adodbapi.py
          ado_consts.py
          apibase.py
          is64bit.py
          license.txt
          process_connect_string.py
          readme.txt
          schema_table.py
          setup.py
          __init__.py
          examples/
            db_print.py
            db_table_names.py
            xls_read.py
            xls_write.py
            __pycache__/
              db_print.cpython-312.pyc
              db_table_names.cpython-312.pyc
              xls_read.cpython-312.pyc
              xls_write.cpython-312.pyc
          test/
            adodbapitest.py
            adodbapitestconfig.py
            dbapi20.py
            is64bit.py
            setuptestframework.py
            test_adodbapi_dbapi20.py
            tryconnection.py
            __pycache__/
              adodbapitest.cpython-312.pyc
              adodbapitestconfig.cpython-312.pyc
              dbapi20.cpython-312.pyc
              is64bit.cpython-312.pyc
              setuptestframework.cpython-312.pyc
              test_adodbapi_dbapi20.cpython-312.pyc
              tryconnection.cpython-312.pyc
          __pycache__/
            adodbapi.cpython-312.pyc
            ado_consts.cpython-312.pyc
            apibase.cpython-312.pyc
            is64bit.cpython-312.pyc
            process_connect_string.cpython-312.pyc
            schema_table.cpython-312.pyc
            setup.cpython-312.pyc
            __init__.cpython-312.pyc
        altair/
          py.typed
          theme.py
          _magics.py
          __init__.py
          expr/
            consts.py
            core.py
            funcs.py
            __init__.py
            __pycache__/
              consts.cpython-312.pyc
              core.cpython-312.pyc
              funcs.cpython-312.pyc
              __init__.cpython-312.pyc
          jupyter/
            jupyter_chart.py
            __init__.py
            js/
              index.js
              README.md
            __pycache__/
              jupyter_chart.cpython-312.pyc
              __init__.cpython-312.pyc
          typing/
            __init__.py
            __pycache__/
              __init__.cpython-312.pyc
          utils/
            compiler.py
            core.py
            data.py
            deprecation.py
            display.py
            execeval.py
            html.py
            mimebundle.py
            plugin_registry.py
            save.py
            schemapi.py
            selection.py
            server.py
            _dfi_types.py
            _importers.py
            _show.py
            _transformed_data.py
            _vegafusion_data.py
            __init__.py
            __pycache__/
              compiler.cpython-312.pyc
              core.cpython-312.pyc
              data.cpython-312.pyc
              deprecation.cpython-312.pyc
              display.cpython-312.pyc
              execeval.cpython-312.pyc
              html.cpython-312.pyc
              mimebundle.cpython-312.pyc
              plugin_registry.cpython-312.pyc
              save.cpython-312.pyc
              schemapi.cpython-312.pyc
              selection.cpython-312.pyc
              server.cpython-312.pyc
              _dfi_types.cpython-312.pyc
              _importers.cpython-312.pyc
              _show.cpython-312.pyc
              _transformed_data.cpython-312.pyc
              _vegafusion_data.cpython-312.pyc
              __init__.cpython-312.pyc
          vegalite/
            api.py
            data.py
            display.py
            schema.py
            __init__.py
            v5/
              api.py
              compiler.py
              data.py
              display.py
              theme.py
              __init__.py
              schema/
                channels.py
                core.py
                mixins.py
                vega-lite-schema.json
                vega-themes.json
                _config.py
                _typing.py
                __init__.py
                __pycache__/
                  channels.cpython-312.pyc
                  core.cpython-312.pyc
                  mixins.cpython-312.pyc
                  _config.cpython-312.pyc
                  _typing.cpython-312.pyc
                  __init__.cpython-312.pyc
              __pycache__/
                api.cpython-312.pyc
                compiler.cpython-312.pyc
                data.cpython-312.pyc
                display.cpython-312.pyc
                theme.cpython-312.pyc
                __init__.cpython-312.pyc
            __pycache__/
              api.cpython-312.pyc
              data.cpython-312.pyc
              display.cpython-312.pyc
              schema.cpython-312.pyc
              __init__.cpython-312.pyc
          __pycache__/
            theme.cpython-312.pyc
            _magics.cpython-312.pyc
            __init__.cpython-312.pyc
        altair-5.5.0.dist-info/
          INSTALLER
          METADATA
          RECORD
          WHEEL
          licenses/
            LICENSE
        altgraph/
          Dot.py
          Graph.py
          GraphAlgo.py
          GraphStat.py
          GraphUtil.py
          ObjectGraph.py
          __init__.py
          __pycache__/
            Dot.cpython-312.pyc
            Graph.cpython-312.pyc
            GraphAlgo.cpython-312.pyc
            GraphStat.cpython-312.pyc
            GraphUtil.cpython-312.pyc
            ObjectGraph.cpython-312.pyc
            __init__.cpython-312.pyc
        altgraph-0.17.4.dist-info/
          INSTALLER
          LICENSE
          METADATA
          RECORD
          top_level.txt
          WHEEL
          zip-safe
        annotated_types/
          py.typed
          test_cases.py
          __init__.py
          __pycache__/
            test_cases.cpython-312.pyc
            __init__.cpython-312.pyc
        annotated_types-0.7.0.dist-info/
          INSTALLER
          METADATA
          RECORD
          WHEEL
          licenses/
            LICENSE
        anyio/
          from_thread.py
          lowlevel.py
          py.typed
          pytest_plugin.py
          to_interpreter.py
          to_process.py
          to_thread.py
          __init__.py
          abc/
            _eventloop.py
            _resources.py
            _sockets.py
            _streams.py
            _subprocesses.py
            _tasks.py
            _testing.py
            __init__.py
            __pycache__/
              _eventloop.cpython-312.pyc
              _resources.cpython-312.pyc
              _sockets.cpython-312.pyc
              _streams.cpython-312.pyc
              _subprocesses.cpython-312.pyc
              _tasks.cpython-312.pyc
              _testing.cpython-312.pyc
              __init__.cpython-312.pyc
          streams/
            buffered.py
            file.py
            memory.py
            stapled.py
            text.py
            tls.py
            __init__.py
            __pycache__/
              buffered.cpython-312.pyc
              file.cpython-312.pyc
              memory.cpython-312.pyc
              stapled.cpython-312.pyc
              text.cpython-312.pyc
              tls.cpython-312.pyc
              __init__.cpython-312.pyc
          _backends/
            _asyncio.py
            _trio.py
            __init__.py
            __pycache__/
              _asyncio.cpython-312.pyc
              _trio.cpython-312.pyc
              __init__.cpython-312.pyc
          _core/
            _asyncio_selector_thread.py
            _eventloop.py
            _exceptions.py
            _fileio.py
            _resources.py
            _signals.py
            _sockets.py
            _streams.py
            _subprocesses.py
            _synchronization.py
            _tasks.py
            _tempfile.py
            _testing.py
            _typedattr.py
            __init__.py
            __pycache__/
              _asyncio_selector_thread.cpython-312.pyc
              _eventloop.cpython-312.pyc
              _exceptions.cpython-312.pyc
              _fileio.cpython-312.pyc
              _resources.cpython-312.pyc
              _signals.cpython-312.pyc
              _sockets.cpython-312.pyc
              _streams.cpython-312.pyc
              _subprocesses.cpython-312.pyc
              _synchronization.cpython-312.pyc
              _tasks.cpython-312.pyc
              _tempfile.cpython-312.pyc
              _testing.cpython-312.pyc
              _typedattr.cpython-312.pyc
              __init__.cpython-312.pyc
          __pycache__/
            from_thread.cpython-312.pyc
            lowlevel.cpython-312.pyc
            pytest_plugin.cpython-312.pyc
            to_interpreter.cpython-312.pyc
            to_process.cpython-312.pyc
            to_thread.cpython-312.pyc
            __init__.cpython-312.pyc
        anyio-4.9.0.dist-info/
          entry_points.txt
          INSTALLER
          LICENSE
          METADATA
          RECORD
          top_level.txt
          WHEEL
        attr/
          converters.py
          converters.pyi
          exceptions.py
          exceptions.pyi
          filters.py
          filters.pyi
          py.typed
          setters.py
          setters.pyi
          validators.py
          validators.pyi
          _cmp.py
          _cmp.pyi
          _compat.py
          _config.py
          _funcs.py
          _make.py
          _next_gen.py
          _typing_compat.pyi
          _version_info.py
          _version_info.pyi
          __init__.py
          __init__.pyi
          __pycache__/
            converters.cpython-312.pyc
            exceptions.cpython-312.pyc
            filters.cpython-312.pyc
            setters.cpython-312.pyc
            validators.cpython-312.pyc
            _cmp.cpython-312.pyc
            _compat.cpython-312.pyc
            _config.cpython-312.pyc
            _funcs.cpython-312.pyc
            _make.cpython-312.pyc
            _next_gen.cpython-312.pyc
            _version_info.cpython-312.pyc
            __init__.cpython-312.pyc
        attrs/
          converters.py
          exceptions.py
          filters.py
          py.typed
          setters.py
          validators.py
          __init__.py
          __init__.pyi
          __pycache__/
            converters.cpython-312.pyc
            exceptions.cpython-312.pyc
            filters.cpython-312.pyc
            setters.cpython-312.pyc
            validators.cpython-312.pyc
            __init__.cpython-312.pyc
        attrs-25.3.0.dist-info/
          INSTALLER
          METADATA
          RECORD
          WHEEL
          licenses/
            LICENSE
        blinker/
          base.py
          py.typed
          _utilities.py
          __init__.py
          __pycache__/
            base.cpython-312.pyc
            _utilities.cpython-312.pyc
            __init__.cpython-312.pyc
        blinker-1.9.0.dist-info/
          INSTALLER
          LICENSE.txt
          METADATA
          RECORD
          WHEEL
        cachetools/
          func.py
          keys.py
          _decorators.py
          __init__.py
          __pycache__/
            func.cpython-312.pyc
            keys.cpython-312.pyc
            _decorators.cpython-312.pyc
            __init__.cpython-312.pyc
        cachetools-5.5.2.dist-info/
          INSTALLER
          LICENSE
          METADATA
          RECORD
          top_level.txt
          WHEEL
        certifi/
          cacert.pem
          core.py
          py.typed
          __init__.py
          __main__.py
          __pycache__/
            core.cpython-312.pyc
            __init__.cpython-312.pyc
            __main__.cpython-312.pyc
        certifi-2025.4.26.dist-info/
          INSTALLER
          METADATA
          RECORD
          top_level.txt
          WHEEL
          licenses/
            LICENSE
        cffi/
          api.py
          backend_ctypes.py
          cffi_opcode.py
          commontypes.py
          cparser.py
          error.py
          ffiplatform.py
          lock.py
          model.py
          parse_c_type.h
          pkgconfig.py
          recompiler.py
          setuptools_ext.py
          vengine_cpy.py
          vengine_gen.py
          verifier.py
          _cffi_errors.h
          _cffi_include.h
          _embedding.h
          _imp_emulation.py
          _shimmed_dist_utils.py
          __init__.py
          __pycache__/
            api.cpython-312.pyc
            backend_ctypes.cpython-312.pyc
            cffi_opcode.cpython-312.pyc
            commontypes.cpython-312.pyc
            cparser.cpython-312.pyc
            error.cpython-312.pyc
            ffiplatform.cpython-312.pyc
            lock.cpython-312.pyc
            model.cpython-312.pyc
            pkgconfig.cpython-312.pyc
            recompiler.cpython-312.pyc
            setuptools_ext.cpython-312.pyc
            vengine_cpy.cpython-312.pyc
            vengine_gen.cpython-312.pyc
            verifier.cpython-312.pyc
            _imp_emulation.cpython-312.pyc
            _shimmed_dist_utils.cpython-312.pyc
            __init__.cpython-312.pyc
        cffi-1.17.1.dist-info/
          entry_points.txt
          INSTALLER
          LICENSE
          METADATA
          RECORD
          top_level.txt
          WHEEL
        charset_normalizer/
          api.py
          cd.py
          constant.py
          legacy.py
          md.cp312-win_amd64.pyd
          md.py
          md__mypyc.cp312-win_amd64.pyd
          models.py
          py.typed
          utils.py
          version.py
          __init__.py
          __main__.py
          cli/
            __init__.py
            __main__.py
            __pycache__/
              __init__.cpython-312.pyc
              __main__.cpython-312.pyc
          __pycache__/
            api.cpython-312.pyc
            cd.cpython-312.pyc
            constant.cpython-312.pyc
            legacy.cpython-312.pyc
            md.cpython-312.pyc
            models.cpython-312.pyc
            utils.cpython-312.pyc
            version.cpython-312.pyc
            __init__.cpython-312.pyc
            __main__.cpython-312.pyc
        charset_normalizer-3.4.2.dist-info/
          entry_points.txt
          INSTALLER
          METADATA
          RECORD
          top_level.txt
          WHEEL
          licenses/
            LICENSE
        click/
          core.py
          decorators.py
          exceptions.py
          formatting.py
          globals.py
          parser.py
          py.typed
          shell_completion.py
          termui.py
          testing.py
          types.py
          utils.py
          _compat.py
          _termui_impl.py
          _textwrap.py
          _winconsole.py
          __init__.py
          __pycache__/
            core.cpython-312.pyc
            decorators.cpython-312.pyc
            exceptions.cpython-312.pyc
            formatting.cpython-312.pyc
            globals.cpython-312.pyc
            parser.cpython-312.pyc
            shell_completion.cpython-312.pyc
            termui.cpython-312.pyc
            testing.cpython-312.pyc
            types.cpython-312.pyc
            utils.cpython-312.pyc
            _compat.cpython-312.pyc
            _termui_impl.cpython-312.pyc
            _textwrap.cpython-312.pyc
            _winconsole.cpython-312.pyc
            __init__.cpython-312.pyc
        click-8.2.1.dist-info/
          INSTALLER
          METADATA
          RECORD
          WHEEL
          licenses/
            LICENSE.txt
        colorama/
          ansi.py
          ansitowin32.py
          initialise.py
          win32.py
          winterm.py
          __init__.py
          tests/
            ansitowin32_test.py
            ansi_test.py
            initialise_test.py
            isatty_test.py
            utils.py
            winterm_test.py
            __init__.py
            __pycache__/
              ansitowin32_test.cpython-312.pyc
              ansi_test.cpython-312.pyc
              initialise_test.cpython-312.pyc
              isatty_test.cpython-312.pyc
              utils.cpython-312.pyc
              winterm_test.cpython-312.pyc
              __init__.cpython-312.pyc
          __pycache__/
            ansi.cpython-312.pyc
            ansitowin32.cpython-312.pyc
            initialise.cpython-312.pyc
            win32.cpython-312.pyc
            winterm.cpython-312.pyc
            __init__.cpython-312.pyc
        colorama-0.4.6.dist-info/
          INSTALLER
          METADATA
          RECORD
          WHEEL
          licenses/
            LICENSE.txt
        comtypes/
          automation.py
          clear_cache.py
          connectionpoints.py
          errorinfo.py
          git.py
          GUID.py
          hints.pyi
          hresult.py
          logutil.py
          messageloop.py
          patcher.py
          persist.py
          safearray.py
          shelllink.py
          stream.py
          typeinfo.py
          util.py
          viewobject.py
          _comobject.py
          _memberspec.py
          _meta.py
          _npsupport.py
          _safearray.py
          _tlib_version_checker.py
          _vtbl.py
          __init__.py
          client/
            dynamic.py
            lazybind.py
            _activeobj.py
            _code_cache.py
            _constants.py
            _create.py
            _events.py
            _generate.py
            _managing.py
            __init__.py
            __pycache__/
              dynamic.cpython-312.pyc
              lazybind.cpython-312.pyc
              _activeobj.cpython-312.pyc
              _code_cache.cpython-312.pyc
              _constants.cpython-312.pyc
              _create.cpython-312.pyc
              _events.cpython-312.pyc
              _generate.cpython-312.pyc
              _managing.cpython-312.pyc
              __init__.cpython-312.pyc
          server/
            automation.py
            connectionpoints.py
            inprocserver.py
            localserver.py
            register.py
            w_getopt.py
            __init__.py
            __pycache__/
              automation.cpython-312.pyc
              connectionpoints.cpython-312.pyc
              inprocserver.cpython-312.pyc
              localserver.cpython-312.pyc
              register.cpython-312.pyc
              w_getopt.cpython-312.pyc
              __init__.cpython-312.pyc
          test/
            find_memleak.py
            mylib.idl
            mylib.tlb
            mytypelib.idl
            runtests.py
            setup.py
            TestComServer.idl
            TestComServer.py
            TestComServer.tlb
            TestDispServer.idl
            TestDispServer.py
            TestDispServer.tlb
            test_agilent.py
            test_avmc.py
            test_basic.py
            test_BSTR.py
            test_casesensitivity.py
            test_clear_cache.py
            test_client.py
            test_client_dynamic.py
            test_client_regenerate_modules.py
            test_collections.py
            test_comobject.py
            test_comserver.py
            test_createwrappers.py
            test_dict.py
            test_dispifc_records.py
            test_dispifc_safearrays.py
            test_dispinterface.py
            test_DISPPARAMS.py
            test_dyndispatch.py
            test_errorinfo.py
            test_excel.py
            test_findgendir.py
            test_getactiveobj.py
            test_GUID.py
            test_hresult.py
            test_ie.py
            test_ienum.py
            test_imfattributes.py
            test_inout_args.py
            test_jscript.js
            test_midl_safearray_create.py
            test_monikers.py
            test_msscript.py
            test_npsupport.py
            test_outparam.py
            test_persist.py
            test_pump_events.py
            test_QueryService.py
            test_recordinfo.py
            test_safearray.py
            test_sapi.py
            test_server.py
            test_server_register.py
            test_shelllink.py
            test_showevents.py
            test_storage.py
            test_stream.py
            test_subinterface.py
            test_typeannotator.py
            test_typeinfo.py
            test_urlhistory.py
            test_variant.py
            test_win32com_interop.py
            test_wmi.py
            test_word.py
            test_w_getopt.py
            urlhist.tlb
            __init__.py
            __pycache__/
              find_memleak.cpython-312.pyc
              runtests.cpython-312.pyc
              setup.cpython-312.pyc
              TestComServer.cpython-312.pyc
              TestDispServer.cpython-312.pyc
              test_agilent.cpython-312.pyc
              test_avmc.cpython-312.pyc
              test_basic.cpython-312.pyc
              test_BSTR.cpython-312.pyc
              test_casesensitivity.cpython-312.pyc
              test_clear_cache.cpython-312.pyc
              test_client.cpython-312.pyc
              test_client_dynamic.cpython-312.pyc
              test_client_regenerate_modules.cpython-312.pyc
              test_collections.cpython-312.pyc
              test_comobject.cpython-312.pyc
              test_comserver.cpython-312.pyc
              test_createwrappers.cpython-312.pyc
              test_dict.cpython-312.pyc
              test_dispifc_records.cpython-312.pyc
              test_dispifc_safearrays.cpython-312.pyc
              test_dispinterface.cpython-312.pyc
              test_DISPPARAMS.cpython-312.pyc
              test_dyndispatch.cpython-312.pyc
              test_errorinfo.cpython-312.pyc
              test_excel.cpython-312.pyc
              test_findgendir.cpython-312.pyc
              test_getactiveobj.cpython-312.pyc
              test_GUID.cpython-312.pyc
              test_hresult.cpython-312.pyc
              test_ie.cpython-312.pyc
              test_ienum.cpython-312.pyc
              test_imfattributes.cpython-312.pyc
              test_inout_args.cpython-312.pyc
              test_midl_safearray_create.cpython-312.pyc
              test_monikers.cpython-312.pyc
              test_msscript.cpython-312.pyc
              test_npsupport.cpython-312.pyc
              test_outparam.cpython-312.pyc
              test_persist.cpython-312.pyc
              test_pump_events.cpython-312.pyc
              test_QueryService.cpython-312.pyc
              test_recordinfo.cpython-312.pyc
              test_safearray.cpython-312.pyc
              test_sapi.cpython-312.pyc
              test_server.cpython-312.pyc
              test_server_register.cpython-312.pyc
              test_shelllink.cpython-312.pyc
              test_showevents.cpython-312.pyc
              test_storage.cpython-312.pyc
              test_stream.cpython-312.pyc
              test_subinterface.cpython-312.pyc
              test_typeannotator.cpython-312.pyc
              test_typeinfo.cpython-312.pyc
              test_urlhistory.cpython-312.pyc
              test_variant.cpython-312.pyc
              test_win32com_interop.cpython-312.pyc
              test_wmi.cpython-312.pyc
              test_word.cpython-312.pyc
              test_w_getopt.cpython-312.pyc
              __init__.cpython-312.pyc
          tools/
            tlbparser.py
            typedesc.py
            typedesc_base.py
            __init__.py
            codegenerator/
              codegenerator.py
              comments.py
              heads.py
              helpers.py
              modulenamer.py
              namespaces.py
              packing.py
              typeannotator.py
              __init__.py
              __pycache__/
                codegenerator.cpython-312.pyc
                comments.cpython-312.pyc
                heads.cpython-312.pyc
                helpers.cpython-312.pyc
                modulenamer.cpython-312.pyc
                namespaces.cpython-312.pyc
                packing.cpython-312.pyc
                typeannotator.cpython-312.pyc
                __init__.cpython-312.pyc
            __pycache__/
              tlbparser.cpython-312.pyc
              typedesc.cpython-312.pyc
              typedesc_base.cpython-312.pyc
              __init__.cpython-312.pyc
          _post_coinit/
            bstr.py
            instancemethod.py
            misc.py
            unknwn.py
            _cominterface_meta_patcher.py
            __init__.py
            __pycache__/
              bstr.cpython-312.pyc
              instancemethod.cpython-312.pyc
              misc.cpython-312.pyc
              unknwn.cpython-312.pyc
              _cominterface_meta_patcher.cpython-312.pyc
              __init__.cpython-312.pyc
          __pycache__/
            automation.cpython-312.pyc
            clear_cache.cpython-312.pyc
            connectionpoints.cpython-312.pyc
            errorinfo.cpython-312.pyc
            git.cpython-312.pyc
            GUID.cpython-312.pyc
            hresult.cpython-312.pyc
            logutil.cpython-312.pyc
            messageloop.cpython-312.pyc
            patcher.cpython-312.pyc
            persist.cpython-312.pyc
            safearray.cpython-312.pyc
            shelllink.cpython-312.pyc
            stream.cpython-312.pyc
            typeinfo.cpython-312.pyc
            util.cpython-312.pyc
            viewobject.cpython-312.pyc
            _comobject.cpython-312.pyc
            _memberspec.cpython-312.pyc
            _meta.cpython-312.pyc
            _npsupport.cpython-312.pyc
            _safearray.cpython-312.pyc
            _tlib_version_checker.cpython-312.pyc
            _vtbl.cpython-312.pyc
            __init__.cpython-312.pyc
        comtypes-1.4.11.dist-info/
          entry_points.txt
          INSTALLER
          METADATA
          RECORD
          top_level.txt
          WHEEL
          licenses/
            LICENSE.txt
        contourpy/
          array.py
          chunk.py
          convert.py
          dechunk.py
          enum_util.py
          py.typed
          typecheck.py
          types.py
          _contourpy.cp312-win_amd64.lib
          _contourpy.cp312-win_amd64.pyd
          _contourpy.pyi
          _version.py
          __init__.py
          util/
            bokeh_renderer.py
            bokeh_util.py
            data.py
            mpl_renderer.py
            mpl_util.py
            renderer.py
            _build_config.py
            __init__.py
            __pycache__/
              bokeh_renderer.cpython-312.pyc
              bokeh_util.cpython-312.pyc
              data.cpython-312.pyc
              mpl_renderer.cpython-312.pyc
              mpl_util.cpython-312.pyc
              renderer.cpython-312.pyc
              _build_config.cpython-312.pyc
              __init__.cpython-312.pyc
          __pycache__/
            array.cpython-312.pyc
            chunk.cpython-312.pyc
            convert.cpython-312.pyc
            dechunk.cpython-312.pyc
            enum_util.cpython-312.pyc
            typecheck.cpython-312.pyc
            types.cpython-312.pyc
            _version.cpython-312.pyc
            __init__.cpython-312.pyc
        contourpy-1.3.2.dist-info/
          INSTALLER
          LICENSE
          METADATA
          RECORD
          WHEEL
        cpuinfo/
          cpuinfo.py
          __init__.py
          __main__.py
          __pycache__/
            cpuinfo.cpython-312.pyc
            __init__.cpython-312.pyc
            __main__.cpython-312.pyc
        cv2/
          config-3.py
          config.py
          cv2.pyd
          LICENSE-3RD-PARTY.txt
          LICENSE.txt
          load_config_py2.py
          load_config_py3.py
          opencv_videoio_ffmpeg4110_64.dll
          py.typed
          version.py
          __init__.py
          __init__.pyi
          aruco/
            __init__.pyi
          barcode/
            __init__.pyi
          cuda/
            __init__.pyi
          data/
            haarcascade_eye.xml
            haarcascade_eye_tree_eyeglasses.xml
            haarcascade_frontalcatface.xml
            haarcascade_frontalcatface_extended.xml
            haarcascade_frontalface_alt.xml
            haarcascade_frontalface_alt2.xml
            haarcascade_frontalface_alt_tree.xml
            haarcascade_frontalface_default.xml
            haarcascade_fullbody.xml
            haarcascade_lefteye_2splits.xml
            haarcascade_license_plate_rus_16stages.xml
            haarcascade_lowerbody.xml
            haarcascade_profileface.xml
            haarcascade_righteye_2splits.xml
            haarcascade_russian_plate_number.xml
            haarcascade_smile.xml
            haarcascade_upperbody.xml
            __init__.py
            __pycache__/
              __init__.cpython-312.pyc
          detail/
            __init__.pyi
          dnn/
            __init__.pyi
          Error/
            __init__.pyi
          fisheye/
            __init__.pyi
          flann/
            __init__.pyi
          gapi/
            __init__.py
            __init__.pyi
            core/
              __init__.pyi
              cpu/
                __init__.pyi
              fluid/
                __init__.pyi
              ocl/
                __init__.pyi
            ie/
              __init__.pyi
              detail/
                __init__.pyi
            imgproc/
              __init__.pyi
              fluid/
                __init__.pyi
            oak/
              __init__.pyi
            onnx/
              __init__.pyi
              ep/
                __init__.pyi
            ot/
              __init__.pyi
              cpu/
                __init__.pyi
            ov/
              __init__.pyi
            own/
              __init__.pyi
              detail/
                __init__.pyi
            render/
              __init__.pyi
              ocv/
                __init__.pyi
            streaming/
              __init__.pyi
            video/
              __init__.pyi
            wip/
              __init__.pyi
              draw/
                __init__.pyi
              gst/
                __init__.pyi
              onevpl/
                __init__.pyi
            __pycache__/
              __init__.cpython-312.pyc
          ipp/
            __init__.pyi
          mat_wrapper/
            __init__.py
            __pycache__/
              __init__.cpython-312.pyc
          misc/
            version.py
            __init__.py
            __pycache__/
              version.cpython-312.pyc
              __init__.cpython-312.pyc
          ml/
            __init__.pyi
          ocl/
            __init__.pyi
          ogl/
            __init__.pyi
          parallel/
            __init__.pyi
          samples/
            __init__.pyi
          segmentation/
            __init__.pyi
          typing/
            __init__.py
            __pycache__/
              __init__.cpython-312.pyc
          utils/
            __init__.py
            __init__.pyi
            fs/
              __init__.pyi
            nested/
              __init__.pyi
            __pycache__/
              __init__.cpython-312.pyc
          videoio_registry/
            __init__.pyi
          __pycache__/
            config-3.cpython-312.pyc
            config.cpython-312.pyc
            load_config_py2.cpython-312.pyc
            load_config_py3.cpython-312.pyc
            version.cpython-312.pyc
            __init__.cpython-312.pyc
        cycler/
          py.typed
          __init__.py
          __pycache__/
            __init__.cpython-312.pyc
        cycler-0.12.1.dist-info/
          INSTALLER
          LICENSE
          METADATA
          RECORD
          top_level.txt
          WHEEL
        dateutil/
          easter.py
          relativedelta.py
          rrule.py
          tzwin.py
          utils.py
          _common.py
          _version.py
          __init__.py
          parser/
            isoparser.py
            _parser.py
            __init__.py
            __pycache__/
              isoparser.cpython-312.pyc
              _parser.cpython-312.pyc
              __init__.cpython-312.pyc
          tz/
            tz.py
            win.py
            _common.py
            _factories.py
            __init__.py
            __pycache__/
              tz.cpython-312.pyc
              win.cpython-312.pyc
              _common.cpython-312.pyc
              _factories.cpython-312.pyc
              __init__.cpython-312.pyc
          zoneinfo/
            dateutil-zoneinfo.tar.gz
            rebuild.py
            __init__.py
            __pycache__/
              rebuild.cpython-312.pyc
              __init__.cpython-312.pyc
          __pycache__/
            easter.cpython-312.pyc
            relativedelta.cpython-312.pyc
            rrule.cpython-312.pyc
            tzwin.cpython-312.pyc
            utils.cpython-312.pyc
            _common.cpython-312.pyc
            _version.cpython-312.pyc
            __init__.cpython-312.pyc
        decorator-5.2.1.dist-info/
          INSTALLER
          LICENSE.txt
          METADATA
          pbr.json
          RECORD
          top_level.txt
          WHEEL
        defusedxml/
          cElementTree.py
          common.py
          ElementTree.py
          expatbuilder.py
          expatreader.py
          lxml.py
          minidom.py
          pulldom.py
          sax.py
          xmlrpc.py
          __init__.py
          __pycache__/
            cElementTree.cpython-312.pyc
            common.cpython-312.pyc
            ElementTree.cpython-312.pyc
            expatbuilder.cpython-312.pyc
            expatreader.cpython-312.pyc
            lxml.cpython-312.pyc
            minidom.cpython-312.pyc
            pulldom.cpython-312.pyc
            sax.cpython-312.pyc
            xmlrpc.cpython-312.pyc
            __init__.cpython-312.pyc
        defusedxml-0.7.1.dist-info/
          INSTALLER
          LICENSE
          METADATA
          RECORD
          top_level.txt
          WHEEL
        distro/
          distro.py
          py.typed
          __init__.py
          __main__.py
          __pycache__/
            distro.cpython-312.pyc
            __init__.cpython-312.pyc
            __main__.cpython-312.pyc
        distro-1.9.0.dist-info/
          entry_points.txt
          INSTALLER
          LICENSE
          METADATA
          RECORD
          top_level.txt
          WHEEL
        dotenv/
          cli.py
          ipython.py
          main.py
          parser.py
          py.typed
          variables.py
          version.py
          __init__.py
          __main__.py
          __pycache__/
            cli.cpython-312.pyc
            ipython.cpython-312.pyc
            main.cpython-312.pyc
            parser.cpython-312.pyc
            variables.cpython-312.pyc
            version.cpython-312.pyc
            __init__.cpython-312.pyc
            __main__.cpython-312.pyc
        filelock/
          asyncio.py
          py.typed
          version.py
          _api.py
          _error.py
          _soft.py
          _unix.py
          _util.py
          _windows.py
          __init__.py
          __pycache__/
            asyncio.cpython-312.pyc
            version.cpython-312.pyc
            _api.cpython-312.pyc
            _error.cpython-312.pyc
            _soft.cpython-312.pyc
            _unix.cpython-312.pyc
            _util.cpython-312.pyc
            _windows.cpython-312.pyc
            __init__.cpython-312.pyc
        filelock-3.18.0.dist-info/
          INSTALLER
          METADATA
          RECORD
          WHEEL
          licenses/
            LICENSE
        fontTools/
          afmLib.py
          agl.py
          fontBuilder.py
          help.py
          tfmLib.py
          ttx.py
          unicode.py
          __init__.py
          __main__.py
          cffLib/
            CFF2ToCFF.py
            CFFToCFF2.py
            specializer.py
            transforms.py
            width.py
            __init__.py
            __pycache__/
              CFF2ToCFF.cpython-312.pyc
              CFFToCFF2.cpython-312.pyc
              specializer.cpython-312.pyc
              transforms.cpython-312.pyc
              width.cpython-312.pyc
              __init__.cpython-312.pyc
          colorLib/
            builder.py
            errors.py
            geometry.py
            table_builder.py
            unbuilder.py
            __init__.py
            __pycache__/
              builder.cpython-312.pyc
              errors.cpython-312.pyc
              geometry.cpython-312.pyc
              table_builder.cpython-312.pyc
              unbuilder.cpython-312.pyc
              __init__.cpython-312.pyc
          config/
            __init__.py
            __pycache__/
              __init__.cpython-312.pyc
          cu2qu/
            benchmark.py
            cli.py
            cu2qu.c
            cu2qu.cp312-win_amd64.pyd
            cu2qu.py
            errors.py
            ufo.py
            __init__.py
            __main__.py
            __pycache__/
              benchmark.cpython-312.pyc
              cli.cpython-312.pyc
              cu2qu.cpython-312.pyc
              errors.cpython-312.pyc
              ufo.cpython-312.pyc
              __init__.cpython-312.pyc
              __main__.cpython-312.pyc
          designspaceLib/
            split.py
            statNames.py
            types.py
            __init__.py
            __main__.py
            __pycache__/
              split.cpython-312.pyc
              statNames.cpython-312.pyc
              types.cpython-312.pyc
              __init__.cpython-312.pyc
              __main__.cpython-312.pyc
          encodings/
            codecs.py
            MacRoman.py
            StandardEncoding.py
            __init__.py
            __pycache__/
              codecs.cpython-312.pyc
              MacRoman.cpython-312.pyc
              StandardEncoding.cpython-312.pyc
              __init__.cpython-312.pyc
          feaLib/
            ast.py
            builder.py
            error.py
            lexer.c
            lexer.cp312-win_amd64.pyd
            lexer.py
            location.py
            lookupDebugInfo.py
            parser.py
            variableScalar.py
            __init__.py
            __main__.py
            __pycache__/
              ast.cpython-312.pyc
              builder.cpython-312.pyc
              error.cpython-312.pyc
              lexer.cpython-312.pyc
              location.cpython-312.pyc
              lookupDebugInfo.cpython-312.pyc
              parser.cpython-312.pyc
              variableScalar.cpython-312.pyc
              __init__.cpython-312.pyc
              __main__.cpython-312.pyc
          merge/
            base.py
            cmap.py
            layout.py
            options.py
            tables.py
            unicode.py
            util.py
            __init__.py
            __main__.py
            __pycache__/
              base.cpython-312.pyc
              cmap.cpython-312.pyc
              layout.cpython-312.pyc
              options.cpython-312.pyc
              tables.cpython-312.pyc
              unicode.cpython-312.pyc
              util.cpython-312.pyc
              __init__.cpython-312.pyc
              __main__.cpython-312.pyc
          misc/
            arrayTools.py
            bezierTools.c
            bezierTools.cp312-win_amd64.pyd
            bezierTools.py
            classifyTools.py
            cliTools.py
            configTools.py
            cython.py
            dictTools.py
            eexec.py
            encodingTools.py
            etree.py
            filenames.py
            fixedTools.py
            intTools.py
            iterTools.py
            lazyTools.py
            loggingTools.py
            macCreatorType.py
            macRes.py
            psCharStrings.py
            psLib.py
            psOperators.py
            py23.py
            roundTools.py
            sstruct.py
            symfont.py
            testTools.py
            textTools.py
            timeTools.py
            transform.py
            treeTools.py
            vector.py
            visitor.py
            xmlReader.py
            xmlWriter.py
            __init__.py
            plistlib/
              py.typed
              __init__.py
              __pycache__/
                __init__.cpython-312.pyc
            __pycache__/
              arrayTools.cpython-312.pyc
              bezierTools.cpython-312.pyc
              classifyTools.cpython-312.pyc
              cliTools.cpython-312.pyc
              configTools.cpython-312.pyc
              cython.cpython-312.pyc
              dictTools.cpython-312.pyc
              eexec.cpython-312.pyc
              encodingTools.cpython-312.pyc
              etree.cpython-312.pyc
              filenames.cpython-312.pyc
              fixedTools.cpython-312.pyc
              intTools.cpython-312.pyc
              iterTools.cpython-312.pyc
              lazyTools.cpython-312.pyc
              loggingTools.cpython-312.pyc
              macCreatorType.cpython-312.pyc
              macRes.cpython-312.pyc
              psCharStrings.cpython-312.pyc
              psLib.cpython-312.pyc
              psOperators.cpython-312.pyc
              py23.cpython-312.pyc
              roundTools.cpython-312.pyc
              sstruct.cpython-312.pyc
              symfont.cpython-312.pyc
              testTools.cpython-312.pyc
              textTools.cpython-312.pyc
              timeTools.cpython-312.pyc
              transform.cpython-312.pyc
              treeTools.cpython-312.pyc
              vector.cpython-312.pyc
              visitor.cpython-312.pyc
              xmlReader.cpython-312.pyc
              xmlWriter.cpython-312.pyc
              __init__.cpython-312.pyc
          mtiLib/
            __init__.py
            __main__.py
            __pycache__/
              __init__.cpython-312.pyc
              __main__.cpython-312.pyc
          otlLib/
            builder.py
            error.py
            maxContextCalc.py
            __init__.py
            optimize/
              gpos.py
              __init__.py
              __main__.py
              __pycache__/
                gpos.cpython-312.pyc
                __init__.cpython-312.pyc
                __main__.cpython-312.pyc
            __pycache__/
              builder.cpython-312.pyc
              error.cpython-312.pyc
              maxContextCalc.cpython-312.pyc
              __init__.cpython-312.pyc
          pens/
            areaPen.py
            basePen.py
            boundsPen.py
            cairoPen.py
            cocoaPen.py
            cu2quPen.py
            explicitClosingLinePen.py
            filterPen.py
            freetypePen.py
            hashPointPen.py
            momentsPen.c
            momentsPen.cp312-win_amd64.pyd
            momentsPen.py
            perimeterPen.py
            pointInsidePen.py
            pointPen.py
            qtPen.py
            qu2cuPen.py
            quartzPen.py
            recordingPen.py
            reportLabPen.py
            reverseContourPen.py
            roundingPen.py
            statisticsPen.py
            svgPathPen.py
            t2CharStringPen.py
            teePen.py
            transformPen.py
            ttGlyphPen.py
            wxPen.py
            __init__.py
            __pycache__/
              areaPen.cpython-312.pyc
              basePen.cpython-312.pyc
              boundsPen.cpython-312.pyc
              cairoPen.cpython-312.pyc
              cocoaPen.cpython-312.pyc
              cu2quPen.cpython-312.pyc
              explicitClosingLinePen.cpython-312.pyc
              filterPen.cpython-312.pyc
              freetypePen.cpython-312.pyc
              hashPointPen.cpython-312.pyc
              momentsPen.cpython-312.pyc
              perimeterPen.cpython-312.pyc
              pointInsidePen.cpython-312.pyc
              pointPen.cpython-312.pyc
              qtPen.cpython-312.pyc
              qu2cuPen.cpython-312.pyc
              quartzPen.cpython-312.pyc
              recordingPen.cpython-312.pyc
              reportLabPen.cpython-312.pyc
              reverseContourPen.cpython-312.pyc
              roundingPen.cpython-312.pyc
              statisticsPen.cpython-312.pyc
              svgPathPen.cpython-312.pyc
              t2CharStringPen.cpython-312.pyc
              teePen.cpython-312.pyc
              transformPen.cpython-312.pyc
              ttGlyphPen.cpython-312.pyc
              wxPen.cpython-312.pyc
              __init__.cpython-312.pyc
          qu2cu/
            benchmark.py
            cli.py
            qu2cu.c
            qu2cu.cp312-win_amd64.pyd
            qu2cu.py
            __init__.py
            __main__.py
            __pycache__/
              benchmark.cpython-312.pyc
              cli.cpython-312.pyc
              qu2cu.cpython-312.pyc
              __init__.cpython-312.pyc
              __main__.cpython-312.pyc
          subset/
            cff.py
            svg.py
            util.py
            __init__.py
            __main__.py
            __pycache__/
              cff.cpython-312.pyc
              svg.cpython-312.pyc
              util.cpython-312.pyc
              __init__.cpython-312.pyc
              __main__.cpython-312.pyc
          svgLib/
            __init__.py
            path/
              arc.py
              parser.py
              shapes.py
              __init__.py
              __pycache__/
                arc.cpython-312.pyc
                parser.cpython-312.pyc
                shapes.cpython-312.pyc
                __init__.cpython-312.pyc
            __pycache__/
              __init__.cpython-312.pyc
          t1Lib/
            __init__.py
            __pycache__/
              __init__.cpython-312.pyc
          ttLib/
            macUtils.py
            removeOverlaps.py
            reorderGlyphs.py
            scaleUpem.py
            sfnt.py
            standardGlyphOrder.py
            ttCollection.py
            ttFont.py
            ttGlyphSet.py
            ttVisitor.py
            woff2.py
            __init__.py
            __main__.py
            tables/
              asciiTable.py
              BitmapGlyphMetrics.py
              B_A_S_E_.py
              C_B_D_T_.py
              C_B_L_C_.py
              C_F_F_.py
              C_F_F__2.py
              C_O_L_R_.py
              C_P_A_L_.py
              DefaultTable.py
              D_S_I_G_.py
              D__e_b_g.py
              E_B_D_T_.py
              E_B_L_C_.py
              F_F_T_M_.py
              F__e_a_t.py
              grUtils.py
              G_D_E_F_.py
              G_M_A_P_.py
              G_P_K_G_.py
              G_P_O_S_.py
              G_S_U_B_.py
              G_V_A_R_.py
              G__l_a_t.py
              G__l_o_c.py
              H_V_A_R_.py
              J_S_T_F_.py
              L_T_S_H_.py
              M_A_T_H_.py
              M_E_T_A_.py
              M_V_A_R_.py
              otBase.py
              otConverters.py
              otData.py
              otTables.py
              otTraverse.py
              O_S_2f_2.py
              sbixGlyph.py
              sbixStrike.py
              S_I_N_G_.py
              S_T_A_T_.py
              S_V_G_.py
              S__i_l_f.py
              S__i_l_l.py
              table_API_readme.txt
              ttProgram.py
              TupleVariation.py
              T_S_I_B_.py
              T_S_I_C_.py
              T_S_I_D_.py
              T_S_I_J_.py
              T_S_I_P_.py
              T_S_I_S_.py
              T_S_I_V_.py
              T_S_I__0.py
              T_S_I__1.py
              T_S_I__2.py
              T_S_I__3.py
              T_S_I__5.py
              T_T_F_A_.py
              V_A_R_C_.py
              V_D_M_X_.py
              V_O_R_G_.py
              V_V_A_R_.py
              _a_n_k_r.py
              _a_v_a_r.py
              _b_s_l_n.py
              _c_i_d_g.py
              _c_m_a_p.py
              _c_v_a_r.py
              _c_v_t.py
              _f_e_a_t.py
              _f_p_g_m.py
              _f_v_a_r.py
              _g_a_s_p.py
              _g_c_i_d.py
              _g_l_y_f.py
              _g_v_a_r.py
              _h_d_m_x.py
              _h_e_a_d.py
              _h_h_e_a.py
              _h_m_t_x.py
              _k_e_r_n.py
              _l_c_a_r.py
              _l_o_c_a.py
              _l_t_a_g.py
              _m_a_x_p.py
              _m_e_t_a.py
              _m_o_r_t.py
              _m_o_r_x.py
              _n_a_m_e.py
              _o_p_b_d.py
              _p_o_s_t.py
              _p_r_e_p.py
              _p_r_o_p.py
              _s_b_i_x.py
              _t_r_a_k.py
              _v_h_e_a.py
              _v_m_t_x.py
              __init__.py
              __pycache__/
                asciiTable.cpython-312.pyc
                BitmapGlyphMetrics.cpython-312.pyc
                B_A_S_E_.cpython-312.pyc
                C_B_D_T_.cpython-312.pyc
                C_B_L_C_.cpython-312.pyc
                C_F_F_.cpython-312.pyc
                C_F_F__2.cpython-312.pyc
                C_O_L_R_.cpython-312.pyc
                C_P_A_L_.cpython-312.pyc
                DefaultTable.cpython-312.pyc
                D_S_I_G_.cpython-312.pyc
                D__e_b_g.cpython-312.pyc
                E_B_D_T_.cpython-312.pyc
                E_B_L_C_.cpython-312.pyc
                F_F_T_M_.cpython-312.pyc
                F__e_a_t.cpython-312.pyc
                grUtils.cpython-312.pyc
                G_D_E_F_.cpython-312.pyc
                G_M_A_P_.cpython-312.pyc
                G_P_K_G_.cpython-312.pyc
                G_P_O_S_.cpython-312.pyc
                G_S_U_B_.cpython-312.pyc
                G_V_A_R_.cpython-312.pyc
                G__l_a_t.cpython-312.pyc
                G__l_o_c.cpython-312.pyc
                H_V_A_R_.cpython-312.pyc
                J_S_T_F_.cpython-312.pyc
                L_T_S_H_.cpython-312.pyc
                M_A_T_H_.cpython-312.pyc
                M_E_T_A_.cpython-312.pyc
                M_V_A_R_.cpython-312.pyc
                otBase.cpython-312.pyc
                otConverters.cpython-312.pyc
                otData.cpython-312.pyc
                otTables.cpython-312.pyc
                otTraverse.cpython-312.pyc
                O_S_2f_2.cpython-312.pyc
                sbixGlyph.cpython-312.pyc
                sbixStrike.cpython-312.pyc
                S_I_N_G_.cpython-312.pyc
                S_T_A_T_.cpython-312.pyc
                S_V_G_.cpython-312.pyc
                S__i_l_f.cpython-312.pyc
                S__i_l_l.cpython-312.pyc
                ttProgram.cpython-312.pyc
                TupleVariation.cpython-312.pyc
                T_S_I_B_.cpython-312.pyc
                T_S_I_C_.cpython-312.pyc
                T_S_I_D_.cpython-312.pyc
                T_S_I_J_.cpython-312.pyc
                T_S_I_P_.cpython-312.pyc
                T_S_I_S_.cpython-312.pyc
                T_S_I_V_.cpython-312.pyc
                T_S_I__0.cpython-312.pyc
                T_S_I__1.cpython-312.pyc
                T_S_I__2.cpython-312.pyc
                T_S_I__3.cpython-312.pyc
                T_S_I__5.cpython-312.pyc
                T_T_F_A_.cpython-312.pyc
                V_A_R_C_.cpython-312.pyc
                V_D_M_X_.cpython-312.pyc
                V_O_R_G_.cpython-312.pyc
                V_V_A_R_.cpython-312.pyc
                _a_n_k_r.cpython-312.pyc
                _a_v_a_r.cpython-312.pyc
                _b_s_l_n.cpython-312.pyc
                _c_i_d_g.cpython-312.pyc
                _c_m_a_p.cpython-312.pyc
                _c_v_a_r.cpython-312.pyc
                _c_v_t.cpython-312.pyc
                _f_e_a_t.cpython-312.pyc
                _f_p_g_m.cpython-312.pyc
                _f_v_a_r.cpython-312.pyc
                _g_a_s_p.cpython-312.pyc
                _g_c_i_d.cpython-312.pyc
                _g_l_y_f.cpython-312.pyc
                _g_v_a_r.cpython-312.pyc
                _h_d_m_x.cpython-312.pyc
                _h_e_a_d.cpython-312.pyc
                _h_h_e_a.cpython-312.pyc
                _h_m_t_x.cpython-312.pyc
                _k_e_r_n.cpython-312.pyc
                _l_c_a_r.cpython-312.pyc
                _l_o_c_a.cpython-312.pyc
                _l_t_a_g.cpython-312.pyc
                _m_a_x_p.cpython-312.pyc
                _m_e_t_a.cpython-312.pyc
                _m_o_r_t.cpython-312.pyc
                _m_o_r_x.cpython-312.pyc
                _n_a_m_e.cpython-312.pyc
                _o_p_b_d.cpython-312.pyc
                _p_o_s_t.cpython-312.pyc
                _p_r_e_p.cpython-312.pyc
                _p_r_o_p.cpython-312.pyc
                _s_b_i_x.cpython-312.pyc
                _t_r_a_k.cpython-312.pyc
                _v_h_e_a.cpython-312.pyc
                _v_m_t_x.cpython-312.pyc
                __init__.cpython-312.pyc
            __pycache__/
              macUtils.cpython-312.pyc
              removeOverlaps.cpython-312.pyc
              reorderGlyphs.cpython-312.pyc
              scaleUpem.cpython-312.pyc
              sfnt.cpython-312.pyc
              standardGlyphOrder.cpython-312.pyc
              ttCollection.cpython-312.pyc
              ttFont.cpython-312.pyc
              ttGlyphSet.cpython-312.pyc
              ttVisitor.cpython-312.pyc
              woff2.cpython-312.pyc
              __init__.cpython-312.pyc
              __main__.cpython-312.pyc
          ufoLib/
            converters.py
            errors.py
            etree.py
            filenames.py
            glifLib.py
            kerning.py
            plistlib.py
            pointPen.py
            utils.py
            validators.py
            __init__.py
            __pycache__/
              converters.cpython-312.pyc
              errors.cpython-312.pyc
              etree.cpython-312.pyc
              filenames.cpython-312.pyc
              glifLib.cpython-312.pyc
              kerning.cpython-312.pyc
              plistlib.cpython-312.pyc
              pointPen.cpython-312.pyc
              utils.cpython-312.pyc
              validators.cpython-312.pyc
              __init__.cpython-312.pyc
          unicodedata/
            Blocks.py
            Mirrored.py
            OTTags.py
            ScriptExtensions.py
            Scripts.py
            __init__.py
            __pycache__/
              Blocks.cpython-312.pyc
              Mirrored.cpython-312.pyc
              OTTags.cpython-312.pyc
              ScriptExtensions.cpython-312.pyc
              Scripts.cpython-312.pyc
              __init__.cpython-312.pyc
          varLib/
            avar.py
            avarPlanner.py
            builder.py
            cff.py
            errors.py
            featureVars.py
            hvar.py
            interpolatable.py
            interpolatableHelpers.py
            interpolatablePlot.py
            interpolatableTestContourOrder.py
            interpolatableTestStartingPoint.py
            interpolate_layout.py
            iup.c
            iup.cp312-win_amd64.pyd
            iup.py
            merger.py
            models.py
            multiVarStore.py
            mutator.py
            mvar.py
            plot.py
            stat.py
            varStore.py
            __init__.py
            __main__.py
            instancer/
              featureVars.py
              names.py
              solver.py
              __init__.py
              __main__.py
              __pycache__/
                featureVars.cpython-312.pyc
                names.cpython-312.pyc
                solver.cpython-312.pyc
                __init__.cpython-312.pyc
                __main__.cpython-312.pyc
            __pycache__/
              avar.cpython-312.pyc
              avarPlanner.cpython-312.pyc
              builder.cpython-312.pyc
              cff.cpython-312.pyc
              errors.cpython-312.pyc
              featureVars.cpython-312.pyc
              hvar.cpython-312.pyc
              interpolatable.cpython-312.pyc
              interpolatableHelpers.cpython-312.pyc
              interpolatablePlot.cpython-312.pyc
              interpolatableTestContourOrder.cpython-312.pyc
              interpolatableTestStartingPoint.cpython-312.pyc
              interpolate_layout.cpython-312.pyc
              iup.cpython-312.pyc
              merger.cpython-312.pyc
              models.cpython-312.pyc
              multiVarStore.cpython-312.pyc
              mutator.cpython-312.pyc
              mvar.cpython-312.pyc
              plot.cpython-312.pyc
              stat.cpython-312.pyc
              varStore.cpython-312.pyc
              __init__.cpython-312.pyc
              __main__.cpython-312.pyc
          voltLib/
            ast.py
            error.py
            lexer.py
            parser.py
            voltToFea.py
            __init__.py
            __main__.py
            __pycache__/
              ast.cpython-312.pyc
              error.cpython-312.pyc
              lexer.cpython-312.pyc
              parser.cpython-312.pyc
              voltToFea.cpython-312.pyc
              __init__.cpython-312.pyc
              __main__.cpython-312.pyc
          __pycache__/
            afmLib.cpython-312.pyc
            agl.cpython-312.pyc
            fontBuilder.cpython-312.pyc
            help.cpython-312.pyc
            tfmLib.cpython-312.pyc
            ttx.cpython-312.pyc
            unicode.cpython-312.pyc
            __init__.cpython-312.pyc
            __main__.cpython-312.pyc
        fonttools-4.58.1.dist-info/
          entry_points.txt
          INSTALLER
          METADATA
          RECORD
          top_level.txt
          WHEEL
          licenses/
            LICENSE
            LICENSE.external
        fsspec/
          archive.py
          asyn.py
          caching.py
          callbacks.py
          compression.py
          config.py
          conftest.py
          core.py
          dircache.py
          exceptions.py
          fuse.py
          generic.py
          gui.py
          json.py
          mapping.py
          parquet.py
          registry.py
          spec.py
          transaction.py
          utils.py
          _version.py
          __init__.py
          implementations/
            arrow.py
            asyn_wrapper.py
            cached.py
            cache_mapper.py
            cache_metadata.py
            dask.py
            data.py
            dbfs.py
            dirfs.py
            ftp.py
            gist.py
            git.py
            github.py
            http.py
            http_sync.py
            jupyter.py
            libarchive.py
            local.py
            memory.py
            reference.py
            sftp.py
            smb.py
            tar.py
            webhdfs.py
            zip.py
            __init__.py
            __pycache__/
              arrow.cpython-312.pyc
              asyn_wrapper.cpython-312.pyc
              cached.cpython-312.pyc
              cache_mapper.cpython-312.pyc
              cache_metadata.cpython-312.pyc
              dask.cpython-312.pyc
              data.cpython-312.pyc
              dbfs.cpython-312.pyc
              dirfs.cpython-312.pyc
              ftp.cpython-312.pyc
              gist.cpython-312.pyc
              git.cpython-312.pyc
              github.cpython-312.pyc
              http.cpython-312.pyc
              http_sync.cpython-312.pyc
              jupyter.cpython-312.pyc
              libarchive.cpython-312.pyc
              local.cpython-312.pyc
              memory.cpython-312.pyc
              reference.cpython-312.pyc
              sftp.cpython-312.pyc
              smb.cpython-312.pyc
              tar.cpython-312.pyc
              webhdfs.cpython-312.pyc
              zip.cpython-312.pyc
              __init__.cpython-312.pyc
          tests/
            abstract/
              common.py
              copy.py
              get.py
              mv.py
              open.py
              pipe.py
              put.py
              __init__.py
              __pycache__/
                common.cpython-312.pyc
                copy.cpython-312.pyc
                get.cpython-312.pyc
                mv.cpython-312.pyc
                open.cpython-312.pyc
                pipe.cpython-312.pyc
                put.cpython-312.pyc
                __init__.cpython-312.pyc
          __pycache__/
            archive.cpython-312.pyc
            asyn.cpython-312.pyc
            caching.cpython-312.pyc
            callbacks.cpython-312.pyc
            compression.cpython-312.pyc
            config.cpython-312.pyc
            conftest.cpython-312.pyc
            core.cpython-312.pyc
            dircache.cpython-312.pyc
            exceptions.cpython-312.pyc
            fuse.cpython-312.pyc
            generic.cpython-312.pyc
            gui.cpython-312.pyc
            json.cpython-312.pyc
            mapping.cpython-312.pyc
            parquet.cpython-312.pyc
            registry.cpython-312.pyc
            spec.cpython-312.pyc
            transaction.cpython-312.pyc
            utils.cpython-312.pyc
            _version.cpython-312.pyc
            __init__.cpython-312.pyc
        fsspec-2025.5.1.dist-info/
          INSTALLER
          METADATA
          RECORD
          WHEEL
          licenses/
            LICENSE
        functorch/
          _C.cp312-win_amd64.pyd
          __init__.py
          compile/
            __init__.py
            __pycache__/
              __init__.cpython-312.pyc
          dim/
            batch_tensor.py
            delayed_mul_tensor.py
            dim.py
            magic_trace.py
            op_properties.py
            reference.py
            tree_map.py
            wrap_type.py
            __init__.py
            __pycache__/
              batch_tensor.cpython-312.pyc
              delayed_mul_tensor.cpython-312.pyc
              dim.cpython-312.pyc
              magic_trace.cpython-312.pyc
              op_properties.cpython-312.pyc
              reference.cpython-312.pyc
              tree_map.cpython-312.pyc
              wrap_type.cpython-312.pyc
              __init__.cpython-312.pyc
          einops/
            rearrange.py
            _parsing.py
            __init__.py
            __pycache__/
              rearrange.cpython-312.pyc
              _parsing.cpython-312.pyc
              __init__.cpython-312.pyc
          experimental/
            control_flow.py
            ops.py
            __init__.py
            __pycache__/
              control_flow.cpython-312.pyc
              ops.cpython-312.pyc
              __init__.cpython-312.pyc
          _src/
            __init__.py
            aot_autograd/
              __init__.py
              __pycache__/
                __init__.cpython-312.pyc
            eager_transforms/
              __init__.py
              __pycache__/
                __init__.cpython-312.pyc
            make_functional/
              __init__.py
              __pycache__/
                __init__.cpython-312.pyc
            vmap/
              __init__.py
              __pycache__/
                __init__.cpython-312.pyc
            __pycache__/
              __init__.cpython-312.pyc
          __pycache__/
            __init__.cpython-312.pyc
        git/
          cmd.py
          compat.py
          config.py
          db.py
          diff.py
          exc.py
          py.typed
          remote.py
          types.py
          util.py
          __init__.py
          index/
            base.py
            fun.py
            typ.py
            util.py
            __init__.py
            __pycache__/
              base.cpython-312.pyc
              fun.cpython-312.pyc
              typ.cpython-312.pyc
              util.cpython-312.pyc
              __init__.cpython-312.pyc
          objects/
            base.py
            blob.py
            commit.py
            fun.py
            tag.py
            tree.py
            util.py
            __init__.py
            submodule/
              base.py
              root.py
              util.py
              __init__.py
              __pycache__/
                base.cpython-312.pyc
                root.cpython-312.pyc
                util.cpython-312.pyc
                __init__.cpython-312.pyc
            __pycache__/
              base.cpython-312.pyc
              blob.cpython-312.pyc
              commit.cpython-312.pyc
              fun.cpython-312.pyc
              tag.cpython-312.pyc
              tree.cpython-312.pyc
              util.cpython-312.pyc
              __init__.cpython-312.pyc
          refs/
            head.py
            log.py
            reference.py
            remote.py
            symbolic.py
            tag.py
            __init__.py
            __pycache__/
              head.cpython-312.pyc
              log.cpython-312.pyc
              reference.cpython-312.pyc
              remote.cpython-312.pyc
              symbolic.cpython-312.pyc
              tag.cpython-312.pyc
              __init__.cpython-312.pyc
          repo/
            base.py
            fun.py
            __init__.py
            __pycache__/
              base.cpython-312.pyc
              fun.cpython-312.pyc
              __init__.cpython-312.pyc
          __pycache__/
            cmd.cpython-312.pyc
            compat.cpython-312.pyc
            config.cpython-312.pyc
            db.cpython-312.pyc
            diff.cpython-312.pyc
            exc.cpython-312.pyc
            remote.cpython-312.pyc
            types.cpython-312.pyc
            util.cpython-312.pyc
            __init__.cpython-312.pyc
        gitdb/
          base.py
          const.py
          exc.py
          fun.py
          pack.py
          stream.py
          typ.py
          util.py
          __init__.py
          db/
            base.py
            git.py
            loose.py
            mem.py
            pack.py
            ref.py
            __init__.py
            __pycache__/
              base.cpython-312.pyc
              git.cpython-312.pyc
              loose.cpython-312.pyc
              mem.cpython-312.pyc
              pack.cpython-312.pyc
              ref.cpython-312.pyc
              __init__.cpython-312.pyc
          test/
            lib.py
            test_base.py
            test_example.py
            test_pack.py
            test_stream.py
            test_util.py
            __init__.py
            __pycache__/
              lib.cpython-312.pyc
              test_base.cpython-312.pyc
              test_example.cpython-312.pyc
              test_pack.cpython-312.pyc
              test_stream.cpython-312.pyc
              test_util.cpython-312.pyc
              __init__.cpython-312.pyc
          utils/
            encoding.py
            __init__.py
            __pycache__/
              encoding.cpython-312.pyc
              __init__.cpython-312.pyc
          __pycache__/
            base.cpython-312.pyc
            const.cpython-312.pyc
            exc.cpython-312.pyc
            fun.cpython-312.pyc
            pack.cpython-312.pyc
            stream.cpython-312.pyc
            typ.cpython-312.pyc
            util.cpython-312.pyc
            __init__.cpython-312.pyc
        gitdb-4.0.12.dist-info/
          AUTHORS
          INSTALLER
          LICENSE
          METADATA
          RECORD
          top_level.txt
          WHEEL
        GitPython-3.1.44.dist-info/
          AUTHORS
          INSTALLER
          LICENSE
          METADATA
          RECORD
          top_level.txt
          WHEEL
        google/
          protobuf/
            any.py
            any_pb2.py
            api_pb2.py
            descriptor.py
            descriptor_database.py
            descriptor_pb2.py
            descriptor_pool.py
            duration.py
            duration_pb2.py
            empty_pb2.py
            field_mask_pb2.py
            json_format.py
            message.py
            message_factory.py
            proto.py
            proto_builder.py
            proto_json.py
            proto_text.py
            reflection.py
            runtime_version.py
            service_reflection.py
            source_context_pb2.py
            struct_pb2.py
            symbol_database.py
            text_encoding.py
            text_format.py
            timestamp.py
            timestamp_pb2.py
            type_pb2.py
            unknown_fields.py
            wrappers_pb2.py
            __init__.py
            compiler/
              plugin_pb2.py
              __init__.py
              __pycache__/
                plugin_pb2.cpython-312.pyc
                __init__.cpython-312.pyc
            internal/
              api_implementation.py
              builder.py
              containers.py
              decoder.py
              encoder.py
              enum_type_wrapper.py
              extension_dict.py
              field_mask.py
              message_listener.py
              python_edition_defaults.py
              python_message.py
              testing_refleaks.py
              type_checkers.py
              well_known_types.py
              wire_format.py
              __init__.py
              __pycache__/
                api_implementation.cpython-312.pyc
                builder.cpython-312.pyc
                containers.cpython-312.pyc
                decoder.cpython-312.pyc
                encoder.cpython-312.pyc
                enum_type_wrapper.cpython-312.pyc
                extension_dict.cpython-312.pyc
                field_mask.cpython-312.pyc
                message_listener.cpython-312.pyc
                python_edition_defaults.cpython-312.pyc
                python_message.cpython-312.pyc
                testing_refleaks.cpython-312.pyc
                type_checkers.cpython-312.pyc
                well_known_types.cpython-312.pyc
                wire_format.cpython-312.pyc
                __init__.cpython-312.pyc
            pyext/
              cpp_message.py
              __init__.py
              __pycache__/
                cpp_message.cpython-312.pyc
                __init__.cpython-312.pyc
            testdata/
              __init__.py
              __pycache__/
                __init__.cpython-312.pyc
            util/
              __init__.py
              __pycache__/
                __init__.cpython-312.pyc
            __pycache__/
              any.cpython-312.pyc
              any_pb2.cpython-312.pyc
              api_pb2.cpython-312.pyc
              descriptor.cpython-312.pyc
              descriptor_database.cpython-312.pyc
              descriptor_pb2.cpython-312.pyc
              descriptor_pool.cpython-312.pyc
              duration.cpython-312.pyc
              duration_pb2.cpython-312.pyc
              empty_pb2.cpython-312.pyc
              field_mask_pb2.cpython-312.pyc
              json_format.cpython-312.pyc
              message.cpython-312.pyc
              message_factory.cpython-312.pyc
              proto.cpython-312.pyc
              proto_builder.cpython-312.pyc
              proto_json.cpython-312.pyc
              proto_text.cpython-312.pyc
              reflection.cpython-312.pyc
              runtime_version.cpython-312.pyc
              service_reflection.cpython-312.pyc
              source_context_pb2.cpython-312.pyc
              struct_pb2.cpython-312.pyc
              symbol_database.cpython-312.pyc
              text_encoding.cpython-312.pyc
              text_format.cpython-312.pyc
              timestamp.cpython-312.pyc
              timestamp_pb2.cpython-312.pyc
              type_pb2.cpython-312.pyc
              unknown_fields.cpython-312.pyc
              wrappers_pb2.cpython-312.pyc
              __init__.cpython-312.pyc
          _upb/
            _message.pyd
        h11/
          py.typed
          _abnf.py
          _connection.py
          _events.py
          _headers.py
          _readers.py
          _receivebuffer.py
          _state.py
          _util.py
          _version.py
          _writers.py
          __init__.py
          __pycache__/
            _abnf.cpython-312.pyc
            _connection.cpython-312.pyc
            _events.cpython-312.pyc
            _headers.cpython-312.pyc
            _readers.cpython-312.pyc
            _receivebuffer.cpython-312.pyc
            _state.cpython-312.pyc
            _util.cpython-312.pyc
            _version.cpython-312.pyc
            _writers.cpython-312.pyc
            __init__.cpython-312.pyc
        h11-0.16.0.dist-info/
          INSTALLER
          METADATA
          RECORD
          top_level.txt
          WHEEL
          licenses/
            LICENSE.txt
        httpcore/
          py.typed
          _api.py
          _exceptions.py
          _models.py
          _ssl.py
          _synchronization.py
          _trace.py
          _utils.py
          __init__.py
          _async/
            connection.py
            connection_pool.py
            http11.py
            http2.py
            http_proxy.py
            interfaces.py
            socks_proxy.py
            __init__.py
            __pycache__/
              connection.cpython-312.pyc
              connection_pool.cpython-312.pyc
              http11.cpython-312.pyc
              http2.cpython-312.pyc
              http_proxy.cpython-312.pyc
              interfaces.cpython-312.pyc
              socks_proxy.cpython-312.pyc
              __init__.cpython-312.pyc
          _backends/
            anyio.py
            auto.py
            base.py
            mock.py
            sync.py
            trio.py
            __init__.py
            __pycache__/
              anyio.cpython-312.pyc
              auto.cpython-312.pyc
              base.cpython-312.pyc
              mock.cpython-312.pyc
              sync.cpython-312.pyc
              trio.cpython-312.pyc
              __init__.cpython-312.pyc
          _sync/
            connection.py
            connection_pool.py
            http11.py
            http2.py
            http_proxy.py
            interfaces.py
            socks_proxy.py
            __init__.py
            __pycache__/
              connection.cpython-312.pyc
              connection_pool.cpython-312.pyc
              http11.cpython-312.pyc
              http2.cpython-312.pyc
              http_proxy.cpython-312.pyc
              interfaces.cpython-312.pyc
              socks_proxy.cpython-312.pyc
              __init__.cpython-312.pyc
          __pycache__/
            _api.cpython-312.pyc
            _exceptions.cpython-312.pyc
            _models.cpython-312.pyc
            _ssl.cpython-312.pyc
            _synchronization.cpython-312.pyc
            _trace.cpython-312.pyc
            _utils.cpython-312.pyc
            __init__.cpython-312.pyc
        httpcore-1.0.9.dist-info/
          INSTALLER
          METADATA
          RECORD
          WHEEL
          licenses/
            LICENSE.md
        httpx/
          py.typed
          _api.py
          _auth.py
          _client.py
          _config.py
          _content.py
          _decoders.py
          _exceptions.py
          _main.py
          _models.py
          _multipart.py
          _status_codes.py
          _types.py
          _urlparse.py
          _urls.py
          _utils.py
          __init__.py
          __version__.py
          _transports/
            asgi.py
            base.py
            default.py
            mock.py
            wsgi.py
            __init__.py
            __pycache__/
              asgi.cpython-312.pyc
              base.cpython-312.pyc
              default.cpython-312.pyc
              mock.cpython-312.pyc
              wsgi.cpython-312.pyc
              __init__.cpython-312.pyc
          __pycache__/
            _api.cpython-312.pyc
            _auth.cpython-312.pyc
            _client.cpython-312.pyc
            _config.cpython-312.pyc
            _content.cpython-312.pyc
            _decoders.cpython-312.pyc
            _exceptions.cpython-312.pyc
            _main.cpython-312.pyc
            _models.cpython-312.pyc
            _multipart.cpython-312.pyc
            _status_codes.cpython-312.pyc
            _types.cpython-312.pyc
            _urlparse.cpython-312.pyc
            _urls.cpython-312.pyc
            _utils.cpython-312.pyc
            __init__.cpython-312.pyc
            __version__.cpython-312.pyc
        httpx-0.28.1.dist-info/
          entry_points.txt
          INSTALLER
          METADATA
          RECORD
          WHEEL
          licenses/
            LICENSE.md
        huggingface_hub/
          community.py
          constants.py
          dataclasses.py
          errors.py
          fastai_utils.py
          file_download.py
          hf_api.py
          hf_file_system.py
          hub_mixin.py
          inference_api.py
          keras_mixin.py
          lfs.py
          py.typed
          repocard.py
          repocard_data.py
          repository.py
          _commit_api.py
          _commit_scheduler.py
          _inference_endpoints.py
          _local_folder.py
          _login.py
          _oauth.py
          _snapshot_download.py
          _space_api.py
          _tensorboard_logger.py
          _upload_large_folder.py
          _webhooks_payload.py
          _webhooks_server.py
          __init__.py
          commands/
            delete_cache.py
            download.py
            env.py
            huggingface_cli.py
            lfs.py
            repo.py
            repo_files.py
            scan_cache.py
            tag.py
            upload.py
            upload_large_folder.py
            user.py
            version.py
            _cli_utils.py
            __init__.py
            __pycache__/
              delete_cache.cpython-312.pyc
              download.cpython-312.pyc
              env.cpython-312.pyc
              huggingface_cli.cpython-312.pyc
              lfs.cpython-312.pyc
              repo.cpython-312.pyc
              repo_files.cpython-312.pyc
              scan_cache.cpython-312.pyc
              tag.cpython-312.pyc
              upload.cpython-312.pyc
              upload_large_folder.cpython-312.pyc
              user.cpython-312.pyc
              version.cpython-312.pyc
              _cli_utils.cpython-312.pyc
              __init__.cpython-312.pyc
          inference/
            _client.py
            _common.py
            __init__.py
            _generated/
              _async_client.py
              __init__.py
              types/
                audio_classification.py
                audio_to_audio.py
                automatic_speech_recognition.py
                base.py
                chat_completion.py
                depth_estimation.py
                document_question_answering.py
                feature_extraction.py
                fill_mask.py
                image_classification.py
                image_segmentation.py
                image_to_image.py
                image_to_text.py
                object_detection.py
                question_answering.py
                sentence_similarity.py
                summarization.py
                table_question_answering.py
                text2text_generation.py
                text_classification.py
                text_generation.py
                text_to_audio.py
                text_to_image.py
                text_to_speech.py
                text_to_video.py
                token_classification.py
                translation.py
                video_classification.py
                visual_question_answering.py
                zero_shot_classification.py
                zero_shot_image_classification.py
                zero_shot_object_detection.py
                __init__.py
                __pycache__/
                  audio_classification.cpython-312.pyc
                  audio_to_audio.cpython-312.pyc
                  automatic_speech_recognition.cpython-312.pyc
                  base.cpython-312.pyc
                  chat_completion.cpython-312.pyc
                  depth_estimation.cpython-312.pyc
                  document_question_answering.cpython-312.pyc
                  feature_extraction.cpython-312.pyc
                  fill_mask.cpython-312.pyc
                  image_classification.cpython-312.pyc
                  image_segmentation.cpython-312.pyc
                  image_to_image.cpython-312.pyc
                  image_to_text.cpython-312.pyc
                  object_detection.cpython-312.pyc
                  question_answering.cpython-312.pyc
                  sentence_similarity.cpython-312.pyc
                  summarization.cpython-312.pyc
                  table_question_answering.cpython-312.pyc
                  text2text_generation.cpython-312.pyc
                  text_classification.cpython-312.pyc
                  text_generation.cpython-312.pyc
                  text_to_audio.cpython-312.pyc
                  text_to_image.cpython-312.pyc
                  text_to_speech.cpython-312.pyc
                  text_to_video.cpython-312.pyc
                  token_classification.cpython-312.pyc
                  translation.cpython-312.pyc
                  video_classification.cpython-312.pyc
                  visual_question_answering.cpython-312.pyc
                  zero_shot_classification.cpython-312.pyc
                  zero_shot_image_classification.cpython-312.pyc
                  zero_shot_object_detection.cpython-312.pyc
                  __init__.cpython-312.pyc
              __pycache__/
                _async_client.cpython-312.pyc
                __init__.cpython-312.pyc
            _mcp/
              agent.py
              cli.py
              constants.py
              mcp_client.py
              utils.py
              _cli_hacks.py
              __init__.py
              __pycache__/
                agent.cpython-312.pyc
                cli.cpython-312.pyc
                constants.cpython-312.pyc
                mcp_client.cpython-312.pyc
                utils.cpython-312.pyc
                _cli_hacks.cpython-312.pyc
                __init__.cpython-312.pyc
            _providers/
              black_forest_labs.py
              cerebras.py
              cohere.py
              fal_ai.py
              fireworks_ai.py
              hf_inference.py
              hyperbolic.py
              nebius.py
              novita.py
              nscale.py
              openai.py
              replicate.py
              sambanova.py
              together.py
              _common.py
              __init__.py
              __pycache__/
                black_forest_labs.cpython-312.pyc
                cerebras.cpython-312.pyc
                cohere.cpython-312.pyc
                fal_ai.cpython-312.pyc
                fireworks_ai.cpython-312.pyc
                hf_inference.cpython-312.pyc
                hyperbolic.cpython-312.pyc
                nebius.cpython-312.pyc
                novita.cpython-312.pyc
                nscale.cpython-312.pyc
                openai.cpython-312.pyc
                replicate.cpython-312.pyc
                sambanova.cpython-312.pyc
                together.cpython-312.pyc
                _common.cpython-312.pyc
                __init__.cpython-312.pyc
            __pycache__/
              _client.cpython-312.pyc
              _common.cpython-312.pyc
              __init__.cpython-312.pyc
          serialization/
            _base.py
            _dduf.py
            _tensorflow.py
            _torch.py
            __init__.py
            __pycache__/
              _base.cpython-312.pyc
              _dduf.cpython-312.pyc
              _tensorflow.cpython-312.pyc
              _torch.cpython-312.pyc
              __init__.cpython-312.pyc
          templates/
            datasetcard_template.md
            modelcard_template.md
          utils/
            endpoint_helpers.py
            insecure_hashlib.py
            logging.py
            sha.py
            tqdm.py
            _auth.py
            _cache_assets.py
            _cache_manager.py
            _chunk_utils.py
            _datetime.py
            _deprecation.py
            _experimental.py
            _fixes.py
            _git_credential.py
            _headers.py
            _hf_folder.py
            _http.py
            _lfs.py
            _pagination.py
            _paths.py
            _runtime.py
            _safetensors.py
            _subprocess.py
            _telemetry.py
            _typing.py
            _validators.py
            _xet.py
            __init__.py
            __pycache__/
              endpoint_helpers.cpython-312.pyc
              insecure_hashlib.cpython-312.pyc
              logging.cpython-312.pyc
              sha.cpython-312.pyc
              tqdm.cpython-312.pyc
              _auth.cpython-312.pyc
              _cache_assets.cpython-312.pyc
              _cache_manager.cpython-312.pyc
              _chunk_utils.cpython-312.pyc
              _datetime.cpython-312.pyc
              _deprecation.cpython-312.pyc
              _experimental.cpython-312.pyc
              _fixes.cpython-312.pyc
              _git_credential.cpython-312.pyc
              _headers.cpython-312.pyc
              _hf_folder.cpython-312.pyc
              _http.cpython-312.pyc
              _lfs.cpython-312.pyc
              _pagination.cpython-312.pyc
              _paths.cpython-312.pyc
              _runtime.cpython-312.pyc
              _safetensors.cpython-312.pyc
              _subprocess.cpython-312.pyc
              _telemetry.cpython-312.pyc
              _typing.cpython-312.pyc
              _validators.cpython-312.pyc
              _xet.cpython-312.pyc
              __init__.cpython-312.pyc
          __pycache__/
            community.cpython-312.pyc
            constants.cpython-312.pyc
            dataclasses.cpython-312.pyc
            errors.cpython-312.pyc
            fastai_utils.cpython-312.pyc
            file_download.cpython-312.pyc
            hf_api.cpython-312.pyc
            hf_file_system.cpython-312.pyc
            hub_mixin.cpython-312.pyc
            inference_api.cpython-312.pyc
            keras_mixin.cpython-312.pyc
            lfs.cpython-312.pyc
            repocard.cpython-312.pyc
            repocard_data.cpython-312.pyc
            repository.cpython-312.pyc
            _commit_api.cpython-312.pyc
            _commit_scheduler.cpython-312.pyc
            _inference_endpoints.cpython-312.pyc
            _local_folder.cpython-312.pyc
            _login.cpython-312.pyc
            _oauth.cpython-312.pyc
            _snapshot_download.cpython-312.pyc
            _space_api.cpython-312.pyc
            _tensorboard_logger.cpython-312.pyc
            _upload_large_folder.cpython-312.pyc
            _webhooks_payload.cpython-312.pyc
            _webhooks_server.cpython-312.pyc
            __init__.cpython-312.pyc
        huggingface_hub-0.32.3.dist-info/
          entry_points.txt
          INSTALLER
          LICENSE
          METADATA
          RECORD
          top_level.txt
          WHEEL
        idna/
          codec.py
          compat.py
          core.py
          idnadata.py
          intranges.py
          package_data.py
          py.typed
          uts46data.py
          __init__.py
          __pycache__/
            codec.cpython-312.pyc
            compat.cpython-312.pyc
            core.cpython-312.pyc
            idnadata.cpython-312.pyc
            intranges.cpython-312.pyc
            package_data.cpython-312.pyc
            uts46data.cpython-312.pyc
            __init__.cpython-312.pyc
        idna-3.10.dist-info/
          INSTALLER
          LICENSE.md
          METADATA
          RECORD
          WHEEL
        imageio/
          freeze.py
          py.typed
          testing.py
          typing.py
          v2.py
          v2.pyi
          v3.py
          v3.pyi
          __init__.py
          __main__.py
          config/
            extensions.py
            extensions.pyi
            plugins.py
            plugins.pyi
            __init__.py
            __pycache__/
              extensions.cpython-312.pyc
              plugins.cpython-312.pyc
              __init__.cpython-312.pyc
          core/
            fetching.py
            findlib.py
            format.py
            format.pyi
            imopen.py
            imopen.pyi
            legacy_plugin_wrapper.py
            legacy_plugin_wrapper.pyi
            request.py
            request.pyi
            util.py
            v3_plugin_api.py
            __init__.py
            __pycache__/
              fetching.cpython-312.pyc
              findlib.cpython-312.pyc
              format.cpython-312.pyc
              imopen.cpython-312.pyc
              legacy_plugin_wrapper.cpython-312.pyc
              request.cpython-312.pyc
              util.cpython-312.pyc
              v3_plugin_api.cpython-312.pyc
              __init__.cpython-312.pyc
          plugins/
            bsdf.py
            dicom.py
            example.py
            feisem.py
            ffmpeg.py
            fits.py
            freeimage.py
            freeimagemulti.py
            gdal.py
            grab.py
            lytro.py
            npz.py
            opencv.py
            pillow.py
            pillowmulti.py
            pillow_info.py
            pillow_legacy.py
            pyav.py
            rawpy.py
            simpleitk.py
            spe.py
            swf.py
            tifffile.py
            tifffile_v3.py
            _bsdf.py
            _dicom.py
            _freeimage.py
            _swf.py
            _tifffile.py
            __init__.py
            __pycache__/
              bsdf.cpython-312.pyc
              dicom.cpython-312.pyc
              example.cpython-312.pyc
              feisem.cpython-312.pyc
              ffmpeg.cpython-312.pyc
              fits.cpython-312.pyc
              freeimage.cpython-312.pyc
              freeimagemulti.cpython-312.pyc
              gdal.cpython-312.pyc
              grab.cpython-312.pyc
              lytro.cpython-312.pyc
              npz.cpython-312.pyc
              opencv.cpython-312.pyc
              pillow.cpython-312.pyc
              pillowmulti.cpython-312.pyc
              pillow_info.cpython-312.pyc
              pillow_legacy.cpython-312.pyc
              pyav.cpython-312.pyc
              rawpy.cpython-312.pyc
              simpleitk.cpython-312.pyc
              spe.cpython-312.pyc
              swf.cpython-312.pyc
              tifffile.cpython-312.pyc
              tifffile_v3.cpython-312.pyc
              _bsdf.cpython-312.pyc
              _dicom.cpython-312.pyc
              _freeimage.cpython-312.pyc
              _swf.cpython-312.pyc
              _tifffile.cpython-312.pyc
              __init__.cpython-312.pyc
          __pycache__/
            freeze.cpython-312.pyc
            testing.cpython-312.pyc
            typing.cpython-312.pyc
            v2.cpython-312.pyc
            v3.cpython-312.pyc
            __init__.cpython-312.pyc
            __main__.cpython-312.pyc
        imageio-2.37.0.dist-info/
          entry_points.txt
          INSTALLER
          LICENSE
          METADATA
          RECORD
          top_level.txt
          WHEEL
        imageio_ffmpeg/
          _definitions.py
          _io.py
          _parsing.py
          _utils.py
          __init__.py
          binaries/
            ffmpeg-win-x86_64-v7.1.exe
            README.md
            __init__.py
            __pycache__/
              __init__.cpython-312.pyc
          __pycache__/
            _definitions.cpython-312.pyc
            _io.cpython-312.pyc
            _parsing.cpython-312.pyc
            _utils.cpython-312.pyc
            __init__.cpython-312.pyc
        imageio_ffmpeg-0.6.0.dist-info/
          INSTALLER
          LICENSE
          METADATA
          RECORD
          top_level.txt
          WHEEL
        isapi/
          install.py
          isapicon.py
          PyISAPI_loader.dll
          README.txt
          simple.py
          threaded_extension.py
          __init__.py
          doc/
            isapi.html
          samples/
            advanced.py
            README.txt
            redirector.py
            redirector_asynch.py
            redirector_with_filter.py
            test.py
            __pycache__/
              advanced.cpython-312.pyc
              redirector.cpython-312.pyc
              redirector_asynch.cpython-312.pyc
              redirector_with_filter.cpython-312.pyc
              test.cpython-312.pyc
          test/
            extension_simple.py
            README.txt
            __pycache__/
              extension_simple.cpython-312.pyc
          __pycache__/
            install.cpython-312.pyc
            isapicon.cpython-312.pyc
            simple.cpython-312.pyc
            threaded_extension.cpython-312.pyc
            __init__.cpython-312.pyc
        jinja2/
          async_utils.py
          bccache.py
          compiler.py
          constants.py
          debug.py
          defaults.py
          environment.py
          exceptions.py
          ext.py
          filters.py
          idtracking.py
          lexer.py
          loaders.py
          meta.py
          nativetypes.py
          nodes.py
          optimizer.py
          parser.py
          py.typed
          runtime.py
          sandbox.py
          tests.py
          utils.py
          visitor.py
          _identifier.py
          __init__.py
          __pycache__/
            async_utils.cpython-312.pyc
            bccache.cpython-312.pyc
            compiler.cpython-312.pyc
            constants.cpython-312.pyc
            debug.cpython-312.pyc
            defaults.cpython-312.pyc
            environment.cpython-312.pyc
            exceptions.cpython-312.pyc
            ext.cpython-312.pyc
            filters.cpython-312.pyc
            idtracking.cpython-312.pyc
            lexer.cpython-312.pyc
            loaders.cpython-312.pyc
            meta.cpython-312.pyc
            nativetypes.cpython-312.pyc
            nodes.cpython-312.pyc
            optimizer.cpython-312.pyc
            parser.cpython-312.pyc
            runtime.cpython-312.pyc
            sandbox.cpython-312.pyc
            tests.cpython-312.pyc
            utils.cpython-312.pyc
            visitor.cpython-312.pyc
            _identifier.cpython-312.pyc
            __init__.cpython-312.pyc
        jinja2-3.1.6.dist-info/
          entry_points.txt
          INSTALLER
          METADATA
          RECORD
          WHEEL
          licenses/
            LICENSE.txt
        jiter/
          jiter.cp312-win_amd64.pyd
          py.typed
          __init__.py
          __init__.pyi
          __pycache__/
            __init__.cpython-312.pyc
        jiter-0.10.0.dist-info/
          INSTALLER
          METADATA
          RECORD
          WHEEL
        joblib/
          backports.py
          compressor.py
          disk.py
          executor.py
          func_inspect.py
          hashing.py
          logger.py
          memory.py
          numpy_pickle.py
          numpy_pickle_compat.py
          numpy_pickle_utils.py
          parallel.py
          pool.py
          testing.py
          _cloudpickle_wrapper.py
          _dask.py
          _memmapping_reducer.py
          _multiprocessing_helpers.py
          _parallel_backends.py
          _store_backends.py
          _utils.py
          __init__.py
          externals/
            __init__.py
            cloudpickle/
              cloudpickle.py
              cloudpickle_fast.py
              __init__.py
              __pycache__/
                cloudpickle.cpython-312.pyc
                cloudpickle_fast.cpython-312.pyc
                __init__.cpython-312.pyc
            loky/
              cloudpickle_wrapper.py
              initializers.py
              process_executor.py
              reusable_executor.py
              _base.py
              __init__.py
              backend/
                context.py
                fork_exec.py
                popen_loky_posix.py
                popen_loky_win32.py
                process.py
                queues.py
                reduction.py
                resource_tracker.py
                spawn.py
                synchronize.py
                utils.py
                _posix_reduction.py
                _win_reduction.py
                __init__.py
                __pycache__/
                  context.cpython-312.pyc
                  fork_exec.cpython-312.pyc
                  popen_loky_posix.cpython-312.pyc
                  popen_loky_win32.cpython-312.pyc
                  process.cpython-312.pyc
                  queues.cpython-312.pyc
                  reduction.cpython-312.pyc
                  resource_tracker.cpython-312.pyc
                  spawn.cpython-312.pyc
                  synchronize.cpython-312.pyc
                  utils.cpython-312.pyc
                  _posix_reduction.cpython-312.pyc
                  _win_reduction.cpython-312.pyc
                  __init__.cpython-312.pyc
              __pycache__/
                cloudpickle_wrapper.cpython-312.pyc
                initializers.cpython-312.pyc
                process_executor.cpython-312.pyc
                reusable_executor.cpython-312.pyc
                _base.cpython-312.pyc
                __init__.cpython-312.pyc
            __pycache__/
              __init__.cpython-312.pyc
          test/
            common.py
            testutils.py
            test_backports.py
            test_cloudpickle_wrapper.py
            test_config.py
            test_dask.py
            test_disk.py
            test_func_inspect.py
            test_func_inspect_special_encoding.py
            test_hashing.py
            test_init.py
            test_logger.py
            test_memmapping.py
            test_memory.py
            test_memory_async.py
            test_missing_multiprocessing.py
            test_module.py
            test_numpy_pickle.py
            test_numpy_pickle_compat.py
            test_numpy_pickle_utils.py
            test_parallel.py
            test_store_backends.py
            test_testing.py
            test_utils.py
            __init__.py
            data/
              create_numpy_pickle.py
              joblib_0.10.0_compressed_pickle_py27_np16.gz
              joblib_0.10.0_compressed_pickle_py27_np17.gz
              joblib_0.10.0_compressed_pickle_py33_np18.gz
              joblib_0.10.0_compressed_pickle_py34_np19.gz
              joblib_0.10.0_compressed_pickle_py35_np19.gz
              joblib_0.10.0_pickle_py27_np17.pkl
              joblib_0.10.0_pickle_py27_np17.pkl.bz2
              joblib_0.10.0_pickle_py27_np17.pkl.gzip
              joblib_0.10.0_pickle_py27_np17.pkl.lzma
              joblib_0.10.0_pickle_py27_np17.pkl.xz
              joblib_0.10.0_pickle_py33_np18.pkl
              joblib_0.10.0_pickle_py33_np18.pkl.bz2
              joblib_0.10.0_pickle_py33_np18.pkl.gzip
              joblib_0.10.0_pickle_py33_np18.pkl.lzma
              joblib_0.10.0_pickle_py33_np18.pkl.xz
              joblib_0.10.0_pickle_py34_np19.pkl
              joblib_0.10.0_pickle_py34_np19.pkl.bz2
              joblib_0.10.0_pickle_py34_np19.pkl.gzip
              joblib_0.10.0_pickle_py34_np19.pkl.lzma
              joblib_0.10.0_pickle_py34_np19.pkl.xz
              joblib_0.10.0_pickle_py35_np19.pkl
              joblib_0.10.0_pickle_py35_np19.pkl.bz2
              joblib_0.10.0_pickle_py35_np19.pkl.gzip
              joblib_0.10.0_pickle_py35_np19.pkl.lzma
              joblib_0.10.0_pickle_py35_np19.pkl.xz
              joblib_0.11.0_compressed_pickle_py36_np111.gz
              joblib_0.11.0_pickle_py36_np111.pkl
              joblib_0.11.0_pickle_py36_np111.pkl.bz2
              joblib_0.11.0_pickle_py36_np111.pkl.gzip
              joblib_0.11.0_pickle_py36_np111.pkl.lzma
              joblib_0.11.0_pickle_py36_np111.pkl.xz
              joblib_0.8.4_compressed_pickle_py27_np17.gz
              joblib_0.9.2_compressed_pickle_py27_np16.gz
              joblib_0.9.2_compressed_pickle_py27_np17.gz
              joblib_0.9.2_compressed_pickle_py34_np19.gz
              joblib_0.9.2_compressed_pickle_py35_np19.gz
              joblib_0.9.2_pickle_py27_np16.pkl
              joblib_0.9.2_pickle_py27_np16.pkl_01.npy
              joblib_0.9.2_pickle_py27_np16.pkl_02.npy
              joblib_0.9.2_pickle_py27_np16.pkl_03.npy
              joblib_0.9.2_pickle_py27_np16.pkl_04.npy
              joblib_0.9.2_pickle_py27_np17.pkl
              joblib_0.9.2_pickle_py27_np17.pkl_01.npy
              joblib_0.9.2_pickle_py27_np17.pkl_02.npy
              joblib_0.9.2_pickle_py27_np17.pkl_03.npy
              joblib_0.9.2_pickle_py27_np17.pkl_04.npy
              joblib_0.9.2_pickle_py33_np18.pkl
              joblib_0.9.2_pickle_py33_np18.pkl_01.npy
              joblib_0.9.2_pickle_py33_np18.pkl_02.npy
              joblib_0.9.2_pickle_py33_np18.pkl_03.npy
              joblib_0.9.2_pickle_py33_np18.pkl_04.npy
              joblib_0.9.2_pickle_py34_np19.pkl
              joblib_0.9.2_pickle_py34_np19.pkl_01.npy
              joblib_0.9.2_pickle_py34_np19.pkl_02.npy
              joblib_0.9.2_pickle_py34_np19.pkl_03.npy
              joblib_0.9.2_pickle_py34_np19.pkl_04.npy
              joblib_0.9.2_pickle_py35_np19.pkl
              joblib_0.9.2_pickle_py35_np19.pkl_01.npy
              joblib_0.9.2_pickle_py35_np19.pkl_02.npy
              joblib_0.9.2_pickle_py35_np19.pkl_03.npy
              joblib_0.9.2_pickle_py35_np19.pkl_04.npy
              joblib_0.9.4.dev0_compressed_cache_size_pickle_py35_np19.gz
              joblib_0.9.4.dev0_compressed_cache_size_pickle_py35_np19.gz_01.npy.z
              joblib_0.9.4.dev0_compressed_cache_size_pickle_py35_np19.gz_02.npy.z
              joblib_0.9.4.dev0_compressed_cache_size_pickle_py35_np19.gz_03.npy.z
              __init__.py
              __pycache__/
                create_numpy_pickle.cpython-312.pyc
                __init__.cpython-312.pyc
            __pycache__/
              common.cpython-312.pyc
              testutils.cpython-312.pyc
              test_backports.cpython-312.pyc
              test_cloudpickle_wrapper.cpython-312.pyc
              test_config.cpython-312.pyc
              test_dask.cpython-312.pyc
              test_disk.cpython-312.pyc
              test_func_inspect.cpython-312.pyc
              test_func_inspect_special_encoding.cpython-312.pyc
              test_hashing.cpython-312.pyc
              test_init.cpython-312.pyc
              test_logger.cpython-312.pyc
              test_memmapping.cpython-312.pyc
              test_memory.cpython-312.pyc
              test_memory_async.cpython-312.pyc
              test_missing_multiprocessing.cpython-312.pyc
              test_module.cpython-312.pyc
              test_numpy_pickle.cpython-312.pyc
              test_numpy_pickle_compat.cpython-312.pyc
              test_numpy_pickle_utils.cpython-312.pyc
              test_parallel.cpython-312.pyc
              test_store_backends.cpython-312.pyc
              test_testing.cpython-312.pyc
              test_utils.cpython-312.pyc
              __init__.cpython-312.pyc
          __pycache__/
            backports.cpython-312.pyc
            compressor.cpython-312.pyc
            disk.cpython-312.pyc
            executor.cpython-312.pyc
            func_inspect.cpython-312.pyc
            hashing.cpython-312.pyc
            logger.cpython-312.pyc
            memory.cpython-312.pyc
            numpy_pickle.cpython-312.pyc
            numpy_pickle_compat.cpython-312.pyc
            numpy_pickle_utils.cpython-312.pyc
            parallel.cpython-312.pyc
            pool.cpython-312.pyc
            testing.cpython-312.pyc
            _cloudpickle_wrapper.cpython-312.pyc
            _dask.cpython-312.pyc
            _memmapping_reducer.cpython-312.pyc
            _multiprocessing_helpers.cpython-312.pyc
            _parallel_backends.cpython-312.pyc
            _store_backends.cpython-312.pyc
            _utils.cpython-312.pyc
            __init__.cpython-312.pyc
        joblib-1.5.1.dist-info/
          INSTALLER
          METADATA
          RECORD
          top_level.txt
          WHEEL
          licenses/
            LICENSE.txt
        jsonschema/
          cli.py
          exceptions.py
          protocols.py
          validators.py
          _format.py
          _keywords.py
          _legacy_keywords.py
          _types.py
          _typing.py
          _utils.py
          __init__.py
          __main__.py
          benchmarks/
            const_vs_enum.py
            contains.py
            issue232.py
            json_schema_test_suite.py
            nested_schemas.py
            subcomponents.py
            unused_registry.py
            useless_applicator_schemas.py
            useless_keywords.py
            validator_creation.py
            __init__.py
            issue232/
              issue.json
            __pycache__/
              const_vs_enum.cpython-312.pyc
              contains.cpython-312.pyc
              issue232.cpython-312.pyc
              json_schema_test_suite.cpython-312.pyc
              nested_schemas.cpython-312.pyc
              subcomponents.cpython-312.pyc
              unused_registry.cpython-312.pyc
              useless_applicator_schemas.cpython-312.pyc
              useless_keywords.cpython-312.pyc
              validator_creation.cpython-312.pyc
              __init__.cpython-312.pyc
          tests/
            fuzz_validate.py
            test_cli.py
            test_deprecations.py
            test_exceptions.py
            test_format.py
            test_jsonschema_test_suite.py
            test_types.py
            test_utils.py
            test_validators.py
            _suite.py
            __init__.py
            __pycache__/
              fuzz_validate.cpython-312.pyc
              test_cli.cpython-312.pyc
              test_deprecations.cpython-312.pyc
              test_exceptions.cpython-312.pyc
              test_format.cpython-312.pyc
              test_jsonschema_test_suite.cpython-312.pyc
              test_types.cpython-312.pyc
              test_utils.cpython-312.pyc
              test_validators.cpython-312.pyc
              _suite.cpython-312.pyc
              __init__.cpython-312.pyc
          __pycache__/
            cli.cpython-312.pyc
            exceptions.cpython-312.pyc
            protocols.cpython-312.pyc
            validators.cpython-312.pyc
            _format.cpython-312.pyc
            _keywords.cpython-312.pyc
            _legacy_keywords.cpython-312.pyc
            _types.cpython-312.pyc
            _typing.cpython-312.pyc
            _utils.cpython-312.pyc
            __init__.cpython-312.pyc
            __main__.cpython-312.pyc
        jsonschema-4.24.0.dist-info/
          entry_points.txt
          INSTALLER
          METADATA
          RECORD
          WHEEL
          licenses/
            COPYING
        jsonschema_specifications/
          _core.py
          __init__.py
          schemas/
            draft201909/
              metaschema.json
              vocabularies/
                applicator
                content
                core
                meta-data
                validation
            draft202012/
              metaschema.json
              vocabularies/
                applicator
                content
                core
                format
                format-annotation
                format-assertion
                meta-data
                unevaluated
                validation
            draft3/
              metaschema.json
            draft4/
              metaschema.json
            draft6/
              metaschema.json
            draft7/
              metaschema.json
          tests/
            test_jsonschema_specifications.py
            __init__.py
            __pycache__/
              test_jsonschema_specifications.cpython-312.pyc
              __init__.cpython-312.pyc
          __pycache__/
            _core.cpython-312.pyc
            __init__.cpython-312.pyc
        jsonschema_specifications-2025.4.1.dist-info/
          INSTALLER
          METADATA
          RECORD
          WHEEL
          licenses/
            COPYING
        kiwisolver/
          exceptions.py
          py.typed
          _cext.cp312-win_amd64.pyd
          _cext.pyi
          __init__.py
          __pycache__/
            exceptions.cpython-312.pyc
            __init__.cpython-312.pyc
        kiwisolver-1.4.8.dist-info/
          INSTALLER
          LICENSE
          METADATA
          RECORD
          top_level.txt
          WHEEL
        markupsafe/
          py.typed
          _native.py
          _speedups.c
          _speedups.cp312-win_amd64.pyd
          _speedups.pyi
          __init__.py
          __pycache__/
            _native.cpython-312.pyc
            __init__.cpython-312.pyc
        MarkupSafe-3.0.2.dist-info/
          INSTALLER
          LICENSE.txt
          METADATA
          RECORD
          top_level.txt
          WHEEL
        matplotlib/
          animation.py
          animation.pyi
          artist.py
          artist.pyi
          axis.py
          axis.pyi
          backend_bases.py
          backend_bases.pyi
          backend_managers.py
          backend_managers.pyi
          backend_tools.py
          backend_tools.pyi
          bezier.py
          bezier.pyi
          category.py
          cbook.py
          cbook.pyi
          cm.py
          cm.pyi
          collections.py
          collections.pyi
          colorbar.py
          colorbar.pyi
          colorizer.py
          colorizer.pyi
          colors.py
          colors.pyi
          container.py
          container.pyi
          contour.py
          contour.pyi
          dates.py
          dviread.py
          dviread.pyi
          figure.py
          figure.pyi
          font_manager.py
          font_manager.pyi
          ft2font.cp312-win_amd64.pyd
          ft2font.pyi
          gridspec.py
          gridspec.pyi
          hatch.py
          hatch.pyi
          image.py
          image.pyi
          inset.py
          inset.pyi
          layout_engine.py
          layout_engine.pyi
          legend.py
          legend.pyi
          legend_handler.py
          legend_handler.pyi
          lines.py
          lines.pyi
          markers.py
          markers.pyi
          mathtext.py
          mathtext.pyi
          mlab.py
          mlab.pyi
          offsetbox.py
          offsetbox.pyi
          patches.py
          patches.pyi
          path.py
          path.pyi
          patheffects.py
          patheffects.pyi
          py.typed
          pylab.py
          pyplot.py
          quiver.py
          quiver.pyi
          rcsetup.py
          rcsetup.pyi
          sankey.py
          sankey.pyi
          scale.py
          scale.pyi
          spines.py
          spines.pyi
          stackplot.py
          stackplot.pyi
          streamplot.py
          streamplot.pyi
          table.py
          table.pyi
          texmanager.py
          texmanager.pyi
          text.py
          text.pyi
          textpath.py
          textpath.pyi
          ticker.py
          ticker.pyi
          transforms.py
          transforms.pyi
          typing.py
          units.py
          widgets.py
          widgets.pyi
          _afm.py
          _animation_data.py
          _blocking_input.py
          _cm.py
          _cm_bivar.py
          _cm_listed.py
          _cm_multivar.py
          _color_data.py
          _color_data.pyi
          _constrained_layout.py
          _c_internal_utils.cp312-win_amd64.pyd
          _c_internal_utils.pyi
          _docstring.py
          _docstring.pyi
          _enums.py
          _enums.pyi
          _fontconfig_pattern.py
          _image.cp312-win_amd64.pyd
          _image.pyi
          _internal_utils.py
          _layoutgrid.py
          _mathtext.py
          _mathtext_data.py
          _path.cp312-win_amd64.pyd
          _path.pyi
          _pylab_helpers.py
          _pylab_helpers.pyi
          _qhull.cp312-win_amd64.pyd
          _qhull.pyi
          _text_helpers.py
          _tight_bbox.py
          _tight_layout.py
          _tri.cp312-win_amd64.pyd
          _tri.pyi
          _type1font.py
          _version.py
          __init__.py
          __init__.pyi
          axes/
            _axes.py
            _axes.pyi
            _base.py
            _base.pyi
            _secondary_axes.py
            _secondary_axes.pyi
            __init__.py
            __init__.pyi
            __pycache__/
              _axes.cpython-312.pyc
              _base.cpython-312.pyc
              _secondary_axes.cpython-312.pyc
              __init__.cpython-312.pyc
          backends/
            backend_agg.py
            backend_cairo.py
            backend_gtk3.py
            backend_gtk3agg.py
            backend_gtk3cairo.py
            backend_gtk4.py
            backend_gtk4agg.py
            backend_gtk4cairo.py
            backend_macosx.py
            backend_mixed.py
            backend_nbagg.py
            backend_pdf.py
            backend_pgf.py
            backend_ps.py
            backend_qt.py
            backend_qt5.py
            backend_qt5agg.py
            backend_qt5cairo.py
            backend_qtagg.py
            backend_qtcairo.py
            backend_svg.py
            backend_template.py
            backend_tkagg.py
            backend_tkcairo.py
            backend_webagg.py
            backend_webagg_core.py
            backend_wx.py
            backend_wxagg.py
            backend_wxcairo.py
            qt_compat.py
            registry.py
            _backend_agg.cp312-win_amd64.pyd
            _backend_agg.pyi
            _backend_gtk.py
            _backend_pdf_ps.py
            _backend_tk.py
            _macosx.pyi
            _tkagg.cp312-win_amd64.pyd
            _tkagg.pyi
            __init__.py
            qt_editor/
              figureoptions.py
              _formlayout.py
              __init__.py
              __pycache__/
                figureoptions.cpython-312.pyc
                _formlayout.cpython-312.pyc
                __init__.cpython-312.pyc
            web_backend/
              all_figures.html
              ipython_inline_figure.html
              single_figure.html
              css/
                boilerplate.css
                fbm.css
                mpl.css
                page.css
              js/
                mpl.js
                mpl_tornado.js
                nbagg_mpl.js
            __pycache__/
              backend_agg.cpython-312.pyc
              backend_cairo.cpython-312.pyc
              backend_gtk3.cpython-312.pyc
              backend_gtk3agg.cpython-312.pyc
              backend_gtk3cairo.cpython-312.pyc
              backend_gtk4.cpython-312.pyc
              backend_gtk4agg.cpython-312.pyc
              backend_gtk4cairo.cpython-312.pyc
              backend_macosx.cpython-312.pyc
              backend_mixed.cpython-312.pyc
              backend_nbagg.cpython-312.pyc
              backend_pdf.cpython-312.pyc
              backend_pgf.cpython-312.pyc
              backend_ps.cpython-312.pyc
              backend_qt.cpython-312.pyc
              backend_qt5.cpython-312.pyc
              backend_qt5agg.cpython-312.pyc
              backend_qt5cairo.cpython-312.pyc
              backend_qtagg.cpython-312.pyc
              backend_qtcairo.cpython-312.pyc
              backend_svg.cpython-312.pyc
              backend_template.cpython-312.pyc
              backend_tkagg.cpython-312.pyc
              backend_tkcairo.cpython-312.pyc
              backend_webagg.cpython-312.pyc
              backend_webagg_core.cpython-312.pyc
              backend_wx.cpython-312.pyc
              backend_wxagg.cpython-312.pyc
              backend_wxcairo.cpython-312.pyc
              qt_compat.cpython-312.pyc
              registry.cpython-312.pyc
              _backend_gtk.cpython-312.pyc
              _backend_pdf_ps.cpython-312.pyc
              _backend_tk.cpython-312.pyc
              __init__.cpython-312.pyc
          mpl-data/
            kpsewhich.lua
            matplotlibrc
            fonts/
              afm/
                cmex10.afm
                cmmi10.afm
                cmr10.afm
                cmsy10.afm
                cmtt10.afm
                pagd8a.afm
                pagdo8a.afm
                pagk8a.afm
                pagko8a.afm
                pbkd8a.afm
                pbkdi8a.afm
                pbkl8a.afm
                pbkli8a.afm
                pcrb8a.afm
                pcrbo8a.afm
                pcrr8a.afm
                pcrro8a.afm
                phvb8a.afm
                phvb8an.afm
                phvbo8a.afm
                phvbo8an.afm
                phvl8a.afm
                phvlo8a.afm
                phvr8a.afm
                phvr8an.afm
                phvro8a.afm
                phvro8an.afm
                pncb8a.afm
                pncbi8a.afm
                pncr8a.afm
                pncri8a.afm
                pplb8a.afm
                pplbi8a.afm
                pplr8a.afm
                pplri8a.afm
                psyr.afm
                ptmb8a.afm
                ptmbi8a.afm
                ptmr8a.afm
                ptmri8a.afm
                putb8a.afm
                putbi8a.afm
                putr8a.afm
                putri8a.afm
                pzcmi8a.afm
                pzdr.afm
              pdfcorefonts/
                Courier-Bold.afm
                Courier-BoldOblique.afm
                Courier-Oblique.afm
                Courier.afm
                Helvetica-Bold.afm
                Helvetica-BoldOblique.afm
                Helvetica-Oblique.afm
                Helvetica.afm
                readme.txt
                Symbol.afm
                Times-Bold.afm
                Times-BoldItalic.afm
                Times-Italic.afm
                Times-Roman.afm
                ZapfDingbats.afm
              ttf/
                cmb10.ttf
                cmex10.ttf
                cmmi10.ttf
                cmr10.ttf
                cmss10.ttf
                cmsy10.ttf
                cmtt10.ttf
                DejaVuSans-Bold.ttf
                DejaVuSans-BoldOblique.ttf
                DejaVuSans-Oblique.ttf
                DejaVuSans.ttf
                DejaVuSansDisplay.ttf
                DejaVuSansMono-Bold.ttf
                DejaVuSansMono-BoldOblique.ttf
                DejaVuSansMono-Oblique.ttf
                DejaVuSansMono.ttf
                DejaVuSerif-Bold.ttf
                DejaVuSerif-BoldItalic.ttf
                DejaVuSerif-Italic.ttf
                DejaVuSerif.ttf
                DejaVuSerifDisplay.ttf
                LICENSE_DEJAVU
                LICENSE_STIX
                STIXGeneral.ttf
                STIXGeneralBol.ttf
                STIXGeneralBolIta.ttf
                STIXGeneralItalic.ttf
                STIXNonUni.ttf
                STIXNonUniBol.ttf
                STIXNonUniBolIta.ttf
                STIXNonUniIta.ttf
                STIXSizFiveSymReg.ttf
                STIXSizFourSymBol.ttf
                STIXSizFourSymReg.ttf
                STIXSizOneSymBol.ttf
                STIXSizOneSymReg.ttf
                STIXSizThreeSymBol.ttf
                STIXSizThreeSymReg.ttf
                STIXSizTwoSymBol.ttf
                STIXSizTwoSymReg.ttf
            images/
              back-symbolic.svg
              back.pdf
              back.png
              back.svg
              back_large.png
              filesave-symbolic.svg
              filesave.pdf
              filesave.png
              filesave.svg
              filesave_large.png
              forward-symbolic.svg
              forward.pdf
              forward.png
              forward.svg
              forward_large.png
              hand.pdf
              hand.png
              hand.svg
              help-symbolic.svg
              help.pdf
              help.png
              help.svg
              help_large.png
              home-symbolic.svg
              home.pdf
              home.png
              home.svg
              home_large.png
              matplotlib.pdf
              matplotlib.png
              matplotlib.svg
              matplotlib_large.png
              move-symbolic.svg
              move.pdf
              move.png
              move.svg
              move_large.png
              qt4_editor_options.pdf
              qt4_editor_options.png
              qt4_editor_options.svg
              qt4_editor_options_large.png
              subplots-symbolic.svg
              subplots.pdf
              subplots.png
              subplots.svg
              subplots_large.png
              zoom_to_rect-symbolic.svg
              zoom_to_rect.pdf
              zoom_to_rect.png
              zoom_to_rect.svg
              zoom_to_rect_large.png
            plot_directive/
              plot_directive.css
            sample_data/
              data_x_x2_x3.csv
              eeg.dat
              embedding_in_wx3.xrc
              goog.npz
              grace_hopper.jpg
              jacksboro_fault_dem.npz
              logo2.png
              membrane.dat
              Minduka_Present_Blue_Pack.png
              msft.csv
              README.txt
              s1045.ima.gz
              Stocks.csv
              topobathy.npz
              axes_grid/
                bivariate_normal.npy
            stylelib/
              bmh.mplstyle
              classic.mplstyle
              dark_background.mplstyle
              fast.mplstyle
              fivethirtyeight.mplstyle
              ggplot.mplstyle
              grayscale.mplstyle
              petroff10.mplstyle
              seaborn-v0_8-bright.mplstyle
              seaborn-v0_8-colorblind.mplstyle
              seaborn-v0_8-dark-palette.mplstyle
              seaborn-v0_8-dark.mplstyle
              seaborn-v0_8-darkgrid.mplstyle
              seaborn-v0_8-deep.mplstyle
              seaborn-v0_8-muted.mplstyle
              seaborn-v0_8-notebook.mplstyle
              seaborn-v0_8-paper.mplstyle
              seaborn-v0_8-pastel.mplstyle
              seaborn-v0_8-poster.mplstyle
              seaborn-v0_8-talk.mplstyle
              seaborn-v0_8-ticks.mplstyle
              seaborn-v0_8-white.mplstyle
              seaborn-v0_8-whitegrid.mplstyle
              seaborn-v0_8.mplstyle
              Solarize_Light2.mplstyle
              tableau-colorblind10.mplstyle
              _classic_test_patch.mplstyle
              _mpl-gallery-nogrid.mplstyle
              _mpl-gallery.mplstyle
          projections/
            geo.py
            geo.pyi
            polar.py
            polar.pyi
            __init__.py
            __init__.pyi
            __pycache__/
              geo.cpython-312.pyc
              polar.cpython-312.pyc
              __init__.cpython-312.pyc
          sphinxext/
            figmpl_directive.py
            mathmpl.py
            plot_directive.py
            roles.py
            __init__.py
            __pycache__/
              figmpl_directive.cpython-312.pyc
              mathmpl.cpython-312.pyc
              plot_directive.cpython-312.pyc
              roles.cpython-312.pyc
              __init__.cpython-312.pyc
          style/
            core.py
            core.pyi
            __init__.py
            __pycache__/
              core.cpython-312.pyc
              __init__.cpython-312.pyc
          testing/
            compare.py
            compare.pyi
            conftest.py
            conftest.pyi
            decorators.py
            decorators.pyi
            exceptions.py
            widgets.py
            widgets.pyi
            _markers.py
            __init__.py
            __init__.pyi
            jpl_units/
              Duration.py
              Epoch.py
              EpochConverter.py
              StrConverter.py
              UnitDbl.py
              UnitDblConverter.py
              UnitDblFormatter.py
              __init__.py
              __pycache__/
                Duration.cpython-312.pyc
                Epoch.cpython-312.pyc
                EpochConverter.cpython-312.pyc
                StrConverter.cpython-312.pyc
                UnitDbl.cpython-312.pyc
                UnitDblConverter.cpython-312.pyc
                UnitDblFormatter.cpython-312.pyc
                __init__.cpython-312.pyc
            __pycache__/
              compare.cpython-312.pyc
              conftest.cpython-312.pyc
              decorators.cpython-312.pyc
              exceptions.cpython-312.pyc
              widgets.cpython-312.pyc
              _markers.cpython-312.pyc
              __init__.cpython-312.pyc
          tests/
            conftest.py
            test_afm.py
            test_agg.py
            test_agg_filter.py
            test_animation.py
            test_api.py
            test_arrow_patches.py
            test_artist.py
            test_axes.py
            test_axis.py
            test_backends_interactive.py
            test_backend_bases.py
            test_backend_cairo.py
            test_backend_gtk3.py
            test_backend_inline.py
            test_backend_macosx.py
            test_backend_nbagg.py
            test_backend_pdf.py
            test_backend_pgf.py
            test_backend_ps.py
            test_backend_qt.py
            test_backend_registry.py
            test_backend_svg.py
            test_backend_template.py
            test_backend_tk.py
            test_backend_tools.py
            test_backend_webagg.py
            test_basic.py
            test_bbox_tight.py
            test_bezier.py
            test_category.py
            test_cbook.py
            test_collections.py
            test_colorbar.py
            test_colors.py
            test_compare_images.py
            test_constrainedlayout.py
            test_container.py
            test_contour.py
            test_cycles.py
            test_dates.py
            test_datetime.py
            test_determinism.py
            test_doc.py
            test_dviread.py
            test_figure.py
            test_fontconfig_pattern.py
            test_font_manager.py
            test_ft2font.py
            test_getattr.py
            test_gridspec.py
            test_image.py
            test_legend.py
            test_lines.py
            test_marker.py
            test_mathtext.py
            test_matplotlib.py
            test_mlab.py
            test_multivariate_colormaps.py
            test_offsetbox.py
            test_patches.py
            test_path.py
            test_patheffects.py
            test_pickle.py
            test_png.py
            test_polar.py
            test_preprocess_data.py
            test_pyplot.py
            test_quiver.py
            test_rcparams.py
            test_sankey.py
            test_scale.py
            test_simplification.py
            test_skew.py
            test_sphinxext.py
            test_spines.py
            test_streamplot.py
            test_style.py
            test_subplots.py
            test_table.py
            test_testing.py
            test_texmanager.py
            test_text.py
            test_textpath.py
            test_ticker.py
            test_tightlayout.py
            test_transforms.py
            test_triangulation.py
            test_type1font.py
            test_units.py
            test_usetex.py
            test_widgets.py
            __init__.py
            __pycache__/
              conftest.cpython-312.pyc
              test_afm.cpython-312.pyc
              test_agg.cpython-312.pyc
              test_agg_filter.cpython-312.pyc
              test_animation.cpython-312.pyc
              test_api.cpython-312.pyc
              test_arrow_patches.cpython-312.pyc
              test_artist.cpython-312.pyc
              test_axes.cpython-312.pyc
              test_axis.cpython-312.pyc
              test_backends_interactive.cpython-312.pyc
              test_backend_bases.cpython-312.pyc
              test_backend_cairo.cpython-312.pyc
              test_backend_gtk3.cpython-312.pyc
              test_backend_inline.cpython-312.pyc
              test_backend_macosx.cpython-312.pyc
              test_backend_nbagg.cpython-312.pyc
              test_backend_pdf.cpython-312.pyc
              test_backend_pgf.cpython-312.pyc
              test_backend_ps.cpython-312.pyc
              test_backend_qt.cpython-312.pyc
              test_backend_registry.cpython-312.pyc
              test_backend_svg.cpython-312.pyc
              test_backend_template.cpython-312.pyc
              test_backend_tk.cpython-312.pyc
              test_backend_tools.cpython-312.pyc
              test_backend_webagg.cpython-312.pyc
              test_basic.cpython-312.pyc
              test_bbox_tight.cpython-312.pyc
              test_bezier.cpython-312.pyc
              test_category.cpython-312.pyc
              test_cbook.cpython-312.pyc
              test_collections.cpython-312.pyc
              test_colorbar.cpython-312.pyc
              test_colors.cpython-312.pyc
              test_compare_images.cpython-312.pyc
              test_constrainedlayout.cpython-312.pyc
              test_container.cpython-312.pyc
              test_contour.cpython-312.pyc
              test_cycles.cpython-312.pyc
              test_dates.cpython-312.pyc
              test_datetime.cpython-312.pyc
              test_determinism.cpython-312.pyc
              test_doc.cpython-312.pyc
              test_dviread.cpython-312.pyc
              test_figure.cpython-312.pyc
              test_fontconfig_pattern.cpython-312.pyc
              test_font_manager.cpython-312.pyc
              test_ft2font.cpython-312.pyc
              test_getattr.cpython-312.pyc
              test_gridspec.cpython-312.pyc
              test_image.cpython-312.pyc
              test_legend.cpython-312.pyc
              test_lines.cpython-312.pyc
              test_marker.cpython-312.pyc
              test_mathtext.cpython-312.pyc
              test_matplotlib.cpython-312.pyc
              test_mlab.cpython-312.pyc
              test_multivariate_colormaps.cpython-312.pyc
              test_offsetbox.cpython-312.pyc
              test_patches.cpython-312.pyc
              test_path.cpython-312.pyc
              test_patheffects.cpython-312.pyc
              test_pickle.cpython-312.pyc
              test_png.cpython-312.pyc
              test_polar.cpython-312.pyc
              test_preprocess_data.cpython-312.pyc
              test_pyplot.cpython-312.pyc
              test_quiver.cpython-312.pyc
              test_rcparams.cpython-312.pyc
              test_sankey.cpython-312.pyc
              test_scale.cpython-312.pyc
              test_simplification.cpython-312.pyc
              test_skew.cpython-312.pyc
              test_sphinxext.cpython-312.pyc
              test_spines.cpython-312.pyc
              test_streamplot.cpython-312.pyc
              test_style.cpython-312.pyc
              test_subplots.cpython-312.pyc
              test_table.cpython-312.pyc
              test_testing.cpython-312.pyc
              test_texmanager.cpython-312.pyc
              test_text.cpython-312.pyc
              test_textpath.cpython-312.pyc
              test_ticker.cpython-312.pyc
              test_tightlayout.cpython-312.pyc
              test_transforms.cpython-312.pyc
              test_triangulation.cpython-312.pyc
              test_type1font.cpython-312.pyc
              test_units.cpython-312.pyc
              test_usetex.cpython-312.pyc
              test_widgets.cpython-312.pyc
              __init__.cpython-312.pyc
          tri/
            _triangulation.py
            _triangulation.pyi
            _tricontour.py
            _tricontour.pyi
            _trifinder.py
            _trifinder.pyi
            _triinterpolate.py
            _triinterpolate.pyi
            _tripcolor.py
            _tripcolor.pyi
            _triplot.py
            _triplot.pyi
            _trirefine.py
            _trirefine.pyi
            _tritools.py
            _tritools.pyi
            __init__.py
            __pycache__/
              _triangulation.cpython-312.pyc
              _tricontour.cpython-312.pyc
              _trifinder.cpython-312.pyc
              _triinterpolate.cpython-312.pyc
              _tripcolor.cpython-312.pyc
              _triplot.cpython-312.pyc
              _trirefine.cpython-312.pyc
              _tritools.cpython-312.pyc
              __init__.cpython-312.pyc
          _api/
            deprecation.py
            deprecation.pyi
            __init__.py
            __init__.pyi
            __pycache__/
              deprecation.cpython-312.pyc
              __init__.cpython-312.pyc
          __pycache__/
            animation.cpython-312.pyc
            artist.cpython-312.pyc
            axis.cpython-312.pyc
            backend_bases.cpython-312.pyc
            backend_managers.cpython-312.pyc
            backend_tools.cpython-312.pyc
            bezier.cpython-312.pyc
            category.cpython-312.pyc
            cbook.cpython-312.pyc
            cm.cpython-312.pyc
            collections.cpython-312.pyc
            colorbar.cpython-312.pyc
            colorizer.cpython-312.pyc
            colors.cpython-312.pyc
            container.cpython-312.pyc
            contour.cpython-312.pyc
            dates.cpython-312.pyc
            dviread.cpython-312.pyc
            figure.cpython-312.pyc
            font_manager.cpython-312.pyc
            gridspec.cpython-312.pyc
            hatch.cpython-312.pyc
            image.cpython-312.pyc
            inset.cpython-312.pyc
            layout_engine.cpython-312.pyc
            legend.cpython-312.pyc
            legend_handler.cpython-312.pyc
            lines.cpython-312.pyc
            markers.cpython-312.pyc
            mathtext.cpython-312.pyc
            mlab.cpython-312.pyc
            offsetbox.cpython-312.pyc
            patches.cpython-312.pyc
            path.cpython-312.pyc
            patheffects.cpython-312.pyc
            pylab.cpython-312.pyc
            pyplot.cpython-312.pyc
            quiver.cpython-312.pyc
            rcsetup.cpython-312.pyc
            sankey.cpython-312.pyc
            scale.cpython-312.pyc
            spines.cpython-312.pyc
            stackplot.cpython-312.pyc
            streamplot.cpython-312.pyc
            table.cpython-312.pyc
            texmanager.cpython-312.pyc
            text.cpython-312.pyc
            textpath.cpython-312.pyc
            ticker.cpython-312.pyc
            transforms.cpython-312.pyc
            typing.cpython-312.pyc
            units.cpython-312.pyc
            widgets.cpython-312.pyc
            _afm.cpython-312.pyc
            _animation_data.cpython-312.pyc
            _blocking_input.cpython-312.pyc
            _cm.cpython-312.pyc
            _cm_bivar.cpython-312.pyc
            _cm_listed.cpython-312.pyc
            _cm_multivar.cpython-312.pyc
            _color_data.cpython-312.pyc
            _constrained_layout.cpython-312.pyc
            _docstring.cpython-312.pyc
            _enums.cpython-312.pyc
            _fontconfig_pattern.cpython-312.pyc
            _internal_utils.cpython-312.pyc
            _layoutgrid.cpython-312.pyc
            _mathtext.cpython-312.pyc
            _mathtext_data.cpython-312.pyc
            _pylab_helpers.cpython-312.pyc
            _text_helpers.cpython-312.pyc
            _tight_bbox.cpython-312.pyc
            _tight_layout.cpython-312.pyc
            _type1font.cpython-312.pyc
            _version.cpython-312.pyc
            __init__.cpython-312.pyc
        matplotlib-3.10.3.dist-info/
          INSTALLER
          LICENSE
          METADATA
          RECORD
          WHEEL
        mercurius_infinite-1.0.0.dist-info/
          direct_url.json
          entry_points.txt
          INSTALLER
          METADATA
          RECORD
          REQUESTED
          top_level.txt
          WHEEL
        moviepy/
          Clip.py
          config.py
          decorators.py
          Effect.py
          tools.py
          version.py
          __init__.py
          audio/
            AudioClip.py
            __init__.py
            fx/
              AudioDelay.py
              AudioFadeIn.py
              AudioFadeOut.py
              AudioLoop.py
              AudioNormalize.py
              MultiplyStereoVolume.py
              MultiplyVolume.py
              __init__.py
              __pycache__/
                AudioDelay.cpython-312.pyc
                AudioFadeIn.cpython-312.pyc
                AudioFadeOut.cpython-312.pyc
                AudioLoop.cpython-312.pyc
                AudioNormalize.cpython-312.pyc
                MultiplyStereoVolume.cpython-312.pyc
                MultiplyVolume.cpython-312.pyc
                __init__.cpython-312.pyc
            io/
              AudioFileClip.py
              ffmpeg_audiowriter.py
              ffplay_audiopreviewer.py
              readers.py
              __init__.py
              __pycache__/
                AudioFileClip.cpython-312.pyc
                ffmpeg_audiowriter.cpython-312.pyc
                ffplay_audiopreviewer.cpython-312.pyc
                readers.cpython-312.pyc
                __init__.cpython-312.pyc
            tools/
              cuts.py
              __init__.py
              __pycache__/
                cuts.cpython-312.pyc
                __init__.cpython-312.pyc
            __pycache__/
              AudioClip.cpython-312.pyc
              __init__.cpython-312.pyc
          video/
            VideoClip.py
            __init__.py
            compositing/
              CompositeVideoClip.py
              __init__.py
              __pycache__/
                CompositeVideoClip.cpython-312.pyc
                __init__.cpython-312.pyc
            fx/
              AccelDecel.py
              BlackAndWhite.py
              Blink.py
              Crop.py
              CrossFadeIn.py
              CrossFadeOut.py
              EvenSize.py
              FadeIn.py
              FadeOut.py
              Freeze.py
              FreezeRegion.py
              GammaCorrection.py
              HeadBlur.py
              InvertColors.py
              Loop.py
              LumContrast.py
              MakeLoopable.py
              Margin.py
              MaskColor.py
              MasksAnd.py
              MasksOr.py
              MirrorX.py
              MirrorY.py
              MultiplyColor.py
              MultiplySpeed.py
              Painting.py
              Resize.py
              Rotate.py
              Scroll.py
              SlideIn.py
              SlideOut.py
              SuperSample.py
              TimeMirror.py
              TimeSymmetrize.py
              __init__.py
              __pycache__/
                AccelDecel.cpython-312.pyc
                BlackAndWhite.cpython-312.pyc
                Blink.cpython-312.pyc
                Crop.cpython-312.pyc
                CrossFadeIn.cpython-312.pyc
                CrossFadeOut.cpython-312.pyc
                EvenSize.cpython-312.pyc
                FadeIn.cpython-312.pyc
                FadeOut.cpython-312.pyc
                Freeze.cpython-312.pyc
                FreezeRegion.cpython-312.pyc
                GammaCorrection.cpython-312.pyc
                HeadBlur.cpython-312.pyc
                InvertColors.cpython-312.pyc
                Loop.cpython-312.pyc
                LumContrast.cpython-312.pyc
                MakeLoopable.cpython-312.pyc
                Margin.cpython-312.pyc
                MaskColor.cpython-312.pyc
                MasksAnd.cpython-312.pyc
                MasksOr.cpython-312.pyc
                MirrorX.cpython-312.pyc
                MirrorY.cpython-312.pyc
                MultiplyColor.cpython-312.pyc
                MultiplySpeed.cpython-312.pyc
                Painting.cpython-312.pyc
                Resize.cpython-312.pyc
                Rotate.cpython-312.pyc
                Scroll.cpython-312.pyc
                SlideIn.cpython-312.pyc
                SlideOut.cpython-312.pyc
                SuperSample.cpython-312.pyc
                TimeMirror.cpython-312.pyc
                TimeSymmetrize.cpython-312.pyc
                __init__.cpython-312.pyc
            io/
              display_in_notebook.py
              ffmpeg_reader.py
              ffmpeg_tools.py
              ffmpeg_writer.py
              ffplay_previewer.py
              gif_writers.py
              ImageSequenceClip.py
              VideoFileClip.py
              __init__.py
              __pycache__/
                display_in_notebook.cpython-312.pyc
                ffmpeg_reader.cpython-312.pyc
                ffmpeg_tools.cpython-312.pyc
                ffmpeg_writer.cpython-312.pyc
                ffplay_previewer.cpython-312.pyc
                gif_writers.cpython-312.pyc
                ImageSequenceClip.cpython-312.pyc
                VideoFileClip.cpython-312.pyc
                __init__.cpython-312.pyc
            tools/
              credits.py
              cuts.py
              drawing.py
              interpolators.py
              subtitles.py
              __init__.py
              __pycache__/
                credits.cpython-312.pyc
                cuts.cpython-312.pyc
                drawing.cpython-312.pyc
                interpolators.cpython-312.pyc
                subtitles.cpython-312.pyc
                __init__.cpython-312.pyc
            __pycache__/
              VideoClip.cpython-312.pyc
              __init__.cpython-312.pyc
          __pycache__/
            Clip.cpython-312.pyc
            config.cpython-312.pyc
            decorators.cpython-312.pyc
            Effect.cpython-312.pyc
            tools.cpython-312.pyc
            version.cpython-312.pyc
            __init__.cpython-312.pyc
        moviepy-2.2.1.dist-info/
          INSTALLER
          METADATA
          RECORD
          REQUESTED
          top_level.txt
          WHEEL
          licenses/
            LICENCE.txt
        mpl_toolkits/
          axes_grid1/
            anchored_artists.py
            axes_divider.py
            axes_grid.py
            axes_rgb.py
            axes_size.py
            inset_locator.py
            mpl_axes.py
            parasite_axes.py
            __init__.py
            tests/
              conftest.py
              test_axes_grid1.py
              __init__.py
              __pycache__/
                conftest.cpython-312.pyc
                test_axes_grid1.cpython-312.pyc
                __init__.cpython-312.pyc
            __pycache__/
              anchored_artists.cpython-312.pyc
              axes_divider.cpython-312.pyc
              axes_grid.cpython-312.pyc
              axes_rgb.cpython-312.pyc
              axes_size.cpython-312.pyc
              inset_locator.cpython-312.pyc
              mpl_axes.cpython-312.pyc
              parasite_axes.cpython-312.pyc
              __init__.cpython-312.pyc
          axisartist/
            angle_helper.py
            axes_divider.py
            axislines.py
            axisline_style.py
            axis_artist.py
            floating_axes.py
            grid_finder.py
            grid_helper_curvelinear.py
            parasite_axes.py
            __init__.py
            tests/
              conftest.py
              test_angle_helper.py
              test_axislines.py
              test_axis_artist.py
              test_floating_axes.py
              test_grid_finder.py
              test_grid_helper_curvelinear.py
              __init__.py
              __pycache__/
                conftest.cpython-312.pyc
                test_angle_helper.cpython-312.pyc
                test_axislines.cpython-312.pyc
                test_axis_artist.cpython-312.pyc
                test_floating_axes.cpython-312.pyc
                test_grid_finder.cpython-312.pyc
                test_grid_helper_curvelinear.cpython-312.pyc
                __init__.cpython-312.pyc
            __pycache__/
              angle_helper.cpython-312.pyc
              axes_divider.cpython-312.pyc
              axislines.cpython-312.pyc
              axisline_style.cpython-312.pyc
              axis_artist.cpython-312.pyc
              floating_axes.cpython-312.pyc
              grid_finder.cpython-312.pyc
              grid_helper_curvelinear.cpython-312.pyc
              parasite_axes.cpython-312.pyc
              __init__.cpython-312.pyc
          mplot3d/
            art3d.py
            axes3d.py
            axis3d.py
            proj3d.py
            __init__.py
            tests/
              conftest.py
              test_art3d.py
              test_axes3d.py
              test_legend3d.py
              __init__.py
              __pycache__/
                conftest.cpython-312.pyc
                test_art3d.cpython-312.pyc
                test_axes3d.cpython-312.pyc
                test_legend3d.cpython-312.pyc
                __init__.cpython-312.pyc
            __pycache__/
              art3d.cpython-312.pyc
              axes3d.cpython-312.pyc
              axis3d.cpython-312.pyc
              proj3d.cpython-312.pyc
              __init__.cpython-312.pyc
        mpmath/
          ctx_base.py
          ctx_fp.py
          ctx_iv.py
          ctx_mp.py
          ctx_mp_python.py
          function_docs.py
          identification.py
          math2.py
          rational.py
          usertools.py
          visualization.py
          __init__.py
          calculus/
            approximation.py
            calculus.py
            differentiation.py
            extrapolation.py
            inverselaplace.py
            odes.py
            optimization.py
            polynomials.py
            quadrature.py
            __init__.py
            __pycache__/
              approximation.cpython-312.pyc
              calculus.cpython-312.pyc
              differentiation.cpython-312.pyc
              extrapolation.cpython-312.pyc
              inverselaplace.cpython-312.pyc
              odes.cpython-312.pyc
              optimization.cpython-312.pyc
              polynomials.cpython-312.pyc
              quadrature.cpython-312.pyc
              __init__.cpython-312.pyc
          functions/
            bessel.py
            elliptic.py
            expintegrals.py
            factorials.py
            functions.py
            hypergeometric.py
            orthogonal.py
            qfunctions.py
            rszeta.py
            signals.py
            theta.py
            zeta.py
            zetazeros.py
            __init__.py
            __pycache__/
              bessel.cpython-312.pyc
              elliptic.cpython-312.pyc
              expintegrals.cpython-312.pyc
              factorials.cpython-312.pyc
              functions.cpython-312.pyc
              hypergeometric.cpython-312.pyc
              orthogonal.cpython-312.pyc
              qfunctions.cpython-312.pyc
              rszeta.cpython-312.pyc
              signals.cpython-312.pyc
              theta.cpython-312.pyc
              zeta.cpython-312.pyc
              zetazeros.cpython-312.pyc
              __init__.cpython-312.pyc
          libmp/
            backend.py
            gammazeta.py
            libelefun.py
            libhyper.py
            libintmath.py
            libmpc.py
            libmpf.py
            libmpi.py
            __init__.py
            __pycache__/
              backend.cpython-312.pyc
              gammazeta.cpython-312.pyc
              libelefun.cpython-312.pyc
              libhyper.cpython-312.pyc
              libintmath.cpython-312.pyc
              libmpc.cpython-312.pyc
              libmpf.cpython-312.pyc
              libmpi.cpython-312.pyc
              __init__.cpython-312.pyc
          matrices/
            calculus.py
            eigen.py
            eigen_symmetric.py
            linalg.py
            matrices.py
            __init__.py
            __pycache__/
              calculus.cpython-312.pyc
              eigen.cpython-312.pyc
              eigen_symmetric.cpython-312.pyc
              linalg.cpython-312.pyc
              matrices.cpython-312.pyc
              __init__.cpython-312.pyc
          tests/
            extratest_gamma.py
            extratest_zeta.py
            runtests.py
            test_basic_ops.py
            test_bitwise.py
            test_calculus.py
            test_compatibility.py
            test_convert.py
            test_diff.py
            test_division.py
            test_eigen.py
            test_eigen_symmetric.py
            test_elliptic.py
            test_fp.py
            test_functions.py
            test_functions2.py
            test_gammazeta.py
            test_hp.py
            test_identify.py
            test_interval.py
            test_levin.py
            test_linalg.py
            test_matrices.py
            test_mpmath.py
            test_ode.py
            test_pickle.py
            test_power.py
            test_quad.py
            test_rootfinding.py
            test_special.py
            test_str.py
            test_summation.py
            test_trig.py
            test_visualization.py
            torture.py
            __init__.py
            __pycache__/
              extratest_gamma.cpython-312.pyc
              extratest_zeta.cpython-312.pyc
              runtests.cpython-312.pyc
              test_basic_ops.cpython-312.pyc
              test_bitwise.cpython-312.pyc
              test_calculus.cpython-312.pyc
              test_compatibility.cpython-312.pyc
              test_convert.cpython-312.pyc
              test_diff.cpython-312.pyc
              test_division.cpython-312.pyc
              test_eigen.cpython-312.pyc
              test_eigen_symmetric.cpython-312.pyc
              test_elliptic.cpython-312.pyc
              test_fp.cpython-312.pyc
              test_functions.cpython-312.pyc
              test_functions2.cpython-312.pyc
              test_gammazeta.cpython-312.pyc
              test_hp.cpython-312.pyc
              test_identify.cpython-312.pyc
              test_interval.cpython-312.pyc
              test_levin.cpython-312.pyc
              test_linalg.cpython-312.pyc
              test_matrices.cpython-312.pyc
              test_mpmath.cpython-312.pyc
              test_ode.cpython-312.pyc
              test_pickle.cpython-312.pyc
              test_power.cpython-312.pyc
              test_quad.cpython-312.pyc
              test_rootfinding.cpython-312.pyc
              test_special.cpython-312.pyc
              test_str.cpython-312.pyc
              test_summation.cpython-312.pyc
              test_trig.cpython-312.pyc
              test_visualization.cpython-312.pyc
              torture.cpython-312.pyc
              __init__.cpython-312.pyc
          __pycache__/
            ctx_base.cpython-312.pyc
            ctx_fp.cpython-312.pyc
            ctx_iv.cpython-312.pyc
            ctx_mp.cpython-312.pyc
            ctx_mp_python.cpython-312.pyc
            function_docs.cpython-312.pyc
            identification.cpython-312.pyc
            math2.cpython-312.pyc
            rational.cpython-312.pyc
            usertools.cpython-312.pyc
            visualization.cpython-312.pyc
            __init__.cpython-312.pyc
        mpmath-1.3.0.dist-info/
          INSTALLER
          LICENSE
          METADATA
          RECORD
          top_level.txt
          WHEEL
        narwhals/
          dataframe.py
          dependencies.py
          dtypes.py
          exceptions.py
          expr.py
          expr_cat.py
          expr_dt.py
          expr_list.py
          expr_name.py
          expr_str.py
          expr_struct.py
          functions.py
          group_by.py
          py.typed
          schema.py
          selectors.py
          series.py
          series_cat.py
          series_dt.py
          series_list.py
          series_str.py
          series_struct.py
          this.py
          translate.py
          typing.py
          utils.py
          _duration.py
          _enum.py
          _expression_parsing.py
          _namespace.py
          _translate.py
          _typing_compat.py
          __init__.py
          stable/
            __init__.py
            v1/
              dependencies.py
              dtypes.py
              selectors.py
              typing.py
              _dtypes.py
              _namespace.py
              __init__.py
              __pycache__/
                dependencies.cpython-312.pyc
                dtypes.cpython-312.pyc
                selectors.cpython-312.pyc
                typing.cpython-312.pyc
                _dtypes.cpython-312.pyc
                _namespace.cpython-312.pyc
                __init__.cpython-312.pyc
            __pycache__/
              __init__.cpython-312.pyc
          _arrow/
            dataframe.py
            expr.py
            group_by.py
            namespace.py
            selectors.py
            series.py
            series_cat.py
            series_dt.py
            series_list.py
            series_str.py
            series_struct.py
            typing.py
            utils.py
            __init__.py
            __pycache__/
              dataframe.cpython-312.pyc
              expr.cpython-312.pyc
              group_by.cpython-312.pyc
              namespace.cpython-312.pyc
              selectors.cpython-312.pyc
              series.cpython-312.pyc
              series_cat.cpython-312.pyc
              series_dt.cpython-312.pyc
              series_list.cpython-312.pyc
              series_str.cpython-312.pyc
              series_struct.cpython-312.pyc
              typing.cpython-312.pyc
              utils.cpython-312.pyc
              __init__.cpython-312.pyc
          _compliant/
            any_namespace.py
            dataframe.py
            expr.py
            group_by.py
            namespace.py
            selectors.py
            series.py
            typing.py
            when_then.py
            window.py
            __init__.py
            __pycache__/
              any_namespace.cpython-312.pyc
              dataframe.cpython-312.pyc
              expr.cpython-312.pyc
              group_by.cpython-312.pyc
              namespace.cpython-312.pyc
              selectors.cpython-312.pyc
              series.cpython-312.pyc
              typing.cpython-312.pyc
              when_then.cpython-312.pyc
              window.cpython-312.pyc
              __init__.cpython-312.pyc
          _dask/
            dataframe.py
            expr.py
            expr_dt.py
            expr_str.py
            group_by.py
            namespace.py
            selectors.py
            utils.py
            __init__.py
            __pycache__/
              dataframe.cpython-312.pyc
              expr.cpython-312.pyc
              expr_dt.cpython-312.pyc
              expr_str.cpython-312.pyc
              group_by.cpython-312.pyc
              namespace.cpython-312.pyc
              selectors.cpython-312.pyc
              utils.cpython-312.pyc
              __init__.cpython-312.pyc
          _duckdb/
            dataframe.py
            expr.py
            expr_dt.py
            expr_list.py
            expr_str.py
            expr_struct.py
            group_by.py
            namespace.py
            selectors.py
            series.py
            utils.py
            __init__.py
            __pycache__/
              dataframe.cpython-312.pyc
              expr.cpython-312.pyc
              expr_dt.cpython-312.pyc
              expr_list.cpython-312.pyc
              expr_str.cpython-312.pyc
              expr_struct.cpython-312.pyc
              group_by.cpython-312.pyc
              namespace.cpython-312.pyc
              selectors.cpython-312.pyc
              series.cpython-312.pyc
              utils.cpython-312.pyc
              __init__.cpython-312.pyc
          _ibis/
            dataframe.py
            expr.py
            expr_dt.py
            expr_list.py
            expr_str.py
            expr_struct.py
            group_by.py
            namespace.py
            selectors.py
            series.py
            utils.py
            __init__.py
            __pycache__/
              dataframe.cpython-312.pyc
              expr.cpython-312.pyc
              expr_dt.cpython-312.pyc
              expr_list.cpython-312.pyc
              expr_str.cpython-312.pyc
              expr_struct.cpython-312.pyc
              group_by.cpython-312.pyc
              namespace.cpython-312.pyc
              selectors.cpython-312.pyc
              series.cpython-312.pyc
              utils.cpython-312.pyc
              __init__.cpython-312.pyc
          _interchange/
            dataframe.py
            series.py
            __init__.py
            __pycache__/
              dataframe.cpython-312.pyc
              series.cpython-312.pyc
              __init__.cpython-312.pyc
          _pandas_like/
            dataframe.py
            expr.py
            group_by.py
            namespace.py
            selectors.py
            series.py
            series_cat.py
            series_dt.py
            series_list.py
            series_str.py
            series_struct.py
            typing.py
            utils.py
            __init__.py
            __pycache__/
              dataframe.cpython-312.pyc
              expr.cpython-312.pyc
              group_by.cpython-312.pyc
              namespace.cpython-312.pyc
              selectors.cpython-312.pyc
              series.cpython-312.pyc
              series_cat.cpython-312.pyc
              series_dt.cpython-312.pyc
              series_list.cpython-312.pyc
              series_str.cpython-312.pyc
              series_struct.cpython-312.pyc
              typing.cpython-312.pyc
              utils.cpython-312.pyc
              __init__.cpython-312.pyc
          _polars/
            dataframe.py
            expr.py
            group_by.py
            namespace.py
            series.py
            typing.py
            utils.py
            __init__.py
            __pycache__/
              dataframe.cpython-312.pyc
              expr.cpython-312.pyc
              group_by.cpython-312.pyc
              namespace.cpython-312.pyc
              series.cpython-312.pyc
              typing.cpython-312.pyc
              utils.cpython-312.pyc
              __init__.cpython-312.pyc
          _spark_like/
            dataframe.py
            expr.py
            expr_dt.py
            expr_list.py
            expr_str.py
            expr_struct.py
            group_by.py
            namespace.py
            selectors.py
            utils.py
            __init__.py
            __pycache__/
              dataframe.cpython-312.pyc
              expr.cpython-312.pyc
              expr_dt.cpython-312.pyc
              expr_list.cpython-312.pyc
              expr_str.cpython-312.pyc
              expr_struct.cpython-312.pyc
              group_by.cpython-312.pyc
              namespace.cpython-312.pyc
              selectors.cpython-312.pyc
              utils.cpython-312.pyc
              __init__.cpython-312.pyc
          __pycache__/
            dataframe.cpython-312.pyc
            dependencies.cpython-312.pyc
            dtypes.cpython-312.pyc
            exceptions.cpython-312.pyc
            expr.cpython-312.pyc
            expr_cat.cpython-312.pyc
            expr_dt.cpython-312.pyc
            expr_list.cpython-312.pyc
            expr_name.cpython-312.pyc
            expr_str.cpython-312.pyc
            expr_struct.cpython-312.pyc
            functions.cpython-312.pyc
            group_by.cpython-312.pyc
            schema.cpython-312.pyc
            selectors.cpython-312.pyc
            series.cpython-312.pyc
            series_cat.cpython-312.pyc
            series_dt.cpython-312.pyc
            series_list.cpython-312.pyc
            series_str.cpython-312.pyc
            series_struct.cpython-312.pyc
            this.cpython-312.pyc
            translate.cpython-312.pyc
            typing.cpython-312.pyc
            utils.cpython-312.pyc
            _duration.cpython-312.pyc
            _enum.cpython-312.pyc
            _expression_parsing.cpython-312.pyc
            _namespace.cpython-312.pyc
            _translate.cpython-312.pyc
            _typing_compat.cpython-312.pyc
            __init__.cpython-312.pyc
        narwhals-1.41.0.dist-info/
          INSTALLER
          METADATA
          RECORD
          WHEEL
          licenses/
            LICENSE.md
        networkx/
          conftest.py
          convert.py
          convert_matrix.py
          exception.py
          lazy_imports.py
          relabel.py
          __init__.py
          algorithms/
            asteroidal.py
            boundary.py
            bridges.py
            broadcasting.py
            chains.py
            chordal.py
            clique.py
            cluster.py
            communicability_alg.py
            core.py
            covering.py
            cuts.py
            cycles.py
            dag.py
            distance_measures.py
            distance_regular.py
            dominance.py
            dominating.py
            d_separation.py
            efficiency_measures.py
            euler.py
            graphical.py
            graph_hashing.py
            hierarchy.py
            hybrid.py
            isolate.py
            link_prediction.py
            lowest_common_ancestors.py
            matching.py
            mis.py
            moral.py
            node_classification.py
            non_randomness.py
            planarity.py
            planar_drawing.py
            polynomials.py
            reciprocity.py
            regular.py
            richclub.py
            similarity.py
            simple_paths.py
            smallworld.py
            smetric.py
            sparsifiers.py
            structuralholes.py
            summarization.py
            swap.py
            threshold.py
            time_dependent.py
            tournament.py
            triads.py
            vitality.py
            voronoi.py
            walks.py
            wiener.py
            __init__.py
            approximation/
              clique.py
              clustering_coefficient.py
              connectivity.py
              density.py
              distance_measures.py
              dominating_set.py
              kcomponents.py
              matching.py
              maxcut.py
              ramsey.py
              steinertree.py
              traveling_salesman.py
              treewidth.py
              vertex_cover.py
              __init__.py
              tests/
                test_approx_clust_coeff.py
                test_clique.py
                test_connectivity.py
                test_density.py
                test_distance_measures.py
                test_dominating_set.py
                test_kcomponents.py
                test_matching.py
                test_maxcut.py
                test_ramsey.py
                test_steinertree.py
                test_traveling_salesman.py
                test_treewidth.py
                test_vertex_cover.py
                __init__.py
                __pycache__/
                  test_approx_clust_coeff.cpython-312.pyc
                  test_clique.cpython-312.pyc
                  test_connectivity.cpython-312.pyc
                  test_density.cpython-312.pyc
                  test_distance_measures.cpython-312.pyc
                  test_dominating_set.cpython-312.pyc
                  test_kcomponents.cpython-312.pyc
                  test_matching.cpython-312.pyc
                  test_maxcut.cpython-312.pyc
                  test_ramsey.cpython-312.pyc
                  test_steinertree.cpython-312.pyc
                  test_traveling_salesman.cpython-312.pyc
                  test_treewidth.cpython-312.pyc
                  test_vertex_cover.cpython-312.pyc
                  __init__.cpython-312.pyc
              __pycache__/
                clique.cpython-312.pyc
                clustering_coefficient.cpython-312.pyc
                connectivity.cpython-312.pyc
                density.cpython-312.pyc
                distance_measures.cpython-312.pyc
                dominating_set.cpython-312.pyc
                kcomponents.cpython-312.pyc
                matching.cpython-312.pyc
                maxcut.cpython-312.pyc
                ramsey.cpython-312.pyc
                steinertree.cpython-312.pyc
                traveling_salesman.cpython-312.pyc
                treewidth.cpython-312.pyc
                vertex_cover.cpython-312.pyc
                __init__.cpython-312.pyc
            assortativity/
              connectivity.py
              correlation.py
              mixing.py
              neighbor_degree.py
              pairs.py
              __init__.py
              tests/
                base_test.py
                test_connectivity.py
                test_correlation.py
                test_mixing.py
                test_neighbor_degree.py
                test_pairs.py
                __init__.py
                __pycache__/
                  base_test.cpython-312.pyc
                  test_connectivity.cpython-312.pyc
                  test_correlation.cpython-312.pyc
                  test_mixing.cpython-312.pyc
                  test_neighbor_degree.cpython-312.pyc
                  test_pairs.cpython-312.pyc
                  __init__.cpython-312.pyc
              __pycache__/
                connectivity.cpython-312.pyc
                correlation.cpython-312.pyc
                mixing.cpython-312.pyc
                neighbor_degree.cpython-312.pyc
                pairs.cpython-312.pyc
                __init__.cpython-312.pyc
            bipartite/
              basic.py
              centrality.py
              cluster.py
              covering.py
              edgelist.py
              extendability.py
              generators.py
              link_analysis.py
              matching.py
              matrix.py
              projection.py
              redundancy.py
              spectral.py
              __init__.py
              tests/
                test_basic.py
                test_centrality.py
                test_cluster.py
                test_covering.py
                test_edgelist.py
                test_extendability.py
                test_generators.py
                test_link_analysis.py
                test_matching.py
                test_matrix.py
                test_project.py
                test_redundancy.py
                test_spectral_bipartivity.py
                __init__.py
                __pycache__/
                  test_basic.cpython-312.pyc
                  test_centrality.cpython-312.pyc
                  test_cluster.cpython-312.pyc
                  test_covering.cpython-312.pyc
                  test_edgelist.cpython-312.pyc
                  test_extendability.cpython-312.pyc
                  test_generators.cpython-312.pyc
                  test_link_analysis.cpython-312.pyc
                  test_matching.cpython-312.pyc
                  test_matrix.cpython-312.pyc
                  test_project.cpython-312.pyc
                  test_redundancy.cpython-312.pyc
                  test_spectral_bipartivity.cpython-312.pyc
                  __init__.cpython-312.pyc
              __pycache__/
                basic.cpython-312.pyc
                centrality.cpython-312.pyc
                cluster.cpython-312.pyc
                covering.cpython-312.pyc
                edgelist.cpython-312.pyc
                extendability.cpython-312.pyc
                generators.cpython-312.pyc
                link_analysis.cpython-312.pyc
                matching.cpython-312.pyc
                matrix.cpython-312.pyc
                projection.cpython-312.pyc
                redundancy.cpython-312.pyc
                spectral.cpython-312.pyc
                __init__.cpython-312.pyc
            centrality/
              betweenness.py
              betweenness_subset.py
              closeness.py
              current_flow_betweenness.py
              current_flow_betweenness_subset.py
              current_flow_closeness.py
              degree_alg.py
              dispersion.py
              eigenvector.py
              flow_matrix.py
              group.py
              harmonic.py
              katz.py
              laplacian.py
              load.py
              percolation.py
              reaching.py
              second_order.py
              subgraph_alg.py
              trophic.py
              voterank_alg.py
              __init__.py
              tests/
                test_betweenness_centrality.py
                test_betweenness_centrality_subset.py
                test_closeness_centrality.py
                test_current_flow_betweenness_centrality.py
                test_current_flow_betweenness_centrality_subset.py
                test_current_flow_closeness.py
                test_degree_centrality.py
                test_dispersion.py
                test_eigenvector_centrality.py
                test_group.py
                test_harmonic_centrality.py
                test_katz_centrality.py
                test_laplacian_centrality.py
                test_load_centrality.py
                test_percolation_centrality.py
                test_reaching.py
                test_second_order_centrality.py
                test_subgraph.py
                test_trophic.py
                test_voterank.py
                __init__.py
                __pycache__/
                  test_betweenness_centrality.cpython-312.pyc
                  test_betweenness_centrality_subset.cpython-312.pyc
                  test_closeness_centrality.cpython-312.pyc
                  test_current_flow_betweenness_centrality.cpython-312.pyc
                  test_current_flow_betweenness_centrality_subset.cpython-312.pyc
                  test_current_flow_closeness.cpython-312.pyc
                  test_degree_centrality.cpython-312.pyc
                  test_dispersion.cpython-312.pyc
                  test_eigenvector_centrality.cpython-312.pyc
                  test_group.cpython-312.pyc
                  test_harmonic_centrality.cpython-312.pyc
                  test_katz_centrality.cpython-312.pyc
                  test_laplacian_centrality.cpython-312.pyc
                  test_load_centrality.cpython-312.pyc
                  test_percolation_centrality.cpython-312.pyc
                  test_reaching.cpython-312.pyc
                  test_second_order_centrality.cpython-312.pyc
                  test_subgraph.cpython-312.pyc
                  test_trophic.cpython-312.pyc
                  test_voterank.cpython-312.pyc
                  __init__.cpython-312.pyc
              __pycache__/
                betweenness.cpython-312.pyc
                betweenness_subset.cpython-312.pyc
                closeness.cpython-312.pyc
                current_flow_betweenness.cpython-312.pyc
                current_flow_betweenness_subset.cpython-312.pyc
                current_flow_closeness.cpython-312.pyc
                degree_alg.cpython-312.pyc
                dispersion.cpython-312.pyc
                eigenvector.cpython-312.pyc
                flow_matrix.cpython-312.pyc
                group.cpython-312.pyc
                harmonic.cpython-312.pyc
                katz.cpython-312.pyc
                laplacian.cpython-312.pyc
                load.cpython-312.pyc
                percolation.cpython-312.pyc
                reaching.cpython-312.pyc
                second_order.cpython-312.pyc
                subgraph_alg.cpython-312.pyc
                trophic.cpython-312.pyc
                voterank_alg.cpython-312.pyc
                __init__.cpython-312.pyc
            coloring/
              equitable_coloring.py
              greedy_coloring.py
              __init__.py
              tests/
                test_coloring.py
                __init__.py
                __pycache__/
                  test_coloring.cpython-312.pyc
                  __init__.cpython-312.pyc
              __pycache__/
                equitable_coloring.cpython-312.pyc
                greedy_coloring.cpython-312.pyc
                __init__.cpython-312.pyc
            community/
              asyn_fluid.py
              centrality.py
              community_utils.py
              divisive.py
              kclique.py
              kernighan_lin.py
              label_propagation.py
              leiden.py
              local.py
              louvain.py
              lukes.py
              modularity_max.py
              quality.py
              __init__.py
              tests/
                test_asyn_fluid.py
                test_centrality.py
                test_divisive.py
                test_kclique.py
                test_kernighan_lin.py
                test_label_propagation.py
                test_leiden.py
                test_local.py
                test_louvain.py
                test_lukes.py
                test_modularity_max.py
                test_quality.py
                test_utils.py
                __init__.py
                __pycache__/
                  test_asyn_fluid.cpython-312.pyc
                  test_centrality.cpython-312.pyc
                  test_divisive.cpython-312.pyc
                  test_kclique.cpython-312.pyc
                  test_kernighan_lin.cpython-312.pyc
                  test_label_propagation.cpython-312.pyc
                  test_leiden.cpython-312.pyc
                  test_local.cpython-312.pyc
                  test_louvain.cpython-312.pyc
                  test_lukes.cpython-312.pyc
                  test_modularity_max.cpython-312.pyc
                  test_quality.cpython-312.pyc
                  test_utils.cpython-312.pyc
                  __init__.cpython-312.pyc
              __pycache__/
                asyn_fluid.cpython-312.pyc
                centrality.cpython-312.pyc
                community_utils.cpython-312.pyc
                divisive.cpython-312.pyc
                kclique.cpython-312.pyc
                kernighan_lin.cpython-312.pyc
                label_propagation.cpython-312.pyc
                leiden.cpython-312.pyc
                local.cpython-312.pyc
                louvain.cpython-312.pyc
                lukes.cpython-312.pyc
                modularity_max.cpython-312.pyc
                quality.cpython-312.pyc
                __init__.cpython-312.pyc
            components/
              attracting.py
              biconnected.py
              connected.py
              semiconnected.py
              strongly_connected.py
              weakly_connected.py
              __init__.py
              tests/
                test_attracting.py
                test_biconnected.py
                test_connected.py
                test_semiconnected.py
                test_strongly_connected.py
                test_weakly_connected.py
                __init__.py
                __pycache__/
                  test_attracting.cpython-312.pyc
                  test_biconnected.cpython-312.pyc
                  test_connected.cpython-312.pyc
                  test_semiconnected.cpython-312.pyc
                  test_strongly_connected.cpython-312.pyc
                  test_weakly_connected.cpython-312.pyc
                  __init__.cpython-312.pyc
              __pycache__/
                attracting.cpython-312.pyc
                biconnected.cpython-312.pyc
                connected.cpython-312.pyc
                semiconnected.cpython-312.pyc
                strongly_connected.cpython-312.pyc
                weakly_connected.cpython-312.pyc
                __init__.cpython-312.pyc
            connectivity/
              connectivity.py
              cuts.py
              disjoint_paths.py
              edge_augmentation.py
              edge_kcomponents.py
              kcomponents.py
              kcutsets.py
              stoerwagner.py
              utils.py
              __init__.py
              tests/
                test_connectivity.py
                test_cuts.py
                test_disjoint_paths.py
                test_edge_augmentation.py
                test_edge_kcomponents.py
                test_kcomponents.py
                test_kcutsets.py
                test_stoer_wagner.py
                __init__.py
                __pycache__/
                  test_connectivity.cpython-312.pyc
                  test_cuts.cpython-312.pyc
                  test_disjoint_paths.cpython-312.pyc
                  test_edge_augmentation.cpython-312.pyc
                  test_edge_kcomponents.cpython-312.pyc
                  test_kcomponents.cpython-312.pyc
                  test_kcutsets.cpython-312.pyc
                  test_stoer_wagner.cpython-312.pyc
                  __init__.cpython-312.pyc
              __pycache__/
                connectivity.cpython-312.pyc
                cuts.cpython-312.pyc
                disjoint_paths.cpython-312.pyc
                edge_augmentation.cpython-312.pyc
                edge_kcomponents.cpython-312.pyc
                kcomponents.cpython-312.pyc
                kcutsets.cpython-312.pyc
                stoerwagner.cpython-312.pyc
                utils.cpython-312.pyc
                __init__.cpython-312.pyc
            flow/
              boykovkolmogorov.py
              capacityscaling.py
              dinitz_alg.py
              edmondskarp.py
              gomory_hu.py
              maxflow.py
              mincost.py
              networksimplex.py
              preflowpush.py
              shortestaugmentingpath.py
              utils.py
              __init__.py
              tests/
                gl1.gpickle.bz2
                gw1.gpickle.bz2
                netgen-2.gpickle.bz2
                test_gomory_hu.py
                test_maxflow.py
                test_maxflow_large_graph.py
                test_mincost.py
                test_networksimplex.py
                wlm3.gpickle.bz2
                __init__.py
                __pycache__/
                  test_gomory_hu.cpython-312.pyc
                  test_maxflow.cpython-312.pyc
                  test_maxflow_large_graph.cpython-312.pyc
                  test_mincost.cpython-312.pyc
                  test_networksimplex.cpython-312.pyc
                  __init__.cpython-312.pyc
              __pycache__/
                boykovkolmogorov.cpython-312.pyc
                capacityscaling.cpython-312.pyc
                dinitz_alg.cpython-312.pyc
                edmondskarp.cpython-312.pyc
                gomory_hu.cpython-312.pyc
                maxflow.cpython-312.pyc
                mincost.cpython-312.pyc
                networksimplex.cpython-312.pyc
                preflowpush.cpython-312.pyc
                shortestaugmentingpath.cpython-312.pyc
                utils.cpython-312.pyc
                __init__.cpython-312.pyc
            isomorphism/
              ismags.py
              isomorph.py
              isomorphvf2.py
              matchhelpers.py
              temporalisomorphvf2.py
              tree_isomorphism.py
              vf2pp.py
              vf2userfunc.py
              __init__.py
              tests/
                iso_r01_s80.A99
                iso_r01_s80.B99
                si2_b06_m200.A99
                si2_b06_m200.B99
                test_ismags.py
                test_isomorphism.py
                test_isomorphvf2.py
                test_match_helpers.py
                test_temporalisomorphvf2.py
                test_tree_isomorphism.py
                test_vf2pp.py
                test_vf2pp_helpers.py
                test_vf2userfunc.py
                __init__.py
                __pycache__/
                  test_ismags.cpython-312.pyc
                  test_isomorphism.cpython-312.pyc
                  test_isomorphvf2.cpython-312.pyc
                  test_match_helpers.cpython-312.pyc
                  test_temporalisomorphvf2.cpython-312.pyc
                  test_tree_isomorphism.cpython-312.pyc
                  test_vf2pp.cpython-312.pyc
                  test_vf2pp_helpers.cpython-312.pyc
                  test_vf2userfunc.cpython-312.pyc
                  __init__.cpython-312.pyc
              __pycache__/
                ismags.cpython-312.pyc
                isomorph.cpython-312.pyc
                isomorphvf2.cpython-312.pyc
                matchhelpers.cpython-312.pyc
                temporalisomorphvf2.cpython-312.pyc
                tree_isomorphism.cpython-312.pyc
                vf2pp.cpython-312.pyc
                vf2userfunc.cpython-312.pyc
                __init__.cpython-312.pyc
            link_analysis/
              hits_alg.py
              pagerank_alg.py
              __init__.py
              tests/
                test_hits.py
                test_pagerank.py
                __init__.py
                __pycache__/
                  test_hits.cpython-312.pyc
                  test_pagerank.cpython-312.pyc
                  __init__.cpython-312.pyc
              __pycache__/
                hits_alg.cpython-312.pyc
                pagerank_alg.cpython-312.pyc
                __init__.cpython-312.pyc
            minors/
              contraction.py
              __init__.py
              tests/
                test_contraction.py
                __pycache__/
                  test_contraction.cpython-312.pyc
              __pycache__/
                contraction.cpython-312.pyc
                __init__.cpython-312.pyc
            operators/
              all.py
              binary.py
              product.py
              unary.py
              __init__.py
              tests/
                test_all.py
                test_binary.py
                test_product.py
                test_unary.py
                __init__.py
                __pycache__/
                  test_all.cpython-312.pyc
                  test_binary.cpython-312.pyc
                  test_product.cpython-312.pyc
                  test_unary.cpython-312.pyc
                  __init__.cpython-312.pyc
              __pycache__/
                all.cpython-312.pyc
                binary.cpython-312.pyc
                product.cpython-312.pyc
                unary.cpython-312.pyc
                __init__.cpython-312.pyc
            shortest_paths/
              astar.py
              dense.py
              generic.py
              unweighted.py
              weighted.py
              __init__.py
              tests/
                test_astar.py
                test_dense.py
                test_dense_numpy.py
                test_generic.py
                test_unweighted.py
                test_weighted.py
                __init__.py
                __pycache__/
                  test_astar.cpython-312.pyc
                  test_dense.cpython-312.pyc
                  test_dense_numpy.cpython-312.pyc
                  test_generic.cpython-312.pyc
                  test_unweighted.cpython-312.pyc
                  test_weighted.cpython-312.pyc
                  __init__.cpython-312.pyc
              __pycache__/
                astar.cpython-312.pyc
                dense.cpython-312.pyc
                generic.cpython-312.pyc
                unweighted.cpython-312.pyc
                weighted.cpython-312.pyc
                __init__.cpython-312.pyc
            tests/
              test_asteroidal.py
              test_boundary.py
              test_bridges.py
              test_broadcasting.py
              test_chains.py
              test_chordal.py
              test_clique.py
              test_cluster.py
              test_communicability.py
              test_core.py
              test_covering.py
              test_cuts.py
              test_cycles.py
              test_dag.py
              test_distance_measures.py
              test_distance_regular.py
              test_dominance.py
              test_dominating.py
              test_d_separation.py
              test_efficiency.py
              test_euler.py
              test_graphical.py
              test_graph_hashing.py
              test_hierarchy.py
              test_hybrid.py
              test_isolate.py
              test_link_prediction.py
              test_lowest_common_ancestors.py
              test_matching.py
              test_max_weight_clique.py
              test_mis.py
              test_moral.py
              test_node_classification.py
              test_non_randomness.py
              test_planarity.py
              test_planar_drawing.py
              test_polynomials.py
              test_reciprocity.py
              test_regular.py
              test_richclub.py
              test_similarity.py
              test_simple_paths.py
              test_smallworld.py
              test_smetric.py
              test_sparsifiers.py
              test_structuralholes.py
              test_summarization.py
              test_swap.py
              test_threshold.py
              test_time_dependent.py
              test_tournament.py
              test_triads.py
              test_vitality.py
              test_voronoi.py
              test_walks.py
              test_wiener.py
              __init__.py
              __pycache__/
                test_asteroidal.cpython-312.pyc
                test_boundary.cpython-312.pyc
                test_bridges.cpython-312.pyc
                test_broadcasting.cpython-312.pyc
                test_chains.cpython-312.pyc
                test_chordal.cpython-312.pyc
                test_clique.cpython-312.pyc
                test_cluster.cpython-312.pyc
                test_communicability.cpython-312.pyc
                test_core.cpython-312.pyc
                test_covering.cpython-312.pyc
                test_cuts.cpython-312.pyc
                test_cycles.cpython-312.pyc
                test_dag.cpython-312.pyc
                test_distance_measures.cpython-312.pyc
                test_distance_regular.cpython-312.pyc
                test_dominance.cpython-312.pyc
                test_dominating.cpython-312.pyc
                test_d_separation.cpython-312.pyc
                test_efficiency.cpython-312.pyc
                test_euler.cpython-312.pyc
                test_graphical.cpython-312.pyc
                test_graph_hashing.cpython-312.pyc
                test_hierarchy.cpython-312.pyc
                test_hybrid.cpython-312.pyc
                test_isolate.cpython-312.pyc
                test_link_prediction.cpython-312.pyc
                test_lowest_common_ancestors.cpython-312.pyc
                test_matching.cpython-312.pyc
                test_max_weight_clique.cpython-312.pyc
                test_mis.cpython-312.pyc
                test_moral.cpython-312.pyc
                test_node_classification.cpython-312.pyc
                test_non_randomness.cpython-312.pyc
                test_planarity.cpython-312.pyc
                test_planar_drawing.cpython-312.pyc
                test_polynomials.cpython-312.pyc
                test_reciprocity.cpython-312.pyc
                test_regular.cpython-312.pyc
                test_richclub.cpython-312.pyc
                test_similarity.cpython-312.pyc
                test_simple_paths.cpython-312.pyc
                test_smallworld.cpython-312.pyc
                test_smetric.cpython-312.pyc
                test_sparsifiers.cpython-312.pyc
                test_structuralholes.cpython-312.pyc
                test_summarization.cpython-312.pyc
                test_swap.cpython-312.pyc
                test_threshold.cpython-312.pyc
                test_time_dependent.cpython-312.pyc
                test_tournament.cpython-312.pyc
                test_triads.cpython-312.pyc
                test_vitality.cpython-312.pyc
                test_voronoi.cpython-312.pyc
                test_walks.cpython-312.pyc
                test_wiener.cpython-312.pyc
                __init__.cpython-312.pyc
            traversal/
              beamsearch.py
              breadth_first_search.py
              depth_first_search.py
              edgebfs.py
              edgedfs.py
              __init__.py
              tests/
                test_beamsearch.py
                test_bfs.py
                test_dfs.py
                test_edgebfs.py
                test_edgedfs.py
                __init__.py
                __pycache__/
                  test_beamsearch.cpython-312.pyc
                  test_bfs.cpython-312.pyc
                  test_dfs.cpython-312.pyc
                  test_edgebfs.cpython-312.pyc
                  test_edgedfs.cpython-312.pyc
                  __init__.cpython-312.pyc
              __pycache__/
                beamsearch.cpython-312.pyc
                breadth_first_search.cpython-312.pyc
                depth_first_search.cpython-312.pyc
                edgebfs.cpython-312.pyc
                edgedfs.cpython-312.pyc
                __init__.cpython-312.pyc
            tree/
              branchings.py
              coding.py
              decomposition.py
              mst.py
              operations.py
              recognition.py
              __init__.py
              tests/
                test_branchings.py
                test_coding.py
                test_decomposition.py
                test_mst.py
                test_operations.py
                test_recognition.py
                __init__.py
                __pycache__/
                  test_branchings.cpython-312.pyc
                  test_coding.cpython-312.pyc
                  test_decomposition.cpython-312.pyc
                  test_mst.cpython-312.pyc
                  test_operations.cpython-312.pyc
                  test_recognition.cpython-312.pyc
                  __init__.cpython-312.pyc
              __pycache__/
                branchings.cpython-312.pyc
                coding.cpython-312.pyc
                decomposition.cpython-312.pyc
                mst.cpython-312.pyc
                operations.cpython-312.pyc
                recognition.cpython-312.pyc
                __init__.cpython-312.pyc
            __pycache__/
              asteroidal.cpython-312.pyc
              boundary.cpython-312.pyc
              bridges.cpython-312.pyc
              broadcasting.cpython-312.pyc
              chains.cpython-312.pyc
              chordal.cpython-312.pyc
              clique.cpython-312.pyc
              cluster.cpython-312.pyc
              communicability_alg.cpython-312.pyc
              core.cpython-312.pyc
              covering.cpython-312.pyc
              cuts.cpython-312.pyc
              cycles.cpython-312.pyc
              dag.cpython-312.pyc
              distance_measures.cpython-312.pyc
              distance_regular.cpython-312.pyc
              dominance.cpython-312.pyc
              dominating.cpython-312.pyc
              d_separation.cpython-312.pyc
              efficiency_measures.cpython-312.pyc
              euler.cpython-312.pyc
              graphical.cpython-312.pyc
              graph_hashing.cpython-312.pyc
              hierarchy.cpython-312.pyc
              hybrid.cpython-312.pyc
              isolate.cpython-312.pyc
              link_prediction.cpython-312.pyc
              lowest_common_ancestors.cpython-312.pyc
              matching.cpython-312.pyc
              mis.cpython-312.pyc
              moral.cpython-312.pyc
              node_classification.cpython-312.pyc
              non_randomness.cpython-312.pyc
              planarity.cpython-312.pyc
              planar_drawing.cpython-312.pyc
              polynomials.cpython-312.pyc
              reciprocity.cpython-312.pyc
              regular.cpython-312.pyc
              richclub.cpython-312.pyc
              similarity.cpython-312.pyc
              simple_paths.cpython-312.pyc
              smallworld.cpython-312.pyc
              smetric.cpython-312.pyc
              sparsifiers.cpython-312.pyc
              structuralholes.cpython-312.pyc
              summarization.cpython-312.pyc
              swap.cpython-312.pyc
              threshold.cpython-312.pyc
              time_dependent.cpython-312.pyc
              tournament.cpython-312.pyc
              triads.cpython-312.pyc
              vitality.cpython-312.pyc
              voronoi.cpython-312.pyc
              walks.cpython-312.pyc
              wiener.cpython-312.pyc
              __init__.cpython-312.pyc
          classes/
            coreviews.py
            digraph.py
            filters.py
            function.py
            graph.py
            graphviews.py
            multidigraph.py
            multigraph.py
            reportviews.py
            __init__.py
            tests/
              dispatch_interface.py
              historical_tests.py
              test_coreviews.py
              test_digraph.py
              test_digraph_historical.py
              test_filters.py
              test_function.py
              test_graph.py
              test_graphviews.py
              test_graph_historical.py
              test_multidigraph.py
              test_multigraph.py
              test_reportviews.py
              test_special.py
              test_subgraphviews.py
              __init__.py
              __pycache__/
                dispatch_interface.cpython-312.pyc
                historical_tests.cpython-312.pyc
                test_coreviews.cpython-312.pyc
                test_digraph.cpython-312.pyc
                test_digraph_historical.cpython-312.pyc
                test_filters.cpython-312.pyc
                test_function.cpython-312.pyc
                test_graph.cpython-312.pyc
                test_graphviews.cpython-312.pyc
                test_graph_historical.cpython-312.pyc
                test_multidigraph.cpython-312.pyc
                test_multigraph.cpython-312.pyc
                test_reportviews.cpython-312.pyc
                test_special.cpython-312.pyc
                test_subgraphviews.cpython-312.pyc
                __init__.cpython-312.pyc
            __pycache__/
              coreviews.cpython-312.pyc
              digraph.cpython-312.pyc
              filters.cpython-312.pyc
              function.cpython-312.pyc
              graph.cpython-312.pyc
              graphviews.cpython-312.pyc
              multidigraph.cpython-312.pyc
              multigraph.cpython-312.pyc
              reportviews.cpython-312.pyc
              __init__.cpython-312.pyc
          drawing/
            layout.py
            nx_agraph.py
            nx_latex.py
            nx_pydot.py
            nx_pylab.py
            __init__.py
            tests/
              test_agraph.py
              test_latex.py
              test_layout.py
              test_pydot.py
              test_pylab.py
              __init__.py
              baseline/
                test_display_complex.png
                test_display_empty_graph.png
                test_display_house_with_colors.png
                test_display_labels_and_colors.png
                test_display_shortest_path.png
                test_house_with_colors.png
              __pycache__/
                test_agraph.cpython-312.pyc
                test_latex.cpython-312.pyc
                test_layout.cpython-312.pyc
                test_pydot.cpython-312.pyc
                test_pylab.cpython-312.pyc
                __init__.cpython-312.pyc
            __pycache__/
              layout.cpython-312.pyc
              nx_agraph.cpython-312.pyc
              nx_latex.cpython-312.pyc
              nx_pydot.cpython-312.pyc
              nx_pylab.cpython-312.pyc
              __init__.cpython-312.pyc
          generators/
            atlas.dat.gz
            atlas.py
            classic.py
            cographs.py
            community.py
            degree_seq.py
            directed.py
            duplication.py
            ego.py
            expanders.py
            geometric.py
            harary_graph.py
            internet_as_graphs.py
            intersection.py
            interval_graph.py
            joint_degree_seq.py
            lattice.py
            line.py
            mycielski.py
            nonisomorphic_trees.py
            random_clustered.py
            random_graphs.py
            small.py
            social.py
            spectral_graph_forge.py
            stochastic.py
            sudoku.py
            time_series.py
            trees.py
            triads.py
            __init__.py
            tests/
              test_atlas.py
              test_classic.py
              test_cographs.py
              test_community.py
              test_degree_seq.py
              test_directed.py
              test_duplication.py
              test_ego.py
              test_expanders.py
              test_geometric.py
              test_harary_graph.py
              test_internet_as_graphs.py
              test_intersection.py
              test_interval_graph.py
              test_joint_degree_seq.py
              test_lattice.py
              test_line.py
              test_mycielski.py
              test_nonisomorphic_trees.py
              test_random_clustered.py
              test_random_graphs.py
              test_small.py
              test_spectral_graph_forge.py
              test_stochastic.py
              test_sudoku.py
              test_time_series.py
              test_trees.py
              test_triads.py
              __init__.py
              __pycache__/
                test_atlas.cpython-312.pyc
                test_classic.cpython-312.pyc
                test_cographs.cpython-312.pyc
                test_community.cpython-312.pyc
                test_degree_seq.cpython-312.pyc
                test_directed.cpython-312.pyc
                test_duplication.cpython-312.pyc
                test_ego.cpython-312.pyc
                test_expanders.cpython-312.pyc
                test_geometric.cpython-312.pyc
                test_harary_graph.cpython-312.pyc
                test_internet_as_graphs.cpython-312.pyc
                test_intersection.cpython-312.pyc
                test_interval_graph.cpython-312.pyc
                test_joint_degree_seq.cpython-312.pyc
                test_lattice.cpython-312.pyc
                test_line.cpython-312.pyc
                test_mycielski.cpython-312.pyc
                test_nonisomorphic_trees.cpython-312.pyc
                test_random_clustered.cpython-312.pyc
                test_random_graphs.cpython-312.pyc
                test_small.cpython-312.pyc
                test_spectral_graph_forge.cpython-312.pyc
                test_stochastic.cpython-312.pyc
                test_sudoku.cpython-312.pyc
                test_time_series.cpython-312.pyc
                test_trees.cpython-312.pyc
                test_triads.cpython-312.pyc
                __init__.cpython-312.pyc
            __pycache__/
              atlas.cpython-312.pyc
              classic.cpython-312.pyc
              cographs.cpython-312.pyc
              community.cpython-312.pyc
              degree_seq.cpython-312.pyc
              directed.cpython-312.pyc
              duplication.cpython-312.pyc
              ego.cpython-312.pyc
              expanders.cpython-312.pyc
              geometric.cpython-312.pyc
              harary_graph.cpython-312.pyc
              internet_as_graphs.cpython-312.pyc
              intersection.cpython-312.pyc
              interval_graph.cpython-312.pyc
              joint_degree_seq.cpython-312.pyc
              lattice.cpython-312.pyc
              line.cpython-312.pyc
              mycielski.cpython-312.pyc
              nonisomorphic_trees.cpython-312.pyc
              random_clustered.cpython-312.pyc
              random_graphs.cpython-312.pyc
              small.cpython-312.pyc
              social.cpython-312.pyc
              spectral_graph_forge.cpython-312.pyc
              stochastic.cpython-312.pyc
              sudoku.cpython-312.pyc
              time_series.cpython-312.pyc
              trees.cpython-312.pyc
              triads.cpython-312.pyc
              __init__.cpython-312.pyc
          linalg/
            algebraicconnectivity.py
            attrmatrix.py
            bethehessianmatrix.py
            graphmatrix.py
            laplacianmatrix.py
            modularitymatrix.py
            spectrum.py
            __init__.py
            tests/
              test_algebraic_connectivity.py
              test_attrmatrix.py
              test_bethehessian.py
              test_graphmatrix.py
              test_laplacian.py
              test_modularity.py
              test_spectrum.py
              __init__.py
              __pycache__/
                test_algebraic_connectivity.cpython-312.pyc
                test_attrmatrix.cpython-312.pyc
                test_bethehessian.cpython-312.pyc
                test_graphmatrix.cpython-312.pyc
                test_laplacian.cpython-312.pyc
                test_modularity.cpython-312.pyc
                test_spectrum.cpython-312.pyc
                __init__.cpython-312.pyc
            __pycache__/
              algebraicconnectivity.cpython-312.pyc
              attrmatrix.cpython-312.pyc
              bethehessianmatrix.cpython-312.pyc
              graphmatrix.cpython-312.pyc
              laplacianmatrix.cpython-312.pyc
              modularitymatrix.cpython-312.pyc
              spectrum.cpython-312.pyc
              __init__.cpython-312.pyc
          readwrite/
            adjlist.py
            edgelist.py
            gexf.py
            gml.py
            graph6.py
            graphml.py
            leda.py
            multiline_adjlist.py
            p2g.py
            pajek.py
            sparse6.py
            text.py
            __init__.py
            json_graph/
              adjacency.py
              cytoscape.py
              node_link.py
              tree.py
              __init__.py
              tests/
                test_adjacency.py
                test_cytoscape.py
                test_node_link.py
                test_tree.py
                __init__.py
                __pycache__/
                  test_adjacency.cpython-312.pyc
                  test_cytoscape.cpython-312.pyc
                  test_node_link.cpython-312.pyc
                  test_tree.cpython-312.pyc
                  __init__.cpython-312.pyc
              __pycache__/
                adjacency.cpython-312.pyc
                cytoscape.cpython-312.pyc
                node_link.cpython-312.pyc
                tree.cpython-312.pyc
                __init__.cpython-312.pyc
            tests/
              test_adjlist.py
              test_edgelist.py
              test_gexf.py
              test_gml.py
              test_graph6.py
              test_graphml.py
              test_leda.py
              test_p2g.py
              test_pajek.py
              test_sparse6.py
              test_text.py
              __init__.py
              __pycache__/
                test_adjlist.cpython-312.pyc
                test_edgelist.cpython-312.pyc
                test_gexf.cpython-312.pyc
                test_gml.cpython-312.pyc
                test_graph6.cpython-312.pyc
                test_graphml.cpython-312.pyc
                test_leda.cpython-312.pyc
                test_p2g.cpython-312.pyc
                test_pajek.cpython-312.pyc
                test_sparse6.cpython-312.pyc
                test_text.cpython-312.pyc
                __init__.cpython-312.pyc
            __pycache__/
              adjlist.cpython-312.pyc
              edgelist.cpython-312.pyc
              gexf.cpython-312.pyc
              gml.cpython-312.pyc
              graph6.cpython-312.pyc
              graphml.cpython-312.pyc
              leda.cpython-312.pyc
              multiline_adjlist.cpython-312.pyc
              p2g.cpython-312.pyc
              pajek.cpython-312.pyc
              sparse6.cpython-312.pyc
              text.cpython-312.pyc
              __init__.cpython-312.pyc
          tests/
            test_all_random_functions.py
            test_convert.py
            test_convert_numpy.py
            test_convert_pandas.py
            test_convert_scipy.py
            test_exceptions.py
            test_import.py
            test_lazy_imports.py
            test_relabel.py
            __init__.py
            __pycache__/
              test_all_random_functions.cpython-312.pyc
              test_convert.cpython-312.pyc
              test_convert_numpy.cpython-312.pyc
              test_convert_pandas.cpython-312.pyc
              test_convert_scipy.cpython-312.pyc
              test_exceptions.cpython-312.pyc
              test_import.cpython-312.pyc
              test_lazy_imports.cpython-312.pyc
              test_relabel.cpython-312.pyc
              __init__.cpython-312.pyc
          utils/
            backends.py
            configs.py
            decorators.py
            heaps.py
            mapped_queue.py
            misc.py
            random_sequence.py
            rcm.py
            union_find.py
            __init__.py
            tests/
              test_backends.py
              test_config.py
              test_decorators.py
              test_heaps.py
              test_mapped_queue.py
              test_misc.py
              test_random_sequence.py
              test_rcm.py
              test_unionfind.py
              test__init.py
              __init__.py
              __pycache__/
                test_backends.cpython-312.pyc
                test_config.cpython-312.pyc
                test_decorators.cpython-312.pyc
                test_heaps.cpython-312.pyc
                test_mapped_queue.cpython-312.pyc
                test_misc.cpython-312.pyc
                test_random_sequence.cpython-312.pyc
                test_rcm.cpython-312.pyc
                test_unionfind.cpython-312.pyc
                test__init.cpython-312.pyc
                __init__.cpython-312.pyc
            __pycache__/
              backends.cpython-312.pyc
              configs.cpython-312.pyc
              decorators.cpython-312.pyc
              heaps.cpython-312.pyc
              mapped_queue.cpython-312.pyc
              misc.cpython-312.pyc
              random_sequence.cpython-312.pyc
              rcm.cpython-312.pyc
              union_find.cpython-312.pyc
              __init__.cpython-312.pyc
          __pycache__/
            conftest.cpython-312.pyc
            convert.cpython-312.pyc
            convert_matrix.cpython-312.pyc
            exception.cpython-312.pyc
            lazy_imports.cpython-312.pyc
            relabel.cpython-312.pyc
            __init__.cpython-312.pyc
        networkx-3.5.dist-info/
          entry_points.txt
          INSTALLER
          METADATA
          RECORD
          top_level.txt
          WHEEL
          licenses/
            LICENSE.txt
        numpy/
          conftest.py
          ctypeslib.py
          ctypeslib.pyi
          dtypes.py
          dtypes.pyi
          exceptions.py
          exceptions.pyi
          matlib.py
          matlib.pyi
          py.typed
          version.py
          version.pyi
          _array_api_info.py
          _array_api_info.pyi
          _configtool.py
          _configtool.pyi
          _distributor_init.py
          _distributor_init.pyi
          _expired_attrs_2_0.py
          _expired_attrs_2_0.pyi
          _globals.py
          _globals.pyi
          _pytesttester.py
          _pytesttester.pyi
          __config__.py
          __config__.pyi
          __init__.cython-30.pxd
          __init__.pxd
          __init__.py
          __init__.pyi
          char/
            __init__.py
            __init__.pyi
            __pycache__/
              __init__.cpython-312.pyc
          compat/
            py3k.py
            __init__.py
            tests/
              __init__.py
              __pycache__/
                __init__.cpython-312.pyc
            __pycache__/
              py3k.cpython-312.pyc
              __init__.cpython-312.pyc
          core/
            arrayprint.py
            defchararray.py
            einsumfunc.py
            fromnumeric.py
            function_base.py
            getlimits.py
            multiarray.py
            numeric.py
            numerictypes.py
            overrides.py
            overrides.pyi
            records.py
            shape_base.py
            umath.py
            _dtype.py
            _dtype.pyi
            _dtype_ctypes.py
            _dtype_ctypes.pyi
            _internal.py
            _multiarray_umath.py
            _utils.py
            __init__.py
            __init__.pyi
            __pycache__/
              arrayprint.cpython-312.pyc
              defchararray.cpython-312.pyc
              einsumfunc.cpython-312.pyc
              fromnumeric.cpython-312.pyc
              function_base.cpython-312.pyc
              getlimits.cpython-312.pyc
              multiarray.cpython-312.pyc
              numeric.cpython-312.pyc
              numerictypes.cpython-312.pyc
              overrides.cpython-312.pyc
              records.cpython-312.pyc
              shape_base.cpython-312.pyc
              umath.cpython-312.pyc
              _dtype.cpython-312.pyc
              _dtype_ctypes.cpython-312.pyc
              _internal.cpython-312.pyc
              _multiarray_umath.cpython-312.pyc
              _utils.cpython-312.pyc
              __init__.cpython-312.pyc
          doc/
            ufuncs.py
            __pycache__/
              ufuncs.cpython-312.pyc
          f2py/
            auxfuncs.py
            capi_maps.py
            cb_rules.py
            cfuncs.py
            common_rules.py
            crackfortran.py
            diagnose.py
            f2py2e.py
            f90mod_rules.py
            func2subr.py
            rules.py
            setup.cfg
            symbolic.py
            use_rules.py
            _isocbind.py
            _src_pyf.py
            __init__.py
            __init__.pyi
            __main__.py
            __version__.py
            src/
              fortranobject.c
              fortranobject.h
            tests/
              test_abstract_interface.py
              test_array_from_pyobj.py
              test_assumed_shape.py
              test_block_docstring.py
              test_callback.py
              test_character.py
              test_common.py
              test_crackfortran.py
              test_data.py
              test_docs.py
              test_f2cmap.py
              test_f2py2e.py
              test_isoc.py
              test_kind.py
              test_mixed.py
              test_modules.py
              test_parameter.py
              test_pyf_src.py
              test_quoted_character.py
              test_regression.py
              test_return_character.py
              test_return_complex.py
              test_return_integer.py
              test_return_logical.py
              test_return_real.py
              test_routines.py
              test_semicolon_split.py
              test_size.py
              test_string.py
              test_symbolic.py
              test_value_attrspec.py
              util.py
              __init__.py
              src/
                abstract_interface/
                  foo.f90
                  gh18403_mod.f90
                array_from_pyobj/
                  wrapmodule.c
                assumed_shape/
                  .f2py_f2cmap
                  foo_free.f90
                  foo_mod.f90
                  foo_use.f90
                  precision.f90
                block_docstring/
                  foo.f
                callback/
                  foo.f
                  gh17797.f90
                  gh18335.f90
                  gh25211.f
                  gh25211.pyf
                  gh26681.f90
                cli/
                  gh_22819.pyf
                  hi77.f
                  hiworld.f90
                common/
                  block.f
                  gh19161.f90
                crackfortran/
                  accesstype.f90
                  common_with_division.f
                  data_common.f
                  data_multiplier.f
                  data_stmts.f90
                  data_with_comments.f
                  foo_deps.f90
                  gh15035.f
                  gh17859.f
                  gh22648.pyf
                  gh23533.f
                  gh23598.f90
                  gh23598Warn.f90
                  gh23879.f90
                  gh27697.f90
                  gh2848.f90
                  operators.f90
                  privatemod.f90
                  publicmod.f90
                  pubprivmod.f90
                  unicode_comment.f90
                f2cmap/
                  .f2py_f2cmap
                  isoFortranEnvMap.f90
                isocintrin/
                  isoCtests.f90
                kind/
                  foo.f90
                mixed/
                  foo.f
                  foo_fixed.f90
                  foo_free.f90
                modules/
                  module_data_docstring.f90
                  use_modules.f90
                  gh25337/
                    data.f90
                    use_data.f90
                  gh26920/
                    two_mods_with_no_public_entities.f90
                    two_mods_with_one_public_routine.f90
                negative_bounds/
                  issue_20853.f90
                parameter/
                  constant_array.f90
                  constant_both.f90
                  constant_compound.f90
                  constant_integer.f90
                  constant_non_compound.f90
                  constant_real.f90
                quoted_character/
                  foo.f
                regression/
                  AB.inc
                  assignOnlyModule.f90
                  datonly.f90
                  f77comments.f
                  f77fixedform.f95
                  f90continuation.f90
                  incfile.f90
                  inout.f90
                  lower_f2py_fortran.f90
                return_character/
                  foo77.f
                  foo90.f90
                return_complex/
                  foo77.f
                  foo90.f90
                return_integer/
                  foo77.f
                  foo90.f90
                return_logical/
                  foo77.f
                  foo90.f90
                return_real/
                  foo77.f
                  foo90.f90
                routines/
                  funcfortranname.f
                  funcfortranname.pyf
                  subrout.f
                  subrout.pyf
                size/
                  foo.f90
                string/
                  char.f90
                  fixed_string.f90
                  gh24008.f
                  gh24662.f90
                  gh25286.f90
                  gh25286.pyf
                  gh25286_bc.pyf
                  scalar_string.f90
                  string.f
                value_attrspec/
                  gh21665.f90
              __pycache__/
                test_abstract_interface.cpython-312.pyc
                test_array_from_pyobj.cpython-312.pyc
                test_assumed_shape.cpython-312.pyc
                test_block_docstring.cpython-312.pyc
                test_callback.cpython-312.pyc
                test_character.cpython-312.pyc
                test_common.cpython-312.pyc
                test_crackfortran.cpython-312.pyc
                test_data.cpython-312.pyc
                test_docs.cpython-312.pyc
                test_f2cmap.cpython-312.pyc
                test_f2py2e.cpython-312.pyc
                test_isoc.cpython-312.pyc
                test_kind.cpython-312.pyc
                test_mixed.cpython-312.pyc
                test_modules.cpython-312.pyc
                test_parameter.cpython-312.pyc
                test_pyf_src.cpython-312.pyc
                test_quoted_character.cpython-312.pyc
                test_regression.cpython-312.pyc
                test_return_character.cpython-312.pyc
                test_return_complex.cpython-312.pyc
                test_return_integer.cpython-312.pyc
                test_return_logical.cpython-312.pyc
                test_return_real.cpython-312.pyc
                test_routines.cpython-312.pyc
                test_semicolon_split.cpython-312.pyc
                test_size.cpython-312.pyc
                test_string.cpython-312.pyc
                test_symbolic.cpython-312.pyc
                test_value_attrspec.cpython-312.pyc
                util.cpython-312.pyc
                __init__.cpython-312.pyc
            _backends/
              meson.build.template
              _backend.py
              _distutils.py
              _meson.py
              __init__.py
              __pycache__/
                _backend.cpython-312.pyc
                _distutils.cpython-312.pyc
                _meson.cpython-312.pyc
                __init__.cpython-312.pyc
            __pycache__/
              auxfuncs.cpython-312.pyc
              capi_maps.cpython-312.pyc
              cb_rules.cpython-312.pyc
              cfuncs.cpython-312.pyc
              common_rules.cpython-312.pyc
              crackfortran.cpython-312.pyc
              diagnose.cpython-312.pyc
              f2py2e.cpython-312.pyc
              f90mod_rules.cpython-312.pyc
              func2subr.cpython-312.pyc
              rules.cpython-312.pyc
              symbolic.cpython-312.pyc
              use_rules.cpython-312.pyc
              _isocbind.cpython-312.pyc
              _src_pyf.cpython-312.pyc
              __init__.cpython-312.pyc
              __main__.cpython-312.pyc
              __version__.cpython-312.pyc
          fft/
            helper.py
            helper.pyi
            _helper.py
            _helper.pyi
            _pocketfft.py
            _pocketfft.pyi
            _pocketfft_umath.cp312-win_amd64.lib
            _pocketfft_umath.cp312-win_amd64.pyd
            __init__.py
            __init__.pyi
            tests/
              test_helper.py
              test_pocketfft.py
              __init__.py
              __pycache__/
                test_helper.cpython-312.pyc
                test_pocketfft.cpython-312.pyc
                __init__.cpython-312.pyc
            __pycache__/
              helper.cpython-312.pyc
              _helper.cpython-312.pyc
              _pocketfft.cpython-312.pyc
              __init__.cpython-312.pyc
          lib/
            array_utils.py
            array_utils.pyi
            format.py
            format.pyi
            introspect.py
            introspect.pyi
            mixins.py
            mixins.pyi
            npyio.py
            npyio.pyi
            recfunctions.py
            recfunctions.pyi
            scimath.py
            scimath.pyi
            stride_tricks.py
            stride_tricks.pyi
            user_array.py
            user_array.pyi
            _arraypad_impl.py
            _arraypad_impl.pyi
            _arraysetops_impl.py
            _arraysetops_impl.pyi
            _arrayterator_impl.py
            _arrayterator_impl.pyi
            _array_utils_impl.py
            _array_utils_impl.pyi
            _datasource.py
            _datasource.pyi
            _function_base_impl.py
            _function_base_impl.pyi
            _histograms_impl.py
            _histograms_impl.pyi
            _index_tricks_impl.py
            _index_tricks_impl.pyi
            _iotools.py
            _iotools.pyi
            _nanfunctions_impl.py
            _nanfunctions_impl.pyi
            _npyio_impl.py
            _npyio_impl.pyi
            _polynomial_impl.py
            _polynomial_impl.pyi
            _scimath_impl.py
            _scimath_impl.pyi
            _shape_base_impl.py
            _shape_base_impl.pyi
            _stride_tricks_impl.py
            _stride_tricks_impl.pyi
            _twodim_base_impl.py
            _twodim_base_impl.pyi
            _type_check_impl.py
            _type_check_impl.pyi
            _ufunclike_impl.py
            _ufunclike_impl.pyi
            _user_array_impl.py
            _user_array_impl.pyi
            _utils_impl.py
            _utils_impl.pyi
            _version.py
            _version.pyi
            __init__.py
            __init__.pyi
            tests/
              test_arraypad.py
              test_arraysetops.py
              test_arrayterator.py
              test_array_utils.py
              test_format.py
              test_function_base.py
              test_histograms.py
              test_index_tricks.py
              test_io.py
              test_loadtxt.py
              test_mixins.py
              test_nanfunctions.py
              test_packbits.py
              test_polynomial.py
              test_recfunctions.py
              test_regression.py
              test_shape_base.py
              test_stride_tricks.py
              test_twodim_base.py
              test_type_check.py
              test_ufunclike.py
              test_utils.py
              test__datasource.py
              test__iotools.py
              test__version.py
              __init__.py
              data/
                py2-np0-objarr.npy
                py2-objarr.npy
                py2-objarr.npz
                py3-objarr.npy
                py3-objarr.npz
                python3.npy
                win64python2.npy
              __pycache__/
                test_arraypad.cpython-312.pyc
                test_arraysetops.cpython-312.pyc
                test_arrayterator.cpython-312.pyc
                test_array_utils.cpython-312.pyc
                test_format.cpython-312.pyc
                test_function_base.cpython-312.pyc
                test_histograms.cpython-312.pyc
                test_index_tricks.cpython-312.pyc
                test_io.cpython-312.pyc
                test_loadtxt.cpython-312.pyc
                test_mixins.cpython-312.pyc
                test_nanfunctions.cpython-312.pyc
                test_packbits.cpython-312.pyc
                test_polynomial.cpython-312.pyc
                test_recfunctions.cpython-312.pyc
                test_regression.cpython-312.pyc
                test_shape_base.cpython-312.pyc
                test_stride_tricks.cpython-312.pyc
                test_twodim_base.cpython-312.pyc
                test_type_check.cpython-312.pyc
                test_ufunclike.cpython-312.pyc
                test_utils.cpython-312.pyc
                test__datasource.cpython-312.pyc
                test__iotools.cpython-312.pyc
                test__version.cpython-312.pyc
                __init__.cpython-312.pyc
            __pycache__/
              array_utils.cpython-312.pyc
              format.cpython-312.pyc
              introspect.cpython-312.pyc
              mixins.cpython-312.pyc
              npyio.cpython-312.pyc
              recfunctions.cpython-312.pyc
              scimath.cpython-312.pyc
              stride_tricks.cpython-312.pyc
              user_array.cpython-312.pyc
              _arraypad_impl.cpython-312.pyc
              _arraysetops_impl.cpython-312.pyc
              _arrayterator_impl.cpython-312.pyc
              _array_utils_impl.cpython-312.pyc
              _datasource.cpython-312.pyc
              _function_base_impl.cpython-312.pyc
              _histograms_impl.cpython-312.pyc
              _index_tricks_impl.cpython-312.pyc
              _iotools.cpython-312.pyc
              _nanfunctions_impl.cpython-312.pyc
              _npyio_impl.cpython-312.pyc
              _polynomial_impl.cpython-312.pyc
              _scimath_impl.cpython-312.pyc
              _shape_base_impl.cpython-312.pyc
              _stride_tricks_impl.cpython-312.pyc
              _twodim_base_impl.cpython-312.pyc
              _type_check_impl.cpython-312.pyc
              _ufunclike_impl.cpython-312.pyc
              _user_array_impl.cpython-312.pyc
              _utils_impl.cpython-312.pyc
              _version.cpython-312.pyc
              __init__.cpython-312.pyc
          linalg/
            lapack_lite.cp312-win_amd64.lib
            lapack_lite.cp312-win_amd64.pyd
            lapack_lite.pyi
            linalg.py
            linalg.pyi
            _linalg.py
            _linalg.pyi
            _umath_linalg.cp312-win_amd64.lib
            _umath_linalg.cp312-win_amd64.pyd
            _umath_linalg.pyi
            __init__.py
            __init__.pyi
            tests/
              test_deprecations.py
              test_linalg.py
              test_regression.py
              __init__.py
              __pycache__/
                test_deprecations.cpython-312.pyc
                test_linalg.cpython-312.pyc
                test_regression.cpython-312.pyc
                __init__.cpython-312.pyc
            __pycache__/
              linalg.cpython-312.pyc
              _linalg.cpython-312.pyc
              __init__.cpython-312.pyc
          ma/
            API_CHANGES.txt
            core.py
            core.pyi
            extras.py
            extras.pyi
            LICENSE
            mrecords.py
            mrecords.pyi
            README.rst
            testutils.py
            timer_comparison.py
            __init__.py
            __init__.pyi
            tests/
              test_arrayobject.py
              test_core.py
              test_deprecations.py
              test_extras.py
              test_mrecords.py
              test_old_ma.py
              test_regression.py
              test_subclassing.py
              __init__.py
              __pycache__/
                test_arrayobject.cpython-312.pyc
                test_core.cpython-312.pyc
                test_deprecations.cpython-312.pyc
                test_extras.cpython-312.pyc
                test_mrecords.cpython-312.pyc
                test_old_ma.cpython-312.pyc
                test_regression.cpython-312.pyc
                test_subclassing.cpython-312.pyc
                __init__.cpython-312.pyc
            __pycache__/
              core.cpython-312.pyc
              extras.cpython-312.pyc
              mrecords.cpython-312.pyc
              testutils.cpython-312.pyc
              timer_comparison.cpython-312.pyc
              __init__.cpython-312.pyc
          matrixlib/
            defmatrix.py
            defmatrix.pyi
            __init__.py
            __init__.pyi
            tests/
              test_defmatrix.py
              test_interaction.py
              test_masked_matrix.py
              test_matrix_linalg.py
              test_multiarray.py
              test_numeric.py
              test_regression.py
              __init__.py
              __pycache__/
                test_defmatrix.cpython-312.pyc
                test_interaction.cpython-312.pyc
                test_masked_matrix.cpython-312.pyc
                test_matrix_linalg.cpython-312.pyc
                test_multiarray.cpython-312.pyc
                test_numeric.cpython-312.pyc
                test_regression.cpython-312.pyc
                __init__.cpython-312.pyc
            __pycache__/
              defmatrix.cpython-312.pyc
              __init__.cpython-312.pyc
          polynomial/
            chebyshev.py
            chebyshev.pyi
            hermite.py
            hermite.pyi
            hermite_e.py
            hermite_e.pyi
            laguerre.py
            laguerre.pyi
            legendre.py
            legendre.pyi
            polynomial.py
            polynomial.pyi
            polyutils.py
            polyutils.pyi
            _polybase.py
            _polybase.pyi
            _polytypes.pyi
            __init__.py
            __init__.pyi
            tests/
              test_chebyshev.py
              test_classes.py
              test_hermite.py
              test_hermite_e.py
              test_laguerre.py
              test_legendre.py
              test_polynomial.py
              test_polyutils.py
              test_printing.py
              test_symbol.py
              __init__.py
              __pycache__/
                test_chebyshev.cpython-312.pyc
                test_classes.cpython-312.pyc
                test_hermite.cpython-312.pyc
                test_hermite_e.cpython-312.pyc
                test_laguerre.cpython-312.pyc
                test_legendre.cpython-312.pyc
                test_polynomial.cpython-312.pyc
                test_polyutils.cpython-312.pyc
                test_printing.cpython-312.pyc
                test_symbol.cpython-312.pyc
                __init__.cpython-312.pyc
            __pycache__/
              chebyshev.cpython-312.pyc
              hermite.cpython-312.pyc
              hermite_e.cpython-312.pyc
              laguerre.cpython-312.pyc
              legendre.cpython-312.pyc
              polynomial.cpython-312.pyc
              polyutils.cpython-312.pyc
              _polybase.cpython-312.pyc
              __init__.cpython-312.pyc
          random/
            bit_generator.cp312-win_amd64.lib
            bit_generator.cp312-win_amd64.pyd
            bit_generator.pxd
            bit_generator.pyi
            c_distributions.pxd
            LICENSE.md
            mtrand.cp312-win_amd64.lib
            mtrand.cp312-win_amd64.pyd
            mtrand.pyi
            _bounded_integers.cp312-win_amd64.lib
            _bounded_integers.cp312-win_amd64.pyd
            _bounded_integers.pxd
            _common.cp312-win_amd64.lib
            _common.cp312-win_amd64.pyd
            _common.pxd
            _generator.cp312-win_amd64.lib
            _generator.cp312-win_amd64.pyd
            _generator.pyi
            _mt19937.cp312-win_amd64.lib
            _mt19937.cp312-win_amd64.pyd
            _mt19937.pyi
            _pcg64.cp312-win_amd64.lib
            _pcg64.cp312-win_amd64.pyd
            _pcg64.pyi
            _philox.cp312-win_amd64.lib
            _philox.cp312-win_amd64.pyd
            _philox.pyi
            _pickle.py
            _pickle.pyi
            _sfc64.cp312-win_amd64.lib
            _sfc64.cp312-win_amd64.pyd
            _sfc64.pyi
            __init__.pxd
            __init__.py
            __init__.pyi
            lib/
              npyrandom.lib
            tests/
              test_direct.py
              test_extending.py
              test_generator_mt19937.py
              test_generator_mt19937_regressions.py
              test_random.py
              test_randomstate.py
              test_randomstate_regression.py
              test_regression.py
              test_seed_sequence.py
              test_smoke.py
              __init__.py
              data/
                generator_pcg64_np121.pkl.gz
                generator_pcg64_np126.pkl.gz
                mt19937-testset-1.csv
                mt19937-testset-2.csv
                pcg64-testset-1.csv
                pcg64-testset-2.csv
                pcg64dxsm-testset-1.csv
                pcg64dxsm-testset-2.csv
                philox-testset-1.csv
                philox-testset-2.csv
                sfc64-testset-1.csv
                sfc64-testset-2.csv
                sfc64_np126.pkl.gz
                __init__.py
                __pycache__/
                  __init__.cpython-312.pyc
              __pycache__/
                test_direct.cpython-312.pyc
                test_extending.cpython-312.pyc
                test_generator_mt19937.cpython-312.pyc
                test_generator_mt19937_regressions.cpython-312.pyc
                test_random.cpython-312.pyc
                test_randomstate.cpython-312.pyc
                test_randomstate_regression.cpython-312.pyc
                test_regression.cpython-312.pyc
                test_seed_sequence.cpython-312.pyc
                test_smoke.cpython-312.pyc
                __init__.cpython-312.pyc
            _examples/
              cffi/
                extending.py
                parse.py
                __pycache__/
                  extending.cpython-312.pyc
                  parse.cpython-312.pyc
              cython/
                extending.pyx
                extending_distributions.pyx
                meson.build
              numba/
                extending.py
                extending_distributions.py
                __pycache__/
                  extending.cpython-312.pyc
                  extending_distributions.cpython-312.pyc
            __pycache__/
              _pickle.cpython-312.pyc
              __init__.cpython-312.pyc
          rec/
            __init__.py
            __init__.pyi
            __pycache__/
              __init__.cpython-312.pyc
          strings/
            __init__.py
            __init__.pyi
            __pycache__/
              __init__.cpython-312.pyc
          testing/
            overrides.py
            overrides.pyi
            print_coercion_tables.py
            print_coercion_tables.pyi
            __init__.py
            __init__.pyi
            tests/
              test_utils.py
              __init__.py
              __pycache__/
                test_utils.cpython-312.pyc
                __init__.cpython-312.pyc
            _private/
              extbuild.py
              extbuild.pyi
              utils.py
              utils.pyi
              __init__.py
              __init__.pyi
              __pycache__/
                extbuild.cpython-312.pyc
                utils.cpython-312.pyc
                __init__.cpython-312.pyc
            __pycache__/
              overrides.cpython-312.pyc
              print_coercion_tables.cpython-312.pyc
              __init__.cpython-312.pyc
          tests/
            test_configtool.py
            test_ctypeslib.py
            test_lazyloading.py
            test_matlib.py
            test_numpy_config.py
            test_numpy_version.py
            test_public_api.py
            test_reloading.py
            test_scripts.py
            test_warnings.py
            test__all__.py
            __init__.py
            __pycache__/
              test_configtool.cpython-312.pyc
              test_ctypeslib.cpython-312.pyc
              test_lazyloading.cpython-312.pyc
              test_matlib.cpython-312.pyc
              test_numpy_config.cpython-312.pyc
              test_numpy_version.cpython-312.pyc
              test_public_api.cpython-312.pyc
              test_reloading.cpython-312.pyc
              test_scripts.cpython-312.pyc
              test_warnings.cpython-312.pyc
              test__all__.cpython-312.pyc
              __init__.cpython-312.pyc
          typing/
            mypy_plugin.py
            __init__.py
            tests/
              test_isfile.py
              test_runtime.py
              test_typing.py
              __init__.py
              data/
                mypy.ini
                fail/
                  arithmetic.pyi
                  arrayprint.pyi
                  arrayterator.pyi
                  array_constructors.pyi
                  array_like.pyi
                  array_pad.pyi
                  bitwise_ops.pyi
                  char.pyi
                  chararray.pyi
                  comparisons.pyi
                  constants.pyi
                  datasource.pyi
                  dtype.pyi
                  einsumfunc.pyi
                  flatiter.pyi
                  fromnumeric.pyi
                  histograms.pyi
                  index_tricks.pyi
                  lib_function_base.pyi
                  lib_polynomial.pyi
                  lib_utils.pyi
                  lib_version.pyi
                  linalg.pyi
                  memmap.pyi
                  modules.pyi
                  multiarray.pyi
                  ndarray.pyi
                  ndarray_misc.pyi
                  nditer.pyi
                  nested_sequence.pyi
                  npyio.pyi
                  numerictypes.pyi
                  random.pyi
                  rec.pyi
                  scalars.pyi
                  shape.pyi
                  shape_base.pyi
                  stride_tricks.pyi
                  strings.pyi
                  testing.pyi
                  twodim_base.pyi
                  type_check.pyi
                  ufunclike.pyi
                  ufuncs.pyi
                  ufunc_config.pyi
                  warnings_and_errors.pyi
                misc/
                  extended_precision.pyi
                pass/
                  arithmetic.py
                  arrayprint.py
                  arrayterator.py
                  array_constructors.py
                  array_like.py
                  bitwise_ops.py
                  comparisons.py
                  dtype.py
                  einsumfunc.py
                  flatiter.py
                  fromnumeric.py
                  index_tricks.py
                  lib_user_array.py
                  lib_utils.py
                  lib_version.py
                  literal.py
                  ma.py
                  mod.py
                  modules.py
                  multiarray.py
                  ndarray_conversion.py
                  ndarray_misc.py
                  ndarray_shape_manipulation.py
                  nditer.py
                  numeric.py
                  numerictypes.py
                  random.py
                  recfunctions.py
                  scalars.py
                  shape.py
                  simple.py
                  simple_py3.py
                  ufunclike.py
                  ufuncs.py
                  ufunc_config.py
                  warnings_and_errors.py
                  __pycache__/
                    arithmetic.cpython-312.pyc
                    arrayprint.cpython-312.pyc
                    arrayterator.cpython-312.pyc
                    array_constructors.cpython-312.pyc
                    array_like.cpython-312.pyc
                    bitwise_ops.cpython-312.pyc
                    comparisons.cpython-312.pyc
                    dtype.cpython-312.pyc
                    einsumfunc.cpython-312.pyc
                    flatiter.cpython-312.pyc
                    fromnumeric.cpython-312.pyc
                    index_tricks.cpython-312.pyc
                    lib_user_array.cpython-312.pyc
                    lib_utils.cpython-312.pyc
                    lib_version.cpython-312.pyc
                    literal.cpython-312.pyc
                    ma.cpython-312.pyc
                    mod.cpython-312.pyc
                    modules.cpython-312.pyc
                    multiarray.cpython-312.pyc
                    ndarray_conversion.cpython-312.pyc
                    ndarray_misc.cpython-312.pyc
                    ndarray_shape_manipulation.cpython-312.pyc
                    nditer.cpython-312.pyc
                    numeric.cpython-312.pyc
                    numerictypes.cpython-312.pyc
                    random.cpython-312.pyc
                    recfunctions.cpython-312.pyc
                    scalars.cpython-312.pyc
                    shape.cpython-312.pyc
                    simple.cpython-312.pyc
                    simple_py3.cpython-312.pyc
                    ufunclike.cpython-312.pyc
                    ufuncs.cpython-312.pyc
                    ufunc_config.cpython-312.pyc
                    warnings_and_errors.cpython-312.pyc
                reveal/
                  arithmetic.pyi
                  arraypad.pyi
                  arrayprint.pyi
                  arraysetops.pyi
                  arrayterator.pyi
                  array_api_info.pyi
                  array_constructors.pyi
                  bitwise_ops.pyi
                  char.pyi
                  chararray.pyi
                  comparisons.pyi
                  constants.pyi
                  ctypeslib.pyi
                  datasource.pyi
                  dtype.pyi
                  einsumfunc.pyi
                  emath.pyi
                  fft.pyi
                  flatiter.pyi
                  fromnumeric.pyi
                  getlimits.pyi
                  histograms.pyi
                  index_tricks.pyi
                  lib_function_base.pyi
                  lib_polynomial.pyi
                  lib_utils.pyi
                  lib_version.pyi
                  linalg.pyi
                  matrix.pyi
                  memmap.pyi
                  mod.pyi
                  modules.pyi
                  multiarray.pyi
                  nbit_base_example.pyi
                  ndarray_assignability.pyi
                  ndarray_conversion.pyi
                  ndarray_misc.pyi
                  ndarray_shape_manipulation.pyi
                  nditer.pyi
                  nested_sequence.pyi
                  npyio.pyi
                  numeric.pyi
                  numerictypes.pyi
                  polynomial_polybase.pyi
                  polynomial_polyutils.pyi
                  polynomial_series.pyi
                  random.pyi
                  rec.pyi
                  scalars.pyi
                  shape.pyi
                  shape_base.pyi
                  stride_tricks.pyi
                  strings.pyi
                  testing.pyi
                  twodim_base.pyi
                  type_check.pyi
                  ufunclike.pyi
                  ufuncs.pyi
                  ufunc_config.pyi
                  warnings_and_errors.pyi
              __pycache__/
                test_isfile.cpython-312.pyc
                test_runtime.cpython-312.pyc
                test_typing.cpython-312.pyc
                __init__.cpython-312.pyc
            __pycache__/
              mypy_plugin.cpython-312.pyc
              __init__.cpython-312.pyc
          _core/
            arrayprint.py
            arrayprint.pyi
            cversions.py
            defchararray.py
            defchararray.pyi
            einsumfunc.py
            einsumfunc.pyi
            fromnumeric.py
            fromnumeric.pyi
            function_base.py
            function_base.pyi
            getlimits.py
            getlimits.pyi
            memmap.py
            memmap.pyi
            multiarray.py
            multiarray.pyi
            numeric.py
            numeric.pyi
            numerictypes.py
            numerictypes.pyi
            overrides.py
            overrides.pyi
            printoptions.py
            printoptions.pyi
            records.py
            records.pyi
            shape_base.py
            shape_base.pyi
            strings.py
            strings.pyi
            umath.py
            umath.pyi
            _add_newdocs.py
            _add_newdocs.pyi
            _add_newdocs_scalars.py
            _add_newdocs_scalars.pyi
            _asarray.py
            _asarray.pyi
            _dtype.py
            _dtype.pyi
            _dtype_ctypes.py
            _dtype_ctypes.pyi
            _exceptions.py
            _exceptions.pyi
            _internal.py
            _internal.pyi
            _machar.py
            _machar.pyi
            _methods.py
            _methods.pyi
            _multiarray_tests.cp312-win_amd64.lib
            _multiarray_tests.cp312-win_amd64.pyd
            _multiarray_umath.cp312-win_amd64.lib
            _multiarray_umath.cp312-win_amd64.pyd
            _operand_flag_tests.cp312-win_amd64.lib
            _operand_flag_tests.cp312-win_amd64.pyd
            _rational_tests.cp312-win_amd64.lib
            _rational_tests.cp312-win_amd64.pyd
            _simd.cp312-win_amd64.lib
            _simd.cp312-win_amd64.pyd
            _simd.pyi
            _string_helpers.py
            _string_helpers.pyi
            _struct_ufunc_tests.cp312-win_amd64.lib
            _struct_ufunc_tests.cp312-win_amd64.pyd
            _type_aliases.py
            _type_aliases.pyi
            _ufunc_config.py
            _ufunc_config.pyi
            _umath_tests.cp312-win_amd64.lib
            _umath_tests.cp312-win_amd64.pyd
            __init__.py
            __init__.pyi
            include/
              numpy/
                arrayobject.h
                arrayscalars.h
                dtype_api.h
                halffloat.h
                ndarrayobject.h
                ndarraytypes.h
                npy_1_7_deprecated_api.h
                npy_2_compat.h
                npy_2_complexcompat.h
                npy_3kcompat.h
                npy_common.h
                npy_cpu.h
                npy_endian.h
                npy_math.h
                npy_no_deprecated_api.h
                npy_os.h
                numpyconfig.h
                ufuncobject.h
                utils.h
                _neighborhood_iterator_imp.h
                _numpyconfig.h
                _public_dtype_api_table.h
                __multiarray_api.c
                __multiarray_api.h
                __ufunc_api.c
                __ufunc_api.h
                random/
                  bitgen.h
                  distributions.h
                  libdivide.h
                  LICENSE.txt
            lib/
              npymath.lib
              npy-pkg-config/
                mlib.ini
                npymath.ini
              pkgconfig/
                numpy.pc
            tests/
              test_abc.py
              test_api.py
              test_argparse.py
              test_arraymethod.py
              test_arrayobject.py
              test_arrayprint.py
              test_array_api_info.py
              test_array_coercion.py
              test_array_interface.py
              test_casting_floatingpoint_errors.py
              test_casting_unittests.py
              test_conversion_utils.py
              test_cpu_dispatcher.py
              test_cpu_features.py
              test_custom_dtypes.py
              test_cython.py
              test_datetime.py
              test_defchararray.py
              test_deprecations.py
              test_dlpack.py
              test_dtype.py
              test_einsum.py
              test_errstate.py
              test_extint128.py
              test_function_base.py
              test_getlimits.py
              test_half.py
              test_hashtable.py
              test_indexerrors.py
              test_indexing.py
              test_item_selection.py
              test_limited_api.py
              test_longdouble.py
              test_machar.py
              test_memmap.py
              test_mem_overlap.py
              test_mem_policy.py
              test_multiarray.py
              test_multithreading.py
              test_nditer.py
              test_nep50_promotions.py
              test_numeric.py
              test_numerictypes.py
              test_overrides.py
              test_print.py
              test_protocols.py
              test_records.py
              test_regression.py
              test_scalarbuffer.py
              test_scalarinherit.py
              test_scalarmath.py
              test_scalarprint.py
              test_scalar_ctors.py
              test_scalar_methods.py
              test_shape_base.py
              test_simd.py
              test_simd_module.py
              test_stringdtype.py
              test_strings.py
              test_ufunc.py
              test_umath.py
              test_umath_accuracy.py
              test_umath_complex.py
              test_unicode.py
              test__exceptions.py
              _locales.py
              _natype.py
              data/
                astype_copy.pkl
                generate_umath_validation_data.cpp
                recarray_from_file.fits
                umath-validation-set-arccos.csv
                umath-validation-set-arccosh.csv
                umath-validation-set-arcsin.csv
                umath-validation-set-arcsinh.csv
                umath-validation-set-arctan.csv
                umath-validation-set-arctanh.csv
                umath-validation-set-cbrt.csv
                umath-validation-set-cos.csv
                umath-validation-set-cosh.csv
                umath-validation-set-exp.csv
                umath-validation-set-exp2.csv
                umath-validation-set-expm1.csv
                umath-validation-set-log.csv
                umath-validation-set-log10.csv
                umath-validation-set-log1p.csv
                umath-validation-set-log2.csv
                umath-validation-set-README.txt
                umath-validation-set-sin.csv
                umath-validation-set-sinh.csv
                umath-validation-set-tan.csv
                umath-validation-set-tanh.csv
              examples/
                cython/
                  checks.pyx
                  meson.build
                  setup.py
                  __pycache__/
                    setup.cpython-312.pyc
                limited_api/
                  limited_api1.c
                  limited_api2.pyx
                  limited_api_latest.c
                  meson.build
                  setup.py
                  __pycache__/
                    setup.cpython-312.pyc
              __pycache__/
                test_abc.cpython-312.pyc
                test_api.cpython-312.pyc
                test_argparse.cpython-312.pyc
                test_arraymethod.cpython-312.pyc
                test_arrayobject.cpython-312.pyc
                test_arrayprint.cpython-312.pyc
                test_array_api_info.cpython-312.pyc
                test_array_coercion.cpython-312.pyc
                test_array_interface.cpython-312.pyc
                test_casting_floatingpoint_errors.cpython-312.pyc
                test_casting_unittests.cpython-312.pyc
                test_conversion_utils.cpython-312.pyc
                test_cpu_dispatcher.cpython-312.pyc
                test_cpu_features.cpython-312.pyc
                test_custom_dtypes.cpython-312.pyc
                test_cython.cpython-312.pyc
                test_datetime.cpython-312.pyc
                test_defchararray.cpython-312.pyc
                test_deprecations.cpython-312.pyc
                test_dlpack.cpython-312.pyc
                test_dtype.cpython-312.pyc
                test_einsum.cpython-312.pyc
                test_errstate.cpython-312.pyc
                test_extint128.cpython-312.pyc
                test_function_base.cpython-312.pyc
                test_getlimits.cpython-312.pyc
                test_half.cpython-312.pyc
                test_hashtable.cpython-312.pyc
                test_indexerrors.cpython-312.pyc
                test_indexing.cpython-312.pyc
                test_item_selection.cpython-312.pyc
                test_limited_api.cpython-312.pyc
                test_longdouble.cpython-312.pyc
                test_machar.cpython-312.pyc
                test_memmap.cpython-312.pyc
                test_mem_overlap.cpython-312.pyc
                test_mem_policy.cpython-312.pyc
                test_multiarray.cpython-312.pyc
                test_multithreading.cpython-312.pyc
                test_nditer.cpython-312.pyc
                test_nep50_promotions.cpython-312.pyc
                test_numeric.cpython-312.pyc
                test_numerictypes.cpython-312.pyc
                test_overrides.cpython-312.pyc
                test_print.cpython-312.pyc
                test_protocols.cpython-312.pyc
                test_records.cpython-312.pyc
                test_regression.cpython-312.pyc
                test_scalarbuffer.cpython-312.pyc
                test_scalarinherit.cpython-312.pyc
                test_scalarmath.cpython-312.pyc
                test_scalarprint.cpython-312.pyc
                test_scalar_ctors.cpython-312.pyc
                test_scalar_methods.cpython-312.pyc
                test_shape_base.cpython-312.pyc
                test_simd.cpython-312.pyc
                test_simd_module.cpython-312.pyc
                test_stringdtype.cpython-312.pyc
                test_strings.cpython-312.pyc
                test_ufunc.cpython-312.pyc
                test_umath.cpython-312.pyc
                test_umath_accuracy.cpython-312.pyc
                test_umath_complex.cpython-312.pyc
                test_unicode.cpython-312.pyc
                test__exceptions.cpython-312.pyc
                _locales.cpython-312.pyc
                _natype.cpython-312.pyc
            __pycache__/
              arrayprint.cpython-312.pyc
              cversions.cpython-312.pyc
              defchararray.cpython-312.pyc
              einsumfunc.cpython-312.pyc
              fromnumeric.cpython-312.pyc
              function_base.cpython-312.pyc
              getlimits.cpython-312.pyc
              memmap.cpython-312.pyc
              multiarray.cpython-312.pyc
              numeric.cpython-312.pyc
              numerictypes.cpython-312.pyc
              overrides.cpython-312.pyc
              printoptions.cpython-312.pyc
              records.cpython-312.pyc
              shape_base.cpython-312.pyc
              strings.cpython-312.pyc
              umath.cpython-312.pyc
              _add_newdocs.cpython-312.pyc
              _add_newdocs_scalars.cpython-312.pyc
              _asarray.cpython-312.pyc
              _dtype.cpython-312.pyc
              _dtype_ctypes.cpython-312.pyc
              _exceptions.cpython-312.pyc
              _internal.cpython-312.pyc
              _machar.cpython-312.pyc
              _methods.cpython-312.pyc
              _string_helpers.cpython-312.pyc
              _type_aliases.cpython-312.pyc
              _ufunc_config.cpython-312.pyc
              __init__.cpython-312.pyc
          _pyinstaller/
            hook-numpy.py
            hook-numpy.pyi
            __init__.py
            __init__.pyi
            tests/
              pyinstaller-smoke.py
              test_pyinstaller.py
              __init__.py
              __pycache__/
                pyinstaller-smoke.cpython-312.pyc
                test_pyinstaller.cpython-312.pyc
                __init__.cpython-312.pyc
            __pycache__/
              hook-numpy.cpython-312.pyc
              __init__.cpython-312.pyc
          _typing/
            _add_docstring.py
            _array_like.py
            _callable.pyi
            _char_codes.py
            _dtype_like.py
            _extended_precision.py
            _nbit.py
            _nbit_base.py
            _nested_sequence.py
            _scalars.py
            _shape.py
            _ufunc.py
            _ufunc.pyi
            __init__.py
            __pycache__/
              _add_docstring.cpython-312.pyc
              _array_like.cpython-312.pyc
              _char_codes.cpython-312.pyc
              _dtype_like.cpython-312.pyc
              _extended_precision.cpython-312.pyc
              _nbit.cpython-312.pyc
              _nbit_base.cpython-312.pyc
              _nested_sequence.cpython-312.pyc
              _scalars.cpython-312.pyc
              _shape.cpython-312.pyc
              _ufunc.cpython-312.pyc
              __init__.cpython-312.pyc
          _utils/
            _convertions.py
            _convertions.pyi
            _inspect.py
            _inspect.pyi
            _pep440.py
            _pep440.pyi
            __init__.py
            __init__.pyi
            __pycache__/
              _convertions.cpython-312.pyc
              _inspect.cpython-312.pyc
              _pep440.cpython-312.pyc
              __init__.cpython-312.pyc
          __pycache__/
            conftest.cpython-312.pyc
            ctypeslib.cpython-312.pyc
            dtypes.cpython-312.pyc
            exceptions.cpython-312.pyc
            matlib.cpython-312.pyc
            version.cpython-312.pyc
            _array_api_info.cpython-312.pyc
            _configtool.cpython-312.pyc
            _distributor_init.cpython-312.pyc
            _expired_attrs_2_0.cpython-312.pyc
            _globals.cpython-312.pyc
            _pytesttester.cpython-312.pyc
            __config__.cpython-312.pyc
            __init__.cpython-312.pyc
        numpy-2.2.6.dist-info/
          DELVEWHEEL
          entry_points.txt
          INSTALLER
          LICENSE.txt
          METADATA
          RECORD
          WHEEL
        numpy.libs/
          libscipy_openblas64_-13e2df515630b4a41f92893938845698.dll
          msvcp140-263139962577ecda4cd9469ca360a746.dll
        openai/
          pagination.py
          py.typed
          version.py
          _base_client.py
          _client.py
          _compat.py
          _constants.py
          _exceptions.py
          _files.py
          _legacy_response.py
          _models.py
          _module_client.py
          _qs.py
          _resource.py
          _response.py
          _streaming.py
          _types.py
          _version.py
          __init__.py
          __main__.py
          cli/
            _cli.py
            _errors.py
            _models.py
            _progress.py
            _utils.py
            __init__.py
            _api/
              audio.py
              completions.py
              files.py
              image.py
              models.py
              _main.py
              __init__.py
              chat/
                completions.py
                __init__.py
                __pycache__/
                  completions.cpython-312.pyc
                  __init__.cpython-312.pyc
              __pycache__/
                audio.cpython-312.pyc
                completions.cpython-312.pyc
                files.cpython-312.pyc
                image.cpython-312.pyc
                models.cpython-312.pyc
                _main.cpython-312.pyc
                __init__.cpython-312.pyc
            _tools/
              fine_tunes.py
              migrate.py
              _main.py
              __init__.py
              __pycache__/
                fine_tunes.cpython-312.pyc
                migrate.cpython-312.pyc
                _main.cpython-312.pyc
                __init__.cpython-312.pyc
            __pycache__/
              _cli.cpython-312.pyc
              _errors.cpython-312.pyc
              _models.cpython-312.pyc
              _progress.cpython-312.pyc
              _utils.cpython-312.pyc
              __init__.cpython-312.pyc
          helpers/
            local_audio_player.py
            microphone.py
            __init__.py
            __pycache__/
              local_audio_player.cpython-312.pyc
              microphone.cpython-312.pyc
              __init__.cpython-312.pyc
          lib/
            .keep
            azure.py
            _old_api.py
            _pydantic.py
            _tools.py
            _validators.py
            __init__.py
            streaming/
              _assistants.py
              _deltas.py
              __init__.py
              chat/
                _completions.py
                _events.py
                _types.py
                __init__.py
                __pycache__/
                  _completions.cpython-312.pyc
                  _events.cpython-312.pyc
                  _types.cpython-312.pyc
                  __init__.cpython-312.pyc
              responses/
                _events.py
                _responses.py
                _types.py
                __init__.py
                __pycache__/
                  _events.cpython-312.pyc
                  _responses.cpython-312.pyc
                  _types.cpython-312.pyc
                  __init__.cpython-312.pyc
              __pycache__/
                _assistants.cpython-312.pyc
                _deltas.cpython-312.pyc
                __init__.cpython-312.pyc
            _parsing/
              _completions.py
              _responses.py
              __init__.py
              __pycache__/
                _completions.cpython-312.pyc
                _responses.cpython-312.pyc
                __init__.cpython-312.pyc
            __pycache__/
              azure.cpython-312.pyc
              _old_api.cpython-312.pyc
              _pydantic.cpython-312.pyc
              _tools.cpython-312.pyc
              _validators.cpython-312.pyc
              __init__.cpython-312.pyc
          resources/
            batches.py
            completions.py
            embeddings.py
            files.py
            images.py
            models.py
            moderations.py
            __init__.py
            audio/
              audio.py
              speech.py
              transcriptions.py
              translations.py
              __init__.py
              __pycache__/
                audio.cpython-312.pyc
                speech.cpython-312.pyc
                transcriptions.cpython-312.pyc
                translations.cpython-312.pyc
                __init__.cpython-312.pyc
            beta/
              assistants.py
              beta.py
              __init__.py
              chat/
                chat.py
                completions.py
                __init__.py
                __pycache__/
                  chat.cpython-312.pyc
                  completions.cpython-312.pyc
                  __init__.cpython-312.pyc
              realtime/
                realtime.py
                sessions.py
                transcription_sessions.py
                __init__.py
                __pycache__/
                  realtime.cpython-312.pyc
                  sessions.cpython-312.pyc
                  transcription_sessions.cpython-312.pyc
                  __init__.cpython-312.pyc
              threads/
                messages.py
                threads.py
                __init__.py
                runs/
                  runs.py
                  steps.py
                  __init__.py
                  __pycache__/
                    runs.cpython-312.pyc
                    steps.cpython-312.pyc
                    __init__.cpython-312.pyc
                __pycache__/
                  messages.cpython-312.pyc
                  threads.cpython-312.pyc
                  __init__.cpython-312.pyc
              __pycache__/
                assistants.cpython-312.pyc
                beta.cpython-312.pyc
                __init__.cpython-312.pyc
            chat/
              chat.py
              __init__.py
              completions/
                completions.py
                messages.py
                __init__.py
                __pycache__/
                  completions.cpython-312.pyc
                  messages.cpython-312.pyc
                  __init__.cpython-312.pyc
              __pycache__/
                chat.cpython-312.pyc
                __init__.cpython-312.pyc
            containers/
              containers.py
              __init__.py
              files/
                content.py
                files.py
                __init__.py
                __pycache__/
                  content.cpython-312.pyc
                  files.cpython-312.pyc
                  __init__.cpython-312.pyc
              __pycache__/
                containers.cpython-312.pyc
                __init__.cpython-312.pyc
            evals/
              evals.py
              __init__.py
              runs/
                output_items.py
                runs.py
                __init__.py
                __pycache__/
                  output_items.cpython-312.pyc
                  runs.cpython-312.pyc
                  __init__.cpython-312.pyc
              __pycache__/
                evals.cpython-312.pyc
                __init__.cpython-312.pyc
            fine_tuning/
              fine_tuning.py
              __init__.py
              alpha/
                alpha.py
                graders.py
                __init__.py
                __pycache__/
                  alpha.cpython-312.pyc
                  graders.cpython-312.pyc
                  __init__.cpython-312.pyc
              checkpoints/
                checkpoints.py
                permissions.py
                __init__.py
                __pycache__/
                  checkpoints.cpython-312.pyc
                  permissions.cpython-312.pyc
                  __init__.cpython-312.pyc
              jobs/
                checkpoints.py
                jobs.py
                __init__.py
                __pycache__/
                  checkpoints.cpython-312.pyc
                  jobs.cpython-312.pyc
                  __init__.cpython-312.pyc
              __pycache__/
                fine_tuning.cpython-312.pyc
                __init__.cpython-312.pyc
            responses/
              input_items.py
              responses.py
              __init__.py
              __pycache__/
                input_items.cpython-312.pyc
                responses.cpython-312.pyc
                __init__.cpython-312.pyc
            uploads/
              parts.py
              uploads.py
              __init__.py
              __pycache__/
                parts.cpython-312.pyc
                uploads.cpython-312.pyc
                __init__.cpython-312.pyc
            vector_stores/
              files.py
              file_batches.py
              vector_stores.py
              __init__.py
              __pycache__/
                files.cpython-312.pyc
                file_batches.cpython-312.pyc
                vector_stores.cpython-312.pyc
                __init__.cpython-312.pyc
            __pycache__/
              batches.cpython-312.pyc
              completions.cpython-312.pyc
              embeddings.cpython-312.pyc
              files.cpython-312.pyc
              images.cpython-312.pyc
              models.cpython-312.pyc
              moderations.cpython-312.pyc
              __init__.cpython-312.pyc
          types/
            audio_model.py
            audio_response_format.py
            auto_file_chunking_strategy_param.py
            batch.py
            batch_create_params.py
            batch_error.py
            batch_list_params.py
            batch_request_counts.py
            chat_model.py
            completion.py
            completion_choice.py
            completion_create_params.py
            completion_usage.py
            container_create_params.py
            container_create_response.py
            container_list_params.py
            container_list_response.py
            container_retrieve_response.py
            create_embedding_response.py
            embedding.py
            embedding_create_params.py
            embedding_model.py
            eval_create_params.py
            eval_create_response.py
            eval_custom_data_source_config.py
            eval_delete_response.py
            eval_list_params.py
            eval_list_response.py
            eval_retrieve_response.py
            eval_stored_completions_data_source_config.py
            eval_update_params.py
            eval_update_response.py
            file_chunking_strategy.py
            file_chunking_strategy_param.py
            file_content.py
            file_create_params.py
            file_deleted.py
            file_list_params.py
            file_object.py
            file_purpose.py
            image.py
            images_response.py
            image_create_variation_params.py
            image_edit_params.py
            image_generate_params.py
            image_model.py
            model.py
            model_deleted.py
            moderation.py
            moderation_create_params.py
            moderation_create_response.py
            moderation_image_url_input_param.py
            moderation_model.py
            moderation_multi_modal_input_param.py
            moderation_text_input_param.py
            other_file_chunking_strategy_object.py
            static_file_chunking_strategy.py
            static_file_chunking_strategy_object.py
            static_file_chunking_strategy_object_param.py
            static_file_chunking_strategy_param.py
            upload.py
            upload_complete_params.py
            upload_create_params.py
            vector_store.py
            vector_store_create_params.py
            vector_store_deleted.py
            vector_store_list_params.py
            vector_store_search_params.py
            vector_store_search_response.py
            vector_store_update_params.py
            websocket_connection_options.py
            __init__.py
            audio/
              speech_create_params.py
              speech_model.py
              transcription.py
              transcription_create_params.py
              transcription_create_response.py
              transcription_include.py
              transcription_segment.py
              transcription_stream_event.py
              transcription_text_delta_event.py
              transcription_text_done_event.py
              transcription_verbose.py
              transcription_word.py
              translation.py
              translation_create_params.py
              translation_create_response.py
              translation_verbose.py
              __init__.py
              __pycache__/
                speech_create_params.cpython-312.pyc
                speech_model.cpython-312.pyc
                transcription.cpython-312.pyc
                transcription_create_params.cpython-312.pyc
                transcription_create_response.cpython-312.pyc
                transcription_include.cpython-312.pyc
                transcription_segment.cpython-312.pyc
                transcription_stream_event.cpython-312.pyc
                transcription_text_delta_event.cpython-312.pyc
                transcription_text_done_event.cpython-312.pyc
                transcription_verbose.cpython-312.pyc
                transcription_word.cpython-312.pyc
                translation.cpython-312.pyc
                translation_create_params.cpython-312.pyc
                translation_create_response.cpython-312.pyc
                translation_verbose.cpython-312.pyc
                __init__.cpython-312.pyc
            beta/
              assistant.py
              assistant_create_params.py
              assistant_deleted.py
              assistant_list_params.py
              assistant_response_format_option.py
              assistant_response_format_option_param.py
              assistant_stream_event.py
              assistant_tool.py
              assistant_tool_choice.py
              assistant_tool_choice_function.py
              assistant_tool_choice_function_param.py
              assistant_tool_choice_option.py
              assistant_tool_choice_option_param.py
              assistant_tool_choice_param.py
              assistant_tool_param.py
              assistant_update_params.py
              code_interpreter_tool.py
              code_interpreter_tool_param.py
              file_search_tool.py
              file_search_tool_param.py
              function_tool.py
              function_tool_param.py
              thread.py
              thread_create_and_run_params.py
              thread_create_params.py
              thread_deleted.py
              thread_update_params.py
              __init__.py
              chat/
                __init__.py
                __pycache__/
                  __init__.cpython-312.pyc
              realtime/
                conversation_created_event.py
                conversation_item.py
                conversation_item_content.py
                conversation_item_content_param.py
                conversation_item_created_event.py
                conversation_item_create_event.py
                conversation_item_create_event_param.py
                conversation_item_deleted_event.py
                conversation_item_delete_event.py
                conversation_item_delete_event_param.py
                conversation_item_input_audio_transcription_completed_event.py
                conversation_item_input_audio_transcription_delta_event.py
                conversation_item_input_audio_transcription_failed_event.py
                conversation_item_param.py
                conversation_item_retrieve_event.py
                conversation_item_retrieve_event_param.py
                conversation_item_truncated_event.py
                conversation_item_truncate_event.py
                conversation_item_truncate_event_param.py
                conversation_item_with_reference.py
                conversation_item_with_reference_param.py
                error_event.py
                input_audio_buffer_append_event.py
                input_audio_buffer_append_event_param.py
                input_audio_buffer_cleared_event.py
                input_audio_buffer_clear_event.py
                input_audio_buffer_clear_event_param.py
                input_audio_buffer_committed_event.py
                input_audio_buffer_commit_event.py
                input_audio_buffer_commit_event_param.py
                input_audio_buffer_speech_started_event.py
                input_audio_buffer_speech_stopped_event.py
                rate_limits_updated_event.py
                realtime_client_event.py
                realtime_client_event_param.py
                realtime_connect_params.py
                realtime_response.py
                realtime_response_status.py
                realtime_response_usage.py
                realtime_server_event.py
                response_audio_delta_event.py
                response_audio_done_event.py
                response_audio_transcript_delta_event.py
                response_audio_transcript_done_event.py
                response_cancel_event.py
                response_cancel_event_param.py
                response_content_part_added_event.py
                response_content_part_done_event.py
                response_created_event.py
                response_create_event.py
                response_create_event_param.py
                response_done_event.py
                response_function_call_arguments_delta_event.py
                response_function_call_arguments_done_event.py
                response_output_item_added_event.py
                response_output_item_done_event.py
                response_text_delta_event.py
                response_text_done_event.py
                session.py
                session_created_event.py
                session_create_params.py
                session_create_response.py
                session_updated_event.py
                session_update_event.py
                session_update_event_param.py
                transcription_session.py
                transcription_session_create_params.py
                transcription_session_update.py
                transcription_session_updated_event.py
                transcription_session_update_param.py
                __init__.py
                __pycache__/
                  conversation_created_event.cpython-312.pyc
                  conversation_item.cpython-312.pyc
                  conversation_item_content.cpython-312.pyc
                  conversation_item_content_param.cpython-312.pyc
                  conversation_item_created_event.cpython-312.pyc
                  conversation_item_create_event.cpython-312.pyc
                  conversation_item_create_event_param.cpython-312.pyc
                  conversation_item_deleted_event.cpython-312.pyc
                  conversation_item_delete_event.cpython-312.pyc
                  conversation_item_delete_event_param.cpython-312.pyc
                  conversation_item_input_audio_transcription_completed_event.cpython-312.pyc
                  conversation_item_input_audio_transcription_delta_event.cpython-312.pyc
                  conversation_item_input_audio_transcription_failed_event.cpython-312.pyc
                  conversation_item_param.cpython-312.pyc
                  conversation_item_retrieve_event.cpython-312.pyc
                  conversation_item_retrieve_event_param.cpython-312.pyc
                  conversation_item_truncated_event.cpython-312.pyc
                  conversation_item_truncate_event.cpython-312.pyc
                  conversation_item_truncate_event_param.cpython-312.pyc
                  conversation_item_with_reference.cpython-312.pyc
                  conversation_item_with_reference_param.cpython-312.pyc
                  error_event.cpython-312.pyc
                  input_audio_buffer_append_event.cpython-312.pyc
                  input_audio_buffer_append_event_param.cpython-312.pyc
                  input_audio_buffer_cleared_event.cpython-312.pyc
                  input_audio_buffer_clear_event.cpython-312.pyc
                  input_audio_buffer_clear_event_param.cpython-312.pyc
                  input_audio_buffer_committed_event.cpython-312.pyc
                  input_audio_buffer_commit_event.cpython-312.pyc
                  input_audio_buffer_commit_event_param.cpython-312.pyc
                  input_audio_buffer_speech_started_event.cpython-312.pyc
                  input_audio_buffer_speech_stopped_event.cpython-312.pyc
                  rate_limits_updated_event.cpython-312.pyc
                  realtime_client_event.cpython-312.pyc
                  realtime_client_event_param.cpython-312.pyc
                  realtime_connect_params.cpython-312.pyc
                  realtime_response.cpython-312.pyc
                  realtime_response_status.cpython-312.pyc
                  realtime_response_usage.cpython-312.pyc
                  realtime_server_event.cpython-312.pyc
                  response_audio_delta_event.cpython-312.pyc
                  response_audio_done_event.cpython-312.pyc
                  response_audio_transcript_delta_event.cpython-312.pyc
                  response_audio_transcript_done_event.cpython-312.pyc
                  response_cancel_event.cpython-312.pyc
                  response_cancel_event_param.cpython-312.pyc
                  response_content_part_added_event.cpython-312.pyc
                  response_content_part_done_event.cpython-312.pyc
                  response_created_event.cpython-312.pyc
                  response_create_event.cpython-312.pyc
                  response_create_event_param.cpython-312.pyc
                  response_done_event.cpython-312.pyc
                  response_function_call_arguments_delta_event.cpython-312.pyc
                  response_function_call_arguments_done_event.cpython-312.pyc
                  response_output_item_added_event.cpython-312.pyc
                  response_output_item_done_event.cpython-312.pyc
                  response_text_delta_event.cpython-312.pyc
                  response_text_done_event.cpython-312.pyc
                  session.cpython-312.pyc
                  session_created_event.cpython-312.pyc
                  session_create_params.cpython-312.pyc
                  session_create_response.cpython-312.pyc
                  session_updated_event.cpython-312.pyc
                  session_update_event.cpython-312.pyc
                  session_update_event_param.cpython-312.pyc
                  transcription_session.cpython-312.pyc
                  transcription_session_create_params.cpython-312.pyc
                  transcription_session_update.cpython-312.pyc
                  transcription_session_updated_event.cpython-312.pyc
                  transcription_session_update_param.cpython-312.pyc
                  __init__.cpython-312.pyc
              threads/
                annotation.py
                annotation_delta.py
                file_citation_annotation.py
                file_citation_delta_annotation.py
                file_path_annotation.py
                file_path_delta_annotation.py
                image_file.py
                image_file_content_block.py
                image_file_content_block_param.py
                image_file_delta.py
                image_file_delta_block.py
                image_file_param.py
                image_url.py
                image_url_content_block.py
                image_url_content_block_param.py
                image_url_delta.py
                image_url_delta_block.py
                image_url_param.py
                message.py
                message_content.py
                message_content_delta.py
                message_content_part_param.py
                message_create_params.py
                message_deleted.py
                message_delta.py
                message_delta_event.py
                message_list_params.py
                message_update_params.py
                refusal_content_block.py
                refusal_delta_block.py
                required_action_function_tool_call.py
                run.py
                run_create_params.py
                run_list_params.py
                run_status.py
                run_submit_tool_outputs_params.py
                run_update_params.py
                text.py
                text_content_block.py
                text_content_block_param.py
                text_delta.py
                text_delta_block.py
                __init__.py
                runs/
                  code_interpreter_logs.py
                  code_interpreter_output_image.py
                  code_interpreter_tool_call.py
                  code_interpreter_tool_call_delta.py
                  file_search_tool_call.py
                  file_search_tool_call_delta.py
                  function_tool_call.py
                  function_tool_call_delta.py
                  message_creation_step_details.py
                  run_step.py
                  run_step_delta.py
                  run_step_delta_event.py
                  run_step_delta_message_delta.py
                  run_step_include.py
                  step_list_params.py
                  step_retrieve_params.py
                  tool_call.py
                  tool_calls_step_details.py
                  tool_call_delta.py
                  tool_call_delta_object.py
                  __init__.py
                  __pycache__/
                    code_interpreter_logs.cpython-312.pyc
                    code_interpreter_output_image.cpython-312.pyc
                    code_interpreter_tool_call.cpython-312.pyc
                    code_interpreter_tool_call_delta.cpython-312.pyc
                    file_search_tool_call.cpython-312.pyc
                    file_search_tool_call_delta.cpython-312.pyc
                    function_tool_call.cpython-312.pyc
                    function_tool_call_delta.cpython-312.pyc
                    message_creation_step_details.cpython-312.pyc
                    run_step.cpython-312.pyc
                    run_step_delta.cpython-312.pyc
                    run_step_delta_event.cpython-312.pyc
                    run_step_delta_message_delta.cpython-312.pyc
                    run_step_include.cpython-312.pyc
                    step_list_params.cpython-312.pyc
                    step_retrieve_params.cpython-312.pyc
                    tool_call.cpython-312.pyc
                    tool_calls_step_details.cpython-312.pyc
                    tool_call_delta.cpython-312.pyc
                    tool_call_delta_object.cpython-312.pyc
                    __init__.cpython-312.pyc
                __pycache__/
                  annotation.cpython-312.pyc
                  annotation_delta.cpython-312.pyc
                  file_citation_annotation.cpython-312.pyc
                  file_citation_delta_annotation.cpython-312.pyc
                  file_path_annotation.cpython-312.pyc
                  file_path_delta_annotation.cpython-312.pyc
                  image_file.cpython-312.pyc
                  image_file_content_block.cpython-312.pyc
                  image_file_content_block_param.cpython-312.pyc
                  image_file_delta.cpython-312.pyc
                  image_file_delta_block.cpython-312.pyc
                  image_file_param.cpython-312.pyc
                  image_url.cpython-312.pyc
                  image_url_content_block.cpython-312.pyc
                  image_url_content_block_param.cpython-312.pyc
                  image_url_delta.cpython-312.pyc
                  image_url_delta_block.cpython-312.pyc
                  image_url_param.cpython-312.pyc
                  message.cpython-312.pyc
                  message_content.cpython-312.pyc
                  message_content_delta.cpython-312.pyc
                  message_content_part_param.cpython-312.pyc
                  message_create_params.cpython-312.pyc
                  message_deleted.cpython-312.pyc
                  message_delta.cpython-312.pyc
                  message_delta_event.cpython-312.pyc
                  message_list_params.cpython-312.pyc
                  message_update_params.cpython-312.pyc
                  refusal_content_block.cpython-312.pyc
                  refusal_delta_block.cpython-312.pyc
                  required_action_function_tool_call.cpython-312.pyc
                  run.cpython-312.pyc
                  run_create_params.cpython-312.pyc
                  run_list_params.cpython-312.pyc
                  run_status.cpython-312.pyc
                  run_submit_tool_outputs_params.cpython-312.pyc
                  run_update_params.cpython-312.pyc
                  text.cpython-312.pyc
                  text_content_block.cpython-312.pyc
                  text_content_block_param.cpython-312.pyc
                  text_delta.cpython-312.pyc
                  text_delta_block.cpython-312.pyc
                  __init__.cpython-312.pyc
              __pycache__/
                assistant.cpython-312.pyc
                assistant_create_params.cpython-312.pyc
                assistant_deleted.cpython-312.pyc
                assistant_list_params.cpython-312.pyc
                assistant_response_format_option.cpython-312.pyc
                assistant_response_format_option_param.cpython-312.pyc
                assistant_stream_event.cpython-312.pyc
                assistant_tool.cpython-312.pyc
                assistant_tool_choice.cpython-312.pyc
                assistant_tool_choice_function.cpython-312.pyc
                assistant_tool_choice_function_param.cpython-312.pyc
                assistant_tool_choice_option.cpython-312.pyc
                assistant_tool_choice_option_param.cpython-312.pyc
                assistant_tool_choice_param.cpython-312.pyc
                assistant_tool_param.cpython-312.pyc
                assistant_update_params.cpython-312.pyc
                code_interpreter_tool.cpython-312.pyc
                code_interpreter_tool_param.cpython-312.pyc
                file_search_tool.cpython-312.pyc
                file_search_tool_param.cpython-312.pyc
                function_tool.cpython-312.pyc
                function_tool_param.cpython-312.pyc
                thread.cpython-312.pyc
                thread_create_and_run_params.cpython-312.pyc
                thread_create_params.cpython-312.pyc
                thread_deleted.cpython-312.pyc
                thread_update_params.cpython-312.pyc
                __init__.cpython-312.pyc
            chat/
              chat_completion.py
              chat_completion_assistant_message_param.py
              chat_completion_audio.py
              chat_completion_audio_param.py
              chat_completion_chunk.py
              chat_completion_content_part_image_param.py
              chat_completion_content_part_input_audio_param.py
              chat_completion_content_part_param.py
              chat_completion_content_part_refusal_param.py
              chat_completion_content_part_text_param.py
              chat_completion_deleted.py
              chat_completion_developer_message_param.py
              chat_completion_function_call_option_param.py
              chat_completion_function_message_param.py
              chat_completion_message.py
              chat_completion_message_param.py
              chat_completion_message_tool_call.py
              chat_completion_message_tool_call_param.py
              chat_completion_modality.py
              chat_completion_named_tool_choice_param.py
              chat_completion_prediction_content_param.py
              chat_completion_reasoning_effort.py
              chat_completion_role.py
              chat_completion_store_message.py
              chat_completion_stream_options_param.py
              chat_completion_system_message_param.py
              chat_completion_token_logprob.py
              chat_completion_tool_choice_option_param.py
              chat_completion_tool_message_param.py
              chat_completion_tool_param.py
              chat_completion_user_message_param.py
              completion_create_params.py
              completion_list_params.py
              completion_update_params.py
              parsed_chat_completion.py
              parsed_function_tool_call.py
              __init__.py
              completions/
                message_list_params.py
                __init__.py
                __pycache__/
                  message_list_params.cpython-312.pyc
                  __init__.cpython-312.pyc
              __pycache__/
                chat_completion.cpython-312.pyc
                chat_completion_assistant_message_param.cpython-312.pyc
                chat_completion_audio.cpython-312.pyc
                chat_completion_audio_param.cpython-312.pyc
                chat_completion_chunk.cpython-312.pyc
                chat_completion_content_part_image_param.cpython-312.pyc
                chat_completion_content_part_input_audio_param.cpython-312.pyc
                chat_completion_content_part_param.cpython-312.pyc
                chat_completion_content_part_refusal_param.cpython-312.pyc
                chat_completion_content_part_text_param.cpython-312.pyc
                chat_completion_deleted.cpython-312.pyc
                chat_completion_developer_message_param.cpython-312.pyc
                chat_completion_function_call_option_param.cpython-312.pyc
                chat_completion_function_message_param.cpython-312.pyc
                chat_completion_message.cpython-312.pyc
                chat_completion_message_param.cpython-312.pyc
                chat_completion_message_tool_call.cpython-312.pyc
                chat_completion_message_tool_call_param.cpython-312.pyc
                chat_completion_modality.cpython-312.pyc
                chat_completion_named_tool_choice_param.cpython-312.pyc
                chat_completion_prediction_content_param.cpython-312.pyc
                chat_completion_reasoning_effort.cpython-312.pyc
                chat_completion_role.cpython-312.pyc
                chat_completion_store_message.cpython-312.pyc
                chat_completion_stream_options_param.cpython-312.pyc
                chat_completion_system_message_param.cpython-312.pyc
                chat_completion_token_logprob.cpython-312.pyc
                chat_completion_tool_choice_option_param.cpython-312.pyc
                chat_completion_tool_message_param.cpython-312.pyc
                chat_completion_tool_param.cpython-312.pyc
                chat_completion_user_message_param.cpython-312.pyc
                completion_create_params.cpython-312.pyc
                completion_list_params.cpython-312.pyc
                completion_update_params.cpython-312.pyc
                parsed_chat_completion.cpython-312.pyc
                parsed_function_tool_call.cpython-312.pyc
                __init__.cpython-312.pyc
            containers/
              file_create_params.py
              file_create_response.py
              file_list_params.py
              file_list_response.py
              file_retrieve_response.py
              __init__.py
              files/
                __init__.py
                __pycache__/
                  __init__.cpython-312.pyc
              __pycache__/
                file_create_params.cpython-312.pyc
                file_create_response.cpython-312.pyc
                file_list_params.cpython-312.pyc
                file_list_response.cpython-312.pyc
                file_retrieve_response.cpython-312.pyc
                __init__.cpython-312.pyc
            evals/
              create_eval_completions_run_data_source.py
              create_eval_completions_run_data_source_param.py
              create_eval_jsonl_run_data_source.py
              create_eval_jsonl_run_data_source_param.py
              eval_api_error.py
              run_cancel_response.py
              run_create_params.py
              run_create_response.py
              run_delete_response.py
              run_list_params.py
              run_list_response.py
              run_retrieve_response.py
              __init__.py
              runs/
                output_item_list_params.py
                output_item_list_response.py
                output_item_retrieve_response.py
                __init__.py
                __pycache__/
                  output_item_list_params.cpython-312.pyc
                  output_item_list_response.cpython-312.pyc
                  output_item_retrieve_response.cpython-312.pyc
                  __init__.cpython-312.pyc
              __pycache__/
                create_eval_completions_run_data_source.cpython-312.pyc
                create_eval_completions_run_data_source_param.cpython-312.pyc
                create_eval_jsonl_run_data_source.cpython-312.pyc
                create_eval_jsonl_run_data_source_param.cpython-312.pyc
                eval_api_error.cpython-312.pyc
                run_cancel_response.cpython-312.pyc
                run_create_params.cpython-312.pyc
                run_create_response.cpython-312.pyc
                run_delete_response.cpython-312.pyc
                run_list_params.cpython-312.pyc
                run_list_response.cpython-312.pyc
                run_retrieve_response.cpython-312.pyc
                __init__.cpython-312.pyc
            fine_tuning/
              dpo_hyperparameters.py
              dpo_hyperparameters_param.py
              dpo_method.py
              dpo_method_param.py
              fine_tuning_job.py
              fine_tuning_job_event.py
              fine_tuning_job_integration.py
              fine_tuning_job_wandb_integration.py
              fine_tuning_job_wandb_integration_object.py
              job_create_params.py
              job_list_events_params.py
              job_list_params.py
              reinforcement_hyperparameters.py
              reinforcement_hyperparameters_param.py
              reinforcement_method.py
              reinforcement_method_param.py
              supervised_hyperparameters.py
              supervised_hyperparameters_param.py
              supervised_method.py
              supervised_method_param.py
              __init__.py
              alpha/
                grader_run_params.py
                grader_run_response.py
                grader_validate_params.py
                grader_validate_response.py
                __init__.py
                __pycache__/
                  grader_run_params.cpython-312.pyc
                  grader_run_response.cpython-312.pyc
                  grader_validate_params.cpython-312.pyc
                  grader_validate_response.cpython-312.pyc
                  __init__.cpython-312.pyc
              checkpoints/
                permission_create_params.py
                permission_create_response.py
                permission_delete_response.py
                permission_retrieve_params.py
                permission_retrieve_response.py
                __init__.py
                __pycache__/
                  permission_create_params.cpython-312.pyc
                  permission_create_response.cpython-312.pyc
                  permission_delete_response.cpython-312.pyc
                  permission_retrieve_params.cpython-312.pyc
                  permission_retrieve_response.cpython-312.pyc
                  __init__.cpython-312.pyc
              jobs/
                checkpoint_list_params.py
                fine_tuning_job_checkpoint.py
                __init__.py
                __pycache__/
                  checkpoint_list_params.cpython-312.pyc
                  fine_tuning_job_checkpoint.cpython-312.pyc
                  __init__.cpython-312.pyc
              __pycache__/
                dpo_hyperparameters.cpython-312.pyc
                dpo_hyperparameters_param.cpython-312.pyc
                dpo_method.cpython-312.pyc
                dpo_method_param.cpython-312.pyc
                fine_tuning_job.cpython-312.pyc
                fine_tuning_job_event.cpython-312.pyc
                fine_tuning_job_integration.cpython-312.pyc
                fine_tuning_job_wandb_integration.cpython-312.pyc
                fine_tuning_job_wandb_integration_object.cpython-312.pyc
                job_create_params.cpython-312.pyc
                job_list_events_params.cpython-312.pyc
                job_list_params.cpython-312.pyc
                reinforcement_hyperparameters.cpython-312.pyc
                reinforcement_hyperparameters_param.cpython-312.pyc
                reinforcement_method.cpython-312.pyc
                reinforcement_method_param.cpython-312.pyc
                supervised_hyperparameters.cpython-312.pyc
                supervised_hyperparameters_param.cpython-312.pyc
                supervised_method.cpython-312.pyc
                supervised_method_param.cpython-312.pyc
                __init__.cpython-312.pyc
            graders/
              label_model_grader.py
              label_model_grader_param.py
              multi_grader.py
              multi_grader_param.py
              python_grader.py
              python_grader_param.py
              score_model_grader.py
              score_model_grader_param.py
              string_check_grader.py
              string_check_grader_param.py
              text_similarity_grader.py
              text_similarity_grader_param.py
              __init__.py
              __pycache__/
                label_model_grader.cpython-312.pyc
                label_model_grader_param.cpython-312.pyc
                multi_grader.cpython-312.pyc
                multi_grader_param.cpython-312.pyc
                python_grader.cpython-312.pyc
                python_grader_param.cpython-312.pyc
                score_model_grader.cpython-312.pyc
                score_model_grader_param.cpython-312.pyc
                string_check_grader.cpython-312.pyc
                string_check_grader_param.cpython-312.pyc
                text_similarity_grader.cpython-312.pyc
                text_similarity_grader_param.cpython-312.pyc
                __init__.cpython-312.pyc
            responses/
              computer_tool.py
              computer_tool_param.py
              easy_input_message.py
              easy_input_message_param.py
              file_search_tool.py
              file_search_tool_param.py
              function_tool.py
              function_tool_param.py
              input_item_list_params.py
              parsed_response.py
              response.py
              response_audio_delta_event.py
              response_audio_done_event.py
              response_audio_transcript_delta_event.py
              response_audio_transcript_done_event.py
              response_code_interpreter_call_code_delta_event.py
              response_code_interpreter_call_code_done_event.py
              response_code_interpreter_call_completed_event.py
              response_code_interpreter_call_interpreting_event.py
              response_code_interpreter_call_in_progress_event.py
              response_code_interpreter_tool_call.py
              response_code_interpreter_tool_call_param.py
              response_completed_event.py
              response_computer_tool_call.py
              response_computer_tool_call_output_item.py
              response_computer_tool_call_output_screenshot.py
              response_computer_tool_call_output_screenshot_param.py
              response_computer_tool_call_param.py
              response_content_part_added_event.py
              response_content_part_done_event.py
              response_created_event.py
              response_create_params.py
              response_error.py
              response_error_event.py
              response_failed_event.py
              response_file_search_call_completed_event.py
              response_file_search_call_in_progress_event.py
              response_file_search_call_searching_event.py
              response_file_search_tool_call.py
              response_file_search_tool_call_param.py
              response_format_text_config.py
              response_format_text_config_param.py
              response_format_text_json_schema_config.py
              response_format_text_json_schema_config_param.py
              response_function_call_arguments_delta_event.py
              response_function_call_arguments_done_event.py
              response_function_tool_call.py
              response_function_tool_call_item.py
              response_function_tool_call_output_item.py
              response_function_tool_call_param.py
              response_function_web_search.py
              response_function_web_search_param.py
              response_image_gen_call_completed_event.py
              response_image_gen_call_generating_event.py
              response_image_gen_call_in_progress_event.py
              response_image_gen_call_partial_image_event.py
              response_includable.py
              response_incomplete_event.py
              response_input_content.py
              response_input_content_param.py
              response_input_file.py
              response_input_file_param.py
              response_input_image.py
              response_input_image_param.py
              response_input_item_param.py
              response_input_message_content_list.py
              response_input_message_content_list_param.py
              response_input_message_item.py
              response_input_param.py
              response_input_text.py
              response_input_text_param.py
              response_in_progress_event.py
              response_item.py
              response_item_list.py
              response_mcp_call_arguments_delta_event.py
              response_mcp_call_arguments_done_event.py
              response_mcp_call_completed_event.py
              response_mcp_call_failed_event.py
              response_mcp_call_in_progress_event.py
              response_mcp_list_tools_completed_event.py
              response_mcp_list_tools_failed_event.py
              response_mcp_list_tools_in_progress_event.py
              response_output_item.py
              response_output_item_added_event.py
              response_output_item_done_event.py
              response_output_message.py
              response_output_message_param.py
              response_output_refusal.py
              response_output_refusal_param.py
              response_output_text.py
              response_output_text_annotation_added_event.py
              response_output_text_param.py
              response_queued_event.py
              response_reasoning_delta_event.py
              response_reasoning_done_event.py
              response_reasoning_item.py
              response_reasoning_item_param.py
              response_reasoning_summary_delta_event.py
              response_reasoning_summary_done_event.py
              response_reasoning_summary_part_added_event.py
              response_reasoning_summary_part_done_event.py
              response_reasoning_summary_text_delta_event.py
              response_reasoning_summary_text_done_event.py
              response_refusal_delta_event.py
              response_refusal_done_event.py
              response_retrieve_params.py
              response_status.py
              response_stream_event.py
              response_text_config.py
              response_text_config_param.py
              response_text_delta_event.py
              response_text_done_event.py
              response_usage.py
              response_web_search_call_completed_event.py
              response_web_search_call_in_progress_event.py
              response_web_search_call_searching_event.py
              tool.py
              tool_choice_function.py
              tool_choice_function_param.py
              tool_choice_options.py
              tool_choice_types.py
              tool_choice_types_param.py
              tool_param.py
              web_search_tool.py
              web_search_tool_param.py
              __init__.py
              __pycache__/
                computer_tool.cpython-312.pyc
                computer_tool_param.cpython-312.pyc
                easy_input_message.cpython-312.pyc
                easy_input_message_param.cpython-312.pyc
                file_search_tool.cpython-312.pyc
                file_search_tool_param.cpython-312.pyc
                function_tool.cpython-312.pyc
                function_tool_param.cpython-312.pyc
                input_item_list_params.cpython-312.pyc
                parsed_response.cpython-312.pyc
                response.cpython-312.pyc
                response_audio_delta_event.cpython-312.pyc
                response_audio_done_event.cpython-312.pyc
                response_audio_transcript_delta_event.cpython-312.pyc
                response_audio_transcript_done_event.cpython-312.pyc
                response_code_interpreter_call_code_delta_event.cpython-312.pyc
                response_code_interpreter_call_code_done_event.cpython-312.pyc
                response_code_interpreter_call_completed_event.cpython-312.pyc
                response_code_interpreter_call_interpreting_event.cpython-312.pyc
                response_code_interpreter_call_in_progress_event.cpython-312.pyc
                response_code_interpreter_tool_call.cpython-312.pyc
                response_code_interpreter_tool_call_param.cpython-312.pyc
                response_completed_event.cpython-312.pyc
                response_computer_tool_call.cpython-312.pyc
                response_computer_tool_call_output_item.cpython-312.pyc
                response_computer_tool_call_output_screenshot.cpython-312.pyc
                response_computer_tool_call_output_screenshot_param.cpython-312.pyc
                response_computer_tool_call_param.cpython-312.pyc
                response_content_part_added_event.cpython-312.pyc
                response_content_part_done_event.cpython-312.pyc
                response_created_event.cpython-312.pyc
                response_create_params.cpython-312.pyc
                response_error.cpython-312.pyc
                response_error_event.cpython-312.pyc
                response_failed_event.cpython-312.pyc
                response_file_search_call_completed_event.cpython-312.pyc
                response_file_search_call_in_progress_event.cpython-312.pyc
                response_file_search_call_searching_event.cpython-312.pyc
                response_file_search_tool_call.cpython-312.pyc
                response_file_search_tool_call_param.cpython-312.pyc
                response_format_text_config.cpython-312.pyc
                response_format_text_config_param.cpython-312.pyc
                response_format_text_json_schema_config.cpython-312.pyc
                response_format_text_json_schema_config_param.cpython-312.pyc
                response_function_call_arguments_delta_event.cpython-312.pyc
                response_function_call_arguments_done_event.cpython-312.pyc
                response_function_tool_call.cpython-312.pyc
                response_function_tool_call_item.cpython-312.pyc
                response_function_tool_call_output_item.cpython-312.pyc
                response_function_tool_call_param.cpython-312.pyc
                response_function_web_search.cpython-312.pyc
                response_function_web_search_param.cpython-312.pyc
                response_image_gen_call_completed_event.cpython-312.pyc
                response_image_gen_call_generating_event.cpython-312.pyc
                response_image_gen_call_in_progress_event.cpython-312.pyc
                response_image_gen_call_partial_image_event.cpython-312.pyc
                response_includable.cpython-312.pyc
                response_incomplete_event.cpython-312.pyc
                response_input_content.cpython-312.pyc
                response_input_content_param.cpython-312.pyc
                response_input_file.cpython-312.pyc
                response_input_file_param.cpython-312.pyc
                response_input_image.cpython-312.pyc
                response_input_image_param.cpython-312.pyc
                response_input_item_param.cpython-312.pyc
                response_input_message_content_list.cpython-312.pyc
                response_input_message_content_list_param.cpython-312.pyc
                response_input_message_item.cpython-312.pyc
                response_input_param.cpython-312.pyc
                response_input_text.cpython-312.pyc
                response_input_text_param.cpython-312.pyc
                response_in_progress_event.cpython-312.pyc
                response_item.cpython-312.pyc
                response_item_list.cpython-312.pyc
                response_mcp_call_arguments_delta_event.cpython-312.pyc
                response_mcp_call_arguments_done_event.cpython-312.pyc
                response_mcp_call_completed_event.cpython-312.pyc
                response_mcp_call_failed_event.cpython-312.pyc
                response_mcp_call_in_progress_event.cpython-312.pyc
                response_mcp_list_tools_completed_event.cpython-312.pyc
                response_mcp_list_tools_failed_event.cpython-312.pyc
                response_mcp_list_tools_in_progress_event.cpython-312.pyc
                response_output_item.cpython-312.pyc
                response_output_item_added_event.cpython-312.pyc
                response_output_item_done_event.cpython-312.pyc
                response_output_message.cpython-312.pyc
                response_output_message_param.cpython-312.pyc
                response_output_refusal.cpython-312.pyc
                response_output_refusal_param.cpython-312.pyc
                response_output_text.cpython-312.pyc
                response_output_text_annotation_added_event.cpython-312.pyc
                response_output_text_param.cpython-312.pyc
                response_queued_event.cpython-312.pyc
                response_reasoning_delta_event.cpython-312.pyc
                response_reasoning_done_event.cpython-312.pyc
                response_reasoning_item.cpython-312.pyc
                response_reasoning_item_param.cpython-312.pyc
                response_reasoning_summary_delta_event.cpython-312.pyc
                response_reasoning_summary_done_event.cpython-312.pyc
                response_reasoning_summary_part_added_event.cpython-312.pyc
                response_reasoning_summary_part_done_event.cpython-312.pyc
                response_reasoning_summary_text_delta_event.cpython-312.pyc
                response_reasoning_summary_text_done_event.cpython-312.pyc
                response_refusal_delta_event.cpython-312.pyc
                response_refusal_done_event.cpython-312.pyc
                response_retrieve_params.cpython-312.pyc
                response_status.cpython-312.pyc
                response_stream_event.cpython-312.pyc
                response_text_config.cpython-312.pyc
                response_text_config_param.cpython-312.pyc
                response_text_delta_event.cpython-312.pyc
                response_text_done_event.cpython-312.pyc
                response_usage.cpython-312.pyc
                response_web_search_call_completed_event.cpython-312.pyc
                response_web_search_call_in_progress_event.cpython-312.pyc
                response_web_search_call_searching_event.cpython-312.pyc
                tool.cpython-312.pyc
                tool_choice_function.cpython-312.pyc
                tool_choice_function_param.cpython-312.pyc
                tool_choice_options.cpython-312.pyc
                tool_choice_types.cpython-312.pyc
                tool_choice_types_param.cpython-312.pyc
                tool_param.cpython-312.pyc
                web_search_tool.cpython-312.pyc
                web_search_tool_param.cpython-312.pyc
                __init__.cpython-312.pyc
            shared/
              all_models.py
              chat_model.py
              comparison_filter.py
              compound_filter.py
              error_object.py
              function_definition.py
              function_parameters.py
              metadata.py
              reasoning.py
              reasoning_effort.py
              responses_model.py
              response_format_json_object.py
              response_format_json_schema.py
              response_format_text.py
              __init__.py
              __pycache__/
                all_models.cpython-312.pyc
                chat_model.cpython-312.pyc
                comparison_filter.cpython-312.pyc
                compound_filter.cpython-312.pyc
                error_object.cpython-312.pyc
                function_definition.cpython-312.pyc
                function_parameters.cpython-312.pyc
                metadata.cpython-312.pyc
                reasoning.cpython-312.pyc
                reasoning_effort.cpython-312.pyc
                responses_model.cpython-312.pyc
                response_format_json_object.cpython-312.pyc
                response_format_json_schema.cpython-312.pyc
                response_format_text.cpython-312.pyc
                __init__.cpython-312.pyc
            shared_params/
              chat_model.py
              comparison_filter.py
              compound_filter.py
              function_definition.py
              function_parameters.py
              metadata.py
              reasoning.py
              reasoning_effort.py
              responses_model.py
              response_format_json_object.py
              response_format_json_schema.py
              response_format_text.py
              __init__.py
              __pycache__/
                chat_model.cpython-312.pyc
                comparison_filter.cpython-312.pyc
                compound_filter.cpython-312.pyc
                function_definition.cpython-312.pyc
                function_parameters.cpython-312.pyc
                metadata.cpython-312.pyc
                reasoning.cpython-312.pyc
                reasoning_effort.cpython-312.pyc
                responses_model.cpython-312.pyc
                response_format_json_object.cpython-312.pyc
                response_format_json_schema.cpython-312.pyc
                response_format_text.cpython-312.pyc
                __init__.cpython-312.pyc
            uploads/
              part_create_params.py
              upload_part.py
              __init__.py
              __pycache__/
                part_create_params.cpython-312.pyc
                upload_part.cpython-312.pyc
                __init__.cpython-312.pyc
            vector_stores/
              file_batch_create_params.py
              file_batch_list_files_params.py
              file_content_response.py
              file_create_params.py
              file_list_params.py
              file_update_params.py
              vector_store_file.py
              vector_store_file_batch.py
              vector_store_file_deleted.py
              __init__.py
              __pycache__/
                file_batch_create_params.cpython-312.pyc
                file_batch_list_files_params.cpython-312.pyc
                file_content_response.cpython-312.pyc
                file_create_params.cpython-312.pyc
                file_list_params.cpython-312.pyc
                file_update_params.cpython-312.pyc
                vector_store_file.cpython-312.pyc
                vector_store_file_batch.cpython-312.pyc
                vector_store_file_deleted.cpython-312.pyc
                __init__.cpython-312.pyc
            __pycache__/
              audio_model.cpython-312.pyc
              audio_response_format.cpython-312.pyc
              auto_file_chunking_strategy_param.cpython-312.pyc
              batch.cpython-312.pyc
              batch_create_params.cpython-312.pyc
              batch_error.cpython-312.pyc
              batch_list_params.cpython-312.pyc
              batch_request_counts.cpython-312.pyc
              chat_model.cpython-312.pyc
              completion.cpython-312.pyc
              completion_choice.cpython-312.pyc
              completion_create_params.cpython-312.pyc
              completion_usage.cpython-312.pyc
              container_create_params.cpython-312.pyc
              container_create_response.cpython-312.pyc
              container_list_params.cpython-312.pyc
              container_list_response.cpython-312.pyc
              container_retrieve_response.cpython-312.pyc
              create_embedding_response.cpython-312.pyc
              embedding.cpython-312.pyc
              embedding_create_params.cpython-312.pyc
              embedding_model.cpython-312.pyc
              eval_create_params.cpython-312.pyc
              eval_create_response.cpython-312.pyc
              eval_custom_data_source_config.cpython-312.pyc
              eval_delete_response.cpython-312.pyc
              eval_list_params.cpython-312.pyc
              eval_list_response.cpython-312.pyc
              eval_retrieve_response.cpython-312.pyc
              eval_stored_completions_data_source_config.cpython-312.pyc
              eval_update_params.cpython-312.pyc
              eval_update_response.cpython-312.pyc
              file_chunking_strategy.cpython-312.pyc
              file_chunking_strategy_param.cpython-312.pyc
              file_content.cpython-312.pyc
              file_create_params.cpython-312.pyc
              file_deleted.cpython-312.pyc
              file_list_params.cpython-312.pyc
              file_object.cpython-312.pyc
              file_purpose.cpython-312.pyc
              image.cpython-312.pyc
              images_response.cpython-312.pyc
              image_create_variation_params.cpython-312.pyc
              image_edit_params.cpython-312.pyc
              image_generate_params.cpython-312.pyc
              image_model.cpython-312.pyc
              model.cpython-312.pyc
              model_deleted.cpython-312.pyc
              moderation.cpython-312.pyc
              moderation_create_params.cpython-312.pyc
              moderation_create_response.cpython-312.pyc
              moderation_image_url_input_param.cpython-312.pyc
              moderation_model.cpython-312.pyc
              moderation_multi_modal_input_param.cpython-312.pyc
              moderation_text_input_param.cpython-312.pyc
              other_file_chunking_strategy_object.cpython-312.pyc
              static_file_chunking_strategy.cpython-312.pyc
              static_file_chunking_strategy_object.cpython-312.pyc
              static_file_chunking_strategy_object_param.cpython-312.pyc
              static_file_chunking_strategy_param.cpython-312.pyc
              upload.cpython-312.pyc
              upload_complete_params.cpython-312.pyc
              upload_create_params.cpython-312.pyc
              vector_store.cpython-312.pyc
              vector_store_create_params.cpython-312.pyc
              vector_store_deleted.cpython-312.pyc
              vector_store_list_params.cpython-312.pyc
              vector_store_search_params.cpython-312.pyc
              vector_store_search_response.cpython-312.pyc
              vector_store_update_params.cpython-312.pyc
              websocket_connection_options.cpython-312.pyc
              __init__.cpython-312.pyc
          _extras/
            numpy_proxy.py
            pandas_proxy.py
            sounddevice_proxy.py
            _common.py
            __init__.py
            __pycache__/
              numpy_proxy.cpython-312.pyc
              pandas_proxy.cpython-312.pyc
              sounddevice_proxy.cpython-312.pyc
              _common.cpython-312.pyc
              __init__.cpython-312.pyc
          _utils/
            _logs.py
            _proxy.py
            _reflection.py
            _resources_proxy.py
            _streams.py
            _sync.py
            _transform.py
            _typing.py
            _utils.py
            __init__.py
            __pycache__/
              _logs.cpython-312.pyc
              _proxy.cpython-312.pyc
              _reflection.cpython-312.pyc
              _resources_proxy.cpython-312.pyc
              _streams.cpython-312.pyc
              _sync.cpython-312.pyc
              _transform.cpython-312.pyc
              _typing.cpython-312.pyc
              _utils.cpython-312.pyc
              __init__.cpython-312.pyc
          __pycache__/
            pagination.cpython-312.pyc
            version.cpython-312.pyc
            _base_client.cpython-312.pyc
            _client.cpython-312.pyc
            _compat.cpython-312.pyc
            _constants.cpython-312.pyc
            _exceptions.cpython-312.pyc
            _files.cpython-312.pyc
            _legacy_response.cpython-312.pyc
            _models.cpython-312.pyc
            _module_client.cpython-312.pyc
            _qs.cpython-312.pyc
            _resource.cpython-312.pyc
            _response.cpython-312.pyc
            _streaming.cpython-312.pyc
            _types.cpython-312.pyc
            _version.cpython-312.pyc
            __init__.cpython-312.pyc
            __main__.cpython-312.pyc
        openai-1.82.1.dist-info/
          entry_points.txt
          INSTALLER
          METADATA
          RECORD
          REQUESTED
          WHEEL
          licenses/
            LICENSE
        opencv_python-4.11.0.86.dist-info/
          INSTALLER
          LICENSE-3RD-PARTY.txt
          LICENSE.txt
          METADATA
          RECORD
          REQUESTED
          top_level.txt
          WHEEL
        ordlookup/
          oleaut32.py
          ws2_32.py
          __init__.py
          __pycache__/
            oleaut32.cpython-312.pyc
            ws2_32.cpython-312.pyc
            __init__.cpython-312.pyc
        packaging/
          markers.py
          metadata.py
          py.typed
          requirements.py
          specifiers.py
          tags.py
          utils.py
          version.py
          _elffile.py
          _manylinux.py
          _musllinux.py
          _parser.py
          _structures.py
          _tokenizer.py
          __init__.py
          licenses/
            _spdx.py
            __init__.py
            __pycache__/
              _spdx.cpython-312.pyc
              __init__.cpython-312.pyc
          __pycache__/
            markers.cpython-312.pyc
            metadata.cpython-312.pyc
            requirements.cpython-312.pyc
            specifiers.cpython-312.pyc
            tags.cpython-312.pyc
            utils.cpython-312.pyc
            version.cpython-312.pyc
            _elffile.cpython-312.pyc
            _manylinux.cpython-312.pyc
            _musllinux.cpython-312.pyc
            _parser.cpython-312.pyc
            _structures.cpython-312.pyc
            _tokenizer.cpython-312.pyc
            __init__.cpython-312.pyc
        packaging-24.2.dist-info/
          INSTALLER
          LICENSE
          LICENSE.APACHE
          LICENSE.BSD
          METADATA
          RECORD
          WHEEL
        pandas/
          conftest.py
          pyproject.toml
          testing.py
          _typing.py
          _version.py
          _version_meson.py
          __init__.py
          api/
            __init__.py
            extensions/
              __init__.py
              __pycache__/
                __init__.cpython-312.pyc
            indexers/
              __init__.py
              __pycache__/
                __init__.cpython-312.pyc
            interchange/
              __init__.py
              __pycache__/
                __init__.cpython-312.pyc
            types/
              __init__.py
              __pycache__/
                __init__.cpython-312.pyc
            typing/
              __init__.py
              __pycache__/
                __init__.cpython-312.pyc
            __pycache__/
              __init__.cpython-312.pyc
          arrays/
            __init__.py
            __pycache__/
              __init__.cpython-312.pyc
          compat/
            compressors.py
            pickle_compat.py
            pyarrow.py
            _constants.py
            _optional.py
            __init__.py
            numpy/
              function.py
              __init__.py
              __pycache__/
                function.cpython-312.pyc
                __init__.cpython-312.pyc
            __pycache__/
              compressors.cpython-312.pyc
              pickle_compat.cpython-312.pyc
              pyarrow.cpython-312.pyc
              _constants.cpython-312.pyc
              _optional.cpython-312.pyc
              __init__.cpython-312.pyc
          core/
            accessor.py
            algorithms.py
            api.py
            apply.py
            arraylike.py
            base.py
            common.py
            config_init.py
            construction.py
            flags.py
            frame.py
            generic.py
            indexing.py
            missing.py
            nanops.py
            resample.py
            roperator.py
            sample.py
            series.py
            shared_docs.py
            sorting.py
            __init__.py
            arrays/
              base.py
              boolean.py
              categorical.py
              datetimelike.py
              datetimes.py
              floating.py
              integer.py
              interval.py
              masked.py
              numeric.py
              numpy_.py
              period.py
              string_.py
              string_arrow.py
              timedeltas.py
              _arrow_string_mixins.py
              _mixins.py
              _ranges.py
              _utils.py
              __init__.py
              arrow/
                accessors.py
                array.py
                extension_types.py
                _arrow_utils.py
                __init__.py
                __pycache__/
                  accessors.cpython-312.pyc
                  array.cpython-312.pyc
                  extension_types.cpython-312.pyc
                  _arrow_utils.cpython-312.pyc
                  __init__.cpython-312.pyc
              sparse/
                accessor.py
                array.py
                scipy_sparse.py
                __init__.py
                __pycache__/
                  accessor.cpython-312.pyc
                  array.cpython-312.pyc
                  scipy_sparse.cpython-312.pyc
                  __init__.cpython-312.pyc
              __pycache__/
                base.cpython-312.pyc
                boolean.cpython-312.pyc
                categorical.cpython-312.pyc
                datetimelike.cpython-312.pyc
                datetimes.cpython-312.pyc
                floating.cpython-312.pyc
                integer.cpython-312.pyc
                interval.cpython-312.pyc
                masked.cpython-312.pyc
                numeric.cpython-312.pyc
                numpy_.cpython-312.pyc
                period.cpython-312.pyc
                string_.cpython-312.pyc
                string_arrow.cpython-312.pyc
                timedeltas.cpython-312.pyc
                _arrow_string_mixins.cpython-312.pyc
                _mixins.cpython-312.pyc
                _ranges.cpython-312.pyc
                _utils.cpython-312.pyc
                __init__.cpython-312.pyc
            array_algos/
              datetimelike_accumulations.py
              masked_accumulations.py
              masked_reductions.py
              putmask.py
              quantile.py
              replace.py
              take.py
              transforms.py
              __init__.py
              __pycache__/
                datetimelike_accumulations.cpython-312.pyc
                masked_accumulations.cpython-312.pyc
                masked_reductions.cpython-312.pyc
                putmask.cpython-312.pyc
                quantile.cpython-312.pyc
                replace.cpython-312.pyc
                take.cpython-312.pyc
                transforms.cpython-312.pyc
                __init__.cpython-312.pyc
            computation/
              align.py
              api.py
              check.py
              common.py
              engines.py
              eval.py
              expr.py
              expressions.py
              ops.py
              parsing.py
              pytables.py
              scope.py
              __init__.py
              __pycache__/
                align.cpython-312.pyc
                api.cpython-312.pyc
                check.cpython-312.pyc
                common.cpython-312.pyc
                engines.cpython-312.pyc
                eval.cpython-312.pyc
                expr.cpython-312.pyc
                expressions.cpython-312.pyc
                ops.cpython-312.pyc
                parsing.cpython-312.pyc
                pytables.cpython-312.pyc
                scope.cpython-312.pyc
                __init__.cpython-312.pyc
            dtypes/
              api.py
              astype.py
              base.py
              cast.py
              common.py
              concat.py
              dtypes.py
              generic.py
              inference.py
              missing.py
              __init__.py
              __pycache__/
                api.cpython-312.pyc
                astype.cpython-312.pyc
                base.cpython-312.pyc
                cast.cpython-312.pyc
                common.cpython-312.pyc
                concat.cpython-312.pyc
                dtypes.cpython-312.pyc
                generic.cpython-312.pyc
                inference.cpython-312.pyc
                missing.cpython-312.pyc
                __init__.cpython-312.pyc
            groupby/
              base.py
              categorical.py
              generic.py
              groupby.py
              grouper.py
              indexing.py
              numba_.py
              ops.py
              __init__.py
              __pycache__/
                base.cpython-312.pyc
                categorical.cpython-312.pyc
                generic.cpython-312.pyc
                groupby.cpython-312.pyc
                grouper.cpython-312.pyc
                indexing.cpython-312.pyc
                numba_.cpython-312.pyc
                ops.cpython-312.pyc
                __init__.cpython-312.pyc
            indexers/
              objects.py
              utils.py
              __init__.py
              __pycache__/
                objects.cpython-312.pyc
                utils.cpython-312.pyc
                __init__.cpython-312.pyc
            indexes/
              accessors.py
              api.py
              base.py
              category.py
              datetimelike.py
              datetimes.py
              extension.py
              frozen.py
              interval.py
              multi.py
              period.py
              range.py
              timedeltas.py
              __init__.py
              __pycache__/
                accessors.cpython-312.pyc
                api.cpython-312.pyc
                base.cpython-312.pyc
                category.cpython-312.pyc
                datetimelike.cpython-312.pyc
                datetimes.cpython-312.pyc
                extension.cpython-312.pyc
                frozen.cpython-312.pyc
                interval.cpython-312.pyc
                multi.cpython-312.pyc
                period.cpython-312.pyc
                range.cpython-312.pyc
                timedeltas.cpython-312.pyc
                __init__.cpython-312.pyc
            interchange/
              buffer.py
              column.py
              dataframe.py
              dataframe_protocol.py
              from_dataframe.py
              utils.py
              __init__.py
              __pycache__/
                buffer.cpython-312.pyc
                column.cpython-312.pyc
                dataframe.cpython-312.pyc
                dataframe_protocol.cpython-312.pyc
                from_dataframe.cpython-312.pyc
                utils.cpython-312.pyc
                __init__.cpython-312.pyc
            internals/
              api.py
              array_manager.py
              base.py
              blocks.py
              concat.py
              construction.py
              managers.py
              ops.py
              __init__.py
              __pycache__/
                api.cpython-312.pyc
                array_manager.cpython-312.pyc
                base.cpython-312.pyc
                blocks.cpython-312.pyc
                concat.cpython-312.pyc
                construction.cpython-312.pyc
                managers.cpython-312.pyc
                ops.cpython-312.pyc
                __init__.cpython-312.pyc
            methods/
              describe.py
              selectn.py
              to_dict.py
              __init__.py
              __pycache__/
                describe.cpython-312.pyc
                selectn.cpython-312.pyc
                to_dict.cpython-312.pyc
                __init__.cpython-312.pyc
            ops/
              array_ops.py
              common.py
              dispatch.py
              docstrings.py
              invalid.py
              mask_ops.py
              missing.py
              __init__.py
              __pycache__/
                array_ops.cpython-312.pyc
                common.cpython-312.pyc
                dispatch.cpython-312.pyc
                docstrings.cpython-312.pyc
                invalid.cpython-312.pyc
                mask_ops.cpython-312.pyc
                missing.cpython-312.pyc
                __init__.cpython-312.pyc
            reshape/
              api.py
              concat.py
              encoding.py
              melt.py
              merge.py
              pivot.py
              reshape.py
              tile.py
              util.py
              __init__.py
              __pycache__/
                api.cpython-312.pyc
                concat.cpython-312.pyc
                encoding.cpython-312.pyc
                melt.cpython-312.pyc
                merge.cpython-312.pyc
                pivot.cpython-312.pyc
                reshape.cpython-312.pyc
                tile.cpython-312.pyc
                util.cpython-312.pyc
                __init__.cpython-312.pyc
            sparse/
              api.py
              __init__.py
              __pycache__/
                api.cpython-312.pyc
                __init__.cpython-312.pyc
            strings/
              accessor.py
              base.py
              object_array.py
              __init__.py
              __pycache__/
                accessor.cpython-312.pyc
                base.cpython-312.pyc
                object_array.cpython-312.pyc
                __init__.cpython-312.pyc
            tools/
              datetimes.py
              numeric.py
              timedeltas.py
              times.py
              __init__.py
              __pycache__/
                datetimes.cpython-312.pyc
                numeric.cpython-312.pyc
                timedeltas.cpython-312.pyc
                times.cpython-312.pyc
                __init__.cpython-312.pyc
            util/
              hashing.py
              numba_.py
              __init__.py
              __pycache__/
                hashing.cpython-312.pyc
                numba_.cpython-312.pyc
                __init__.cpython-312.pyc
            window/
              common.py
              doc.py
              ewm.py
              expanding.py
              numba_.py
              online.py
              rolling.py
              __init__.py
              __pycache__/
                common.cpython-312.pyc
                doc.cpython-312.pyc
                ewm.cpython-312.pyc
                expanding.cpython-312.pyc
                numba_.cpython-312.pyc
                online.cpython-312.pyc
                rolling.cpython-312.pyc
                __init__.cpython-312.pyc
            _numba/
              executor.py
              extensions.py
              __init__.py
              kernels/
                mean_.py
                min_max_.py
                shared.py
                sum_.py
                var_.py
                __init__.py
                __pycache__/
                  mean_.cpython-312.pyc
                  min_max_.cpython-312.pyc
                  shared.cpython-312.pyc
                  sum_.cpython-312.pyc
                  var_.cpython-312.pyc
                  __init__.cpython-312.pyc
              __pycache__/
                executor.cpython-312.pyc
                extensions.cpython-312.pyc
                __init__.cpython-312.pyc
            __pycache__/
              accessor.cpython-312.pyc
              algorithms.cpython-312.pyc
              api.cpython-312.pyc
              apply.cpython-312.pyc
              arraylike.cpython-312.pyc
              base.cpython-312.pyc
              common.cpython-312.pyc
              config_init.cpython-312.pyc
              construction.cpython-312.pyc
              flags.cpython-312.pyc
              frame.cpython-312.pyc
              generic.cpython-312.pyc
              indexing.cpython-312.pyc
              missing.cpython-312.pyc
              nanops.cpython-312.pyc
              resample.cpython-312.pyc
              roperator.cpython-312.pyc
              sample.cpython-312.pyc
              series.cpython-312.pyc
              shared_docs.cpython-312.pyc
              sorting.cpython-312.pyc
              __init__.cpython-312.pyc
          errors/
            __init__.py
            __pycache__/
              __init__.cpython-312.pyc
          io/
            api.py
            clipboards.py
            common.py
            feather_format.py
            gbq.py
            html.py
            orc.py
            parquet.py
            pickle.py
            pytables.py
            spss.py
            sql.py
            stata.py
            xml.py
            _util.py
            __init__.py
            clipboard/
              __init__.py
              __pycache__/
                __init__.cpython-312.pyc
            excel/
              _base.py
              _calamine.py
              _odfreader.py
              _odswriter.py
              _openpyxl.py
              _pyxlsb.py
              _util.py
              _xlrd.py
              _xlsxwriter.py
              __init__.py
              __pycache__/
                _base.cpython-312.pyc
                _calamine.cpython-312.pyc
                _odfreader.cpython-312.pyc
                _odswriter.cpython-312.pyc
                _openpyxl.cpython-312.pyc
                _pyxlsb.cpython-312.pyc
                _util.cpython-312.pyc
                _xlrd.cpython-312.pyc
                _xlsxwriter.cpython-312.pyc
                __init__.cpython-312.pyc
            formats/
              console.py
              css.py
              csvs.py
              excel.py
              format.py
              html.py
              info.py
              printing.py
              string.py
              style.py
              style_render.py
              xml.py
              _color_data.py
              __init__.py
              templates/
                html.tpl
                html_style.tpl
                html_table.tpl
                latex.tpl
                latex_longtable.tpl
                latex_table.tpl
                string.tpl
              __pycache__/
                console.cpython-312.pyc
                css.cpython-312.pyc
                csvs.cpython-312.pyc
                excel.cpython-312.pyc
                format.cpython-312.pyc
                html.cpython-312.pyc
                info.cpython-312.pyc
                printing.cpython-312.pyc
                string.cpython-312.pyc
                style.cpython-312.pyc
                style_render.cpython-312.pyc
                xml.cpython-312.pyc
                _color_data.cpython-312.pyc
                __init__.cpython-312.pyc
            json/
              _json.py
              _normalize.py
              _table_schema.py
              __init__.py
              __pycache__/
                _json.cpython-312.pyc
                _normalize.cpython-312.pyc
                _table_schema.cpython-312.pyc
                __init__.cpython-312.pyc
            parsers/
              arrow_parser_wrapper.py
              base_parser.py
              c_parser_wrapper.py
              python_parser.py
              readers.py
              __init__.py
              __pycache__/
                arrow_parser_wrapper.cpython-312.pyc
                base_parser.cpython-312.pyc
                c_parser_wrapper.cpython-312.pyc
                python_parser.cpython-312.pyc
                readers.cpython-312.pyc
                __init__.cpython-312.pyc
            sas/
              sas7bdat.py
              sasreader.py
              sas_constants.py
              sas_xport.py
              __init__.py
              __pycache__/
                sas7bdat.cpython-312.pyc
                sasreader.cpython-312.pyc
                sas_constants.cpython-312.pyc
                sas_xport.cpython-312.pyc
                __init__.cpython-312.pyc
            __pycache__/
              api.cpython-312.pyc
              clipboards.cpython-312.pyc
              common.cpython-312.pyc
              feather_format.cpython-312.pyc
              gbq.cpython-312.pyc
              html.cpython-312.pyc
              orc.cpython-312.pyc
              parquet.cpython-312.pyc
              pickle.cpython-312.pyc
              pytables.cpython-312.pyc
              spss.cpython-312.pyc
              sql.cpython-312.pyc
              stata.cpython-312.pyc
              xml.cpython-312.pyc
              _util.cpython-312.pyc
              __init__.cpython-312.pyc
          plotting/
            _core.py
            _misc.py
            __init__.py
            _matplotlib/
              boxplot.py
              converter.py
              core.py
              groupby.py
              hist.py
              misc.py
              style.py
              timeseries.py
              tools.py
              __init__.py
              __pycache__/
                boxplot.cpython-312.pyc
                converter.cpython-312.pyc
                core.cpython-312.pyc
                groupby.cpython-312.pyc
                hist.cpython-312.pyc
                misc.cpython-312.pyc
                style.cpython-312.pyc
                timeseries.cpython-312.pyc
                tools.cpython-312.pyc
                __init__.cpython-312.pyc
            __pycache__/
              _core.cpython-312.pyc
              _misc.cpython-312.pyc
              __init__.cpython-312.pyc
          tests/
            test_aggregation.py
            test_algos.py
            test_common.py
            test_downstream.py
            test_errors.py
            test_expressions.py
            test_flags.py
            test_multilevel.py
            test_nanops.py
            test_optional_dependency.py
            test_register_accessor.py
            test_sorting.py
            test_take.py
            __init__.py
            api/
              test_api.py
              test_types.py
              __init__.py
              __pycache__/
                test_api.cpython-312.pyc
                test_types.cpython-312.pyc
                __init__.cpython-312.pyc
            apply/
              common.py
              test_frame_apply.py
              test_frame_apply_relabeling.py
              test_frame_transform.py
              test_invalid_arg.py
              test_numba.py
              test_series_apply.py
              test_series_apply_relabeling.py
              test_series_transform.py
              test_str.py
              __init__.py
              __pycache__/
                common.cpython-312.pyc
                test_frame_apply.cpython-312.pyc
                test_frame_apply_relabeling.cpython-312.pyc
                test_frame_transform.cpython-312.pyc
                test_invalid_arg.cpython-312.pyc
                test_numba.cpython-312.pyc
                test_series_apply.cpython-312.pyc
                test_series_apply_relabeling.cpython-312.pyc
                test_series_transform.cpython-312.pyc
                test_str.cpython-312.pyc
                __init__.cpython-312.pyc
            arithmetic/
              common.py
              conftest.py
              test_array_ops.py
              test_categorical.py
              test_datetime64.py
              test_interval.py
              test_numeric.py
              test_object.py
              test_period.py
              test_timedelta64.py
              __init__.py
              __pycache__/
                common.cpython-312.pyc
                conftest.cpython-312.pyc
                test_array_ops.cpython-312.pyc
                test_categorical.cpython-312.pyc
                test_datetime64.cpython-312.pyc
                test_interval.cpython-312.pyc
                test_numeric.cpython-312.pyc
                test_object.cpython-312.pyc
                test_period.cpython-312.pyc
                test_timedelta64.cpython-312.pyc
                __init__.cpython-312.pyc
            arrays/
              masked_shared.py
              test_array.py
              test_datetimelike.py
              test_datetimes.py
              test_ndarray_backed.py
              test_period.py
              test_timedeltas.py
              __init__.py
              boolean/
                test_arithmetic.py
                test_astype.py
                test_comparison.py
                test_construction.py
                test_function.py
                test_indexing.py
                test_logical.py
                test_ops.py
                test_reduction.py
                test_repr.py
                __init__.py
                __pycache__/
                  test_arithmetic.cpython-312.pyc
                  test_astype.cpython-312.pyc
                  test_comparison.cpython-312.pyc
                  test_construction.cpython-312.pyc
                  test_function.cpython-312.pyc
                  test_indexing.cpython-312.pyc
                  test_logical.cpython-312.pyc
                  test_ops.cpython-312.pyc
                  test_reduction.cpython-312.pyc
                  test_repr.cpython-312.pyc
                  __init__.cpython-312.pyc
              categorical/
                test_algos.py
                test_analytics.py
                test_api.py
                test_astype.py
                test_constructors.py
                test_dtypes.py
                test_indexing.py
                test_map.py
                test_missing.py
                test_operators.py
                test_replace.py
                test_repr.py
                test_sorting.py
                test_subclass.py
                test_take.py
                test_warnings.py
                __init__.py
                __pycache__/
                  test_algos.cpython-312.pyc
                  test_analytics.cpython-312.pyc
                  test_api.cpython-312.pyc
                  test_astype.cpython-312.pyc
                  test_constructors.cpython-312.pyc
                  test_dtypes.cpython-312.pyc
                  test_indexing.cpython-312.pyc
                  test_map.cpython-312.pyc
                  test_missing.cpython-312.pyc
                  test_operators.cpython-312.pyc
                  test_replace.cpython-312.pyc
                  test_repr.cpython-312.pyc
                  test_sorting.cpython-312.pyc
                  test_subclass.cpython-312.pyc
                  test_take.cpython-312.pyc
                  test_warnings.cpython-312.pyc
                  __init__.cpython-312.pyc
              datetimes/
                test_constructors.py
                test_cumulative.py
                test_reductions.py
                __init__.py
                __pycache__/
                  test_constructors.cpython-312.pyc
                  test_cumulative.cpython-312.pyc
                  test_reductions.cpython-312.pyc
                  __init__.cpython-312.pyc
              floating/
                conftest.py
                test_arithmetic.py
                test_astype.py
                test_comparison.py
                test_concat.py
                test_construction.py
                test_contains.py
                test_function.py
                test_repr.py
                test_to_numpy.py
                __init__.py
                __pycache__/
                  conftest.cpython-312.pyc
                  test_arithmetic.cpython-312.pyc
                  test_astype.cpython-312.pyc
                  test_comparison.cpython-312.pyc
                  test_concat.cpython-312.pyc
                  test_construction.cpython-312.pyc
                  test_contains.cpython-312.pyc
                  test_function.cpython-312.pyc
                  test_repr.cpython-312.pyc
                  test_to_numpy.cpython-312.pyc
                  __init__.cpython-312.pyc
              integer/
                conftest.py
                test_arithmetic.py
                test_comparison.py
                test_concat.py
                test_construction.py
                test_dtypes.py
                test_function.py
                test_indexing.py
                test_reduction.py
                test_repr.py
                __init__.py
                __pycache__/
                  conftest.cpython-312.pyc
                  test_arithmetic.cpython-312.pyc
                  test_comparison.cpython-312.pyc
                  test_concat.cpython-312.pyc
                  test_construction.cpython-312.pyc
                  test_dtypes.cpython-312.pyc
                  test_function.cpython-312.pyc
                  test_indexing.cpython-312.pyc
                  test_reduction.cpython-312.pyc
                  test_repr.cpython-312.pyc
                  __init__.cpython-312.pyc
              interval/
                test_astype.py
                test_formats.py
                test_interval.py
                test_interval_pyarrow.py
                test_overlaps.py
                __init__.py
                __pycache__/
                  test_astype.cpython-312.pyc
                  test_formats.cpython-312.pyc
                  test_interval.cpython-312.pyc
                  test_interval_pyarrow.cpython-312.pyc
                  test_overlaps.cpython-312.pyc
                  __init__.cpython-312.pyc
              masked/
                test_arithmetic.py
                test_arrow_compat.py
                test_function.py
                test_indexing.py
                __init__.py
                __pycache__/
                  test_arithmetic.cpython-312.pyc
                  test_arrow_compat.cpython-312.pyc
                  test_function.cpython-312.pyc
                  test_indexing.cpython-312.pyc
                  __init__.cpython-312.pyc
              numpy_/
                test_indexing.py
                test_numpy.py
                __init__.py
                __pycache__/
                  test_indexing.cpython-312.pyc
                  test_numpy.cpython-312.pyc
                  __init__.cpython-312.pyc
              period/
                test_arrow_compat.py
                test_astype.py
                test_constructors.py
                test_reductions.py
                __init__.py
                __pycache__/
                  test_arrow_compat.cpython-312.pyc
                  test_astype.cpython-312.pyc
                  test_constructors.cpython-312.pyc
                  test_reductions.cpython-312.pyc
                  __init__.cpython-312.pyc
              sparse/
                test_accessor.py
                test_arithmetics.py
                test_array.py
                test_astype.py
                test_combine_concat.py
                test_constructors.py
                test_dtype.py
                test_indexing.py
                test_libsparse.py
                test_reductions.py
                test_unary.py
                __init__.py
                __pycache__/
                  test_accessor.cpython-312.pyc
                  test_arithmetics.cpython-312.pyc
                  test_array.cpython-312.pyc
                  test_astype.cpython-312.pyc
                  test_combine_concat.cpython-312.pyc
                  test_constructors.cpython-312.pyc
                  test_dtype.cpython-312.pyc
                  test_indexing.cpython-312.pyc
                  test_libsparse.cpython-312.pyc
                  test_reductions.cpython-312.pyc
                  test_unary.cpython-312.pyc
                  __init__.cpython-312.pyc
              string_/
                test_string.py
                test_string_arrow.py
                __init__.py
                __pycache__/
                  test_string.cpython-312.pyc
                  test_string_arrow.cpython-312.pyc
                  __init__.cpython-312.pyc
              timedeltas/
                test_constructors.py
                test_cumulative.py
                test_reductions.py
                __init__.py
                __pycache__/
                  test_constructors.cpython-312.pyc
                  test_cumulative.cpython-312.pyc
                  test_reductions.cpython-312.pyc
                  __init__.cpython-312.pyc
              __pycache__/
                masked_shared.cpython-312.pyc
                test_array.cpython-312.pyc
                test_datetimelike.cpython-312.pyc
                test_datetimes.cpython-312.pyc
                test_ndarray_backed.cpython-312.pyc
                test_period.cpython-312.pyc
                test_timedeltas.cpython-312.pyc
                __init__.cpython-312.pyc
            base/
              common.py
              test_constructors.py
              test_conversion.py
              test_fillna.py
              test_misc.py
              test_transpose.py
              test_unique.py
              test_value_counts.py
              __init__.py
              __pycache__/
                common.cpython-312.pyc
                test_constructors.cpython-312.pyc
                test_conversion.cpython-312.pyc
                test_fillna.cpython-312.pyc
                test_misc.cpython-312.pyc
                test_transpose.cpython-312.pyc
                test_unique.cpython-312.pyc
                test_value_counts.cpython-312.pyc
                __init__.cpython-312.pyc
            computation/
              test_compat.py
              test_eval.py
              __init__.py
              __pycache__/
                test_compat.cpython-312.pyc
                test_eval.cpython-312.pyc
                __init__.cpython-312.pyc
            config/
              test_config.py
              test_localization.py
              __init__.py
              __pycache__/
                test_config.cpython-312.pyc
                test_localization.cpython-312.pyc
                __init__.cpython-312.pyc
            construction/
              test_extract_array.py
              __init__.py
              __pycache__/
                test_extract_array.cpython-312.pyc
                __init__.cpython-312.pyc
            copy_view/
              test_array.py
              test_astype.py
              test_chained_assignment_deprecation.py
              test_clip.py
              test_constructors.py
              test_core_functionalities.py
              test_functions.py
              test_indexing.py
              test_internals.py
              test_interp_fillna.py
              test_methods.py
              test_replace.py
              test_setitem.py
              test_util.py
              util.py
              __init__.py
              index/
                test_datetimeindex.py
                test_index.py
                test_periodindex.py
                test_timedeltaindex.py
                __init__.py
                __pycache__/
                  test_datetimeindex.cpython-312.pyc
                  test_index.cpython-312.pyc
                  test_periodindex.cpython-312.pyc
                  test_timedeltaindex.cpython-312.pyc
                  __init__.cpython-312.pyc
              __pycache__/
                test_array.cpython-312.pyc
                test_astype.cpython-312.pyc
                test_chained_assignment_deprecation.cpython-312.pyc
                test_clip.cpython-312.pyc
                test_constructors.cpython-312.pyc
                test_core_functionalities.cpython-312.pyc
                test_functions.cpython-312.pyc
                test_indexing.cpython-312.pyc
                test_internals.cpython-312.pyc
                test_interp_fillna.cpython-312.pyc
                test_methods.cpython-312.pyc
                test_replace.cpython-312.pyc
                test_setitem.cpython-312.pyc
                test_util.cpython-312.pyc
                util.cpython-312.pyc
                __init__.cpython-312.pyc
            dtypes/
              test_common.py
              test_concat.py
              test_dtypes.py
              test_generic.py
              test_inference.py
              test_missing.py
              __init__.py
              cast/
                test_can_hold_element.py
                test_construct_from_scalar.py
                test_construct_ndarray.py
                test_construct_object_arr.py
                test_dict_compat.py
                test_downcast.py
                test_find_common_type.py
                test_infer_datetimelike.py
                test_infer_dtype.py
                test_maybe_box_native.py
                test_promote.py
                __init__.py
                __pycache__/
                  test_can_hold_element.cpython-312.pyc
                  test_construct_from_scalar.cpython-312.pyc
                  test_construct_ndarray.cpython-312.pyc
                  test_construct_object_arr.cpython-312.pyc
                  test_dict_compat.cpython-312.pyc
                  test_downcast.cpython-312.pyc
                  test_find_common_type.cpython-312.pyc
                  test_infer_datetimelike.cpython-312.pyc
                  test_infer_dtype.cpython-312.pyc
                  test_maybe_box_native.cpython-312.pyc
                  test_promote.cpython-312.pyc
                  __init__.cpython-312.pyc
              __pycache__/
                test_common.cpython-312.pyc
                test_concat.cpython-312.pyc
                test_dtypes.cpython-312.pyc
                test_generic.cpython-312.pyc
                test_inference.cpython-312.pyc
                test_missing.cpython-312.pyc
                __init__.cpython-312.pyc
            extension/
              conftest.py
              test_arrow.py
              test_categorical.py
              test_common.py
              test_datetime.py
              test_extension.py
              test_interval.py
              test_masked.py
              test_numpy.py
              test_period.py
              test_sparse.py
              test_string.py
              __init__.py
              array_with_attr/
                array.py
                test_array_with_attr.py
                __init__.py
                __pycache__/
                  array.cpython-312.pyc
                  test_array_with_attr.cpython-312.pyc
                  __init__.cpython-312.pyc
              base/
                accumulate.py
                base.py
                casting.py
                constructors.py
                dim2.py
                dtype.py
                getitem.py
                groupby.py
                index.py
                interface.py
                io.py
                methods.py
                missing.py
                ops.py
                printing.py
                reduce.py
                reshaping.py
                setitem.py
                __init__.py
                __pycache__/
                  accumulate.cpython-312.pyc
                  base.cpython-312.pyc
                  casting.cpython-312.pyc
                  constructors.cpython-312.pyc
                  dim2.cpython-312.pyc
                  dtype.cpython-312.pyc
                  getitem.cpython-312.pyc
                  groupby.cpython-312.pyc
                  index.cpython-312.pyc
                  interface.cpython-312.pyc
                  io.cpython-312.pyc
                  methods.cpython-312.pyc
                  missing.cpython-312.pyc
                  ops.cpython-312.pyc
                  printing.cpython-312.pyc
                  reduce.cpython-312.pyc
                  reshaping.cpython-312.pyc
                  setitem.cpython-312.pyc
                  __init__.cpython-312.pyc
              date/
                array.py
                __init__.py
                __pycache__/
                  array.cpython-312.pyc
                  __init__.cpython-312.pyc
              decimal/
                array.py
                test_decimal.py
                __init__.py
                __pycache__/
                  array.cpython-312.pyc
                  test_decimal.cpython-312.pyc
                  __init__.cpython-312.pyc
              json/
                array.py
                test_json.py
                __init__.py
                __pycache__/
                  array.cpython-312.pyc
                  test_json.cpython-312.pyc
                  __init__.cpython-312.pyc
              list/
                array.py
                test_list.py
                __init__.py
                __pycache__/
                  array.cpython-312.pyc
                  test_list.cpython-312.pyc
                  __init__.cpython-312.pyc
              __pycache__/
                conftest.cpython-312.pyc
                test_arrow.cpython-312.pyc
                test_categorical.cpython-312.pyc
                test_common.cpython-312.pyc
                test_datetime.cpython-312.pyc
                test_extension.cpython-312.pyc
                test_interval.cpython-312.pyc
                test_masked.cpython-312.pyc
                test_numpy.cpython-312.pyc
                test_period.cpython-312.pyc
                test_sparse.cpython-312.pyc
                test_string.cpython-312.pyc
                __init__.cpython-312.pyc
            frame/
              common.py
              conftest.py
              test_alter_axes.py
              test_api.py
              test_arithmetic.py
              test_arrow_interface.py
              test_block_internals.py
              test_constructors.py
              test_cumulative.py
              test_iteration.py
              test_logical_ops.py
              test_nonunique_indexes.py
              test_npfuncs.py
              test_query_eval.py
              test_reductions.py
              test_repr.py
              test_stack_unstack.py
              test_subclass.py
              test_ufunc.py
              test_unary.py
              test_validate.py
              __init__.py
              constructors/
                test_from_dict.py
                test_from_records.py
                __init__.py
                __pycache__/
                  test_from_dict.cpython-312.pyc
                  test_from_records.cpython-312.pyc
                  __init__.cpython-312.pyc
              indexing/
                test_coercion.py
                test_delitem.py
                test_get.py
                test_getitem.py
                test_get_value.py
                test_indexing.py
                test_insert.py
                test_mask.py
                test_setitem.py
                test_set_value.py
                test_take.py
                test_where.py
                test_xs.py
                __init__.py
                __pycache__/
                  test_coercion.cpython-312.pyc
                  test_delitem.cpython-312.pyc
                  test_get.cpython-312.pyc
                  test_getitem.cpython-312.pyc
                  test_get_value.cpython-312.pyc
                  test_indexing.cpython-312.pyc
                  test_insert.cpython-312.pyc
                  test_mask.cpython-312.pyc
                  test_setitem.cpython-312.pyc
                  test_set_value.cpython-312.pyc
                  test_take.cpython-312.pyc
                  test_where.cpython-312.pyc
                  test_xs.cpython-312.pyc
                  __init__.cpython-312.pyc
              methods/
                test_add_prefix_suffix.py
                test_align.py
                test_asfreq.py
                test_asof.py
                test_assign.py
                test_astype.py
                test_at_time.py
                test_between_time.py
                test_clip.py
                test_combine.py
                test_combine_first.py
                test_compare.py
                test_convert_dtypes.py
                test_copy.py
                test_count.py
                test_cov_corr.py
                test_describe.py
                test_diff.py
                test_dot.py
                test_drop.py
                test_droplevel.py
                test_dropna.py
                test_drop_duplicates.py
                test_dtypes.py
                test_duplicated.py
                test_equals.py
                test_explode.py
                test_fillna.py
                test_filter.py
                test_first_and_last.py
                test_first_valid_index.py
                test_get_numeric_data.py
                test_head_tail.py
                test_infer_objects.py
                test_info.py
                test_interpolate.py
                test_isetitem.py
                test_isin.py
                test_is_homogeneous_dtype.py
                test_iterrows.py
                test_join.py
                test_map.py
                test_matmul.py
                test_nlargest.py
                test_pct_change.py
                test_pipe.py
                test_pop.py
                test_quantile.py
                test_rank.py
                test_reindex.py
                test_reindex_like.py
                test_rename.py
                test_rename_axis.py
                test_reorder_levels.py
                test_replace.py
                test_reset_index.py
                test_round.py
                test_sample.py
                test_select_dtypes.py
                test_set_axis.py
                test_set_index.py
                test_shift.py
                test_size.py
                test_sort_index.py
                test_sort_values.py
                test_swapaxes.py
                test_swaplevel.py
                test_to_csv.py
                test_to_dict.py
                test_to_dict_of_blocks.py
                test_to_numpy.py
                test_to_period.py
                test_to_records.py
                test_to_timestamp.py
                test_transpose.py
                test_truncate.py
                test_tz_convert.py
                test_tz_localize.py
                test_update.py
                test_values.py
                test_value_counts.py
                __init__.py
                __pycache__/
                  test_add_prefix_suffix.cpython-312.pyc
                  test_align.cpython-312.pyc
                  test_asfreq.cpython-312.pyc
                  test_asof.cpython-312.pyc
                  test_assign.cpython-312.pyc
                  test_astype.cpython-312.pyc
                  test_at_time.cpython-312.pyc
                  test_between_time.cpython-312.pyc
                  test_clip.cpython-312.pyc
                  test_combine.cpython-312.pyc
                  test_combine_first.cpython-312.pyc
                  test_compare.cpython-312.pyc
                  test_convert_dtypes.cpython-312.pyc
                  test_copy.cpython-312.pyc
                  test_count.cpython-312.pyc
                  test_cov_corr.cpython-312.pyc
                  test_describe.cpython-312.pyc
                  test_diff.cpython-312.pyc
                  test_dot.cpython-312.pyc
                  test_drop.cpython-312.pyc
                  test_droplevel.cpython-312.pyc
                  test_dropna.cpython-312.pyc
                  test_drop_duplicates.cpython-312.pyc
                  test_dtypes.cpython-312.pyc
                  test_duplicated.cpython-312.pyc
                  test_equals.cpython-312.pyc
                  test_explode.cpython-312.pyc
                  test_fillna.cpython-312.pyc
                  test_filter.cpython-312.pyc
                  test_first_and_last.cpython-312.pyc
                  test_first_valid_index.cpython-312.pyc
                  test_get_numeric_data.cpython-312.pyc
                  test_head_tail.cpython-312.pyc
                  test_infer_objects.cpython-312.pyc
                  test_info.cpython-312.pyc
                  test_interpolate.cpython-312.pyc
                  test_isetitem.cpython-312.pyc
                  test_isin.cpython-312.pyc
                  test_is_homogeneous_dtype.cpython-312.pyc
                  test_iterrows.cpython-312.pyc
                  test_join.cpython-312.pyc
                  test_map.cpython-312.pyc
                  test_matmul.cpython-312.pyc
                  test_nlargest.cpython-312.pyc
                  test_pct_change.cpython-312.pyc
                  test_pipe.cpython-312.pyc
                  test_pop.cpython-312.pyc
                  test_quantile.cpython-312.pyc
                  test_rank.cpython-312.pyc
                  test_reindex.cpython-312.pyc
                  test_reindex_like.cpython-312.pyc
                  test_rename.cpython-312.pyc
                  test_rename_axis.cpython-312.pyc
                  test_reorder_levels.cpython-312.pyc
                  test_replace.cpython-312.pyc
                  test_reset_index.cpython-312.pyc
                  test_round.cpython-312.pyc
                  test_sample.cpython-312.pyc
                  test_select_dtypes.cpython-312.pyc
                  test_set_axis.cpython-312.pyc
                  test_set_index.cpython-312.pyc
                  test_shift.cpython-312.pyc
                  test_size.cpython-312.pyc
                  test_sort_index.cpython-312.pyc
                  test_sort_values.cpython-312.pyc
                  test_swapaxes.cpython-312.pyc
                  test_swaplevel.cpython-312.pyc
                  test_to_csv.cpython-312.pyc
                  test_to_dict.cpython-312.pyc
                  test_to_dict_of_blocks.cpython-312.pyc
                  test_to_numpy.cpython-312.pyc
                  test_to_period.cpython-312.pyc
                  test_to_records.cpython-312.pyc
                  test_to_timestamp.cpython-312.pyc
                  test_transpose.cpython-312.pyc
                  test_truncate.cpython-312.pyc
                  test_tz_convert.cpython-312.pyc
                  test_tz_localize.cpython-312.pyc
                  test_update.cpython-312.pyc
                  test_values.cpython-312.pyc
                  test_value_counts.cpython-312.pyc
                  __init__.cpython-312.pyc
              __pycache__/
                common.cpython-312.pyc
                conftest.cpython-312.pyc
                test_alter_axes.cpython-312.pyc
                test_api.cpython-312.pyc
                test_arithmetic.cpython-312.pyc
                test_arrow_interface.cpython-312.pyc
                test_block_internals.cpython-312.pyc
                test_constructors.cpython-312.pyc
                test_cumulative.cpython-312.pyc
                test_iteration.cpython-312.pyc
                test_logical_ops.cpython-312.pyc
                test_nonunique_indexes.cpython-312.pyc
                test_npfuncs.cpython-312.pyc
                test_query_eval.cpython-312.pyc
                test_reductions.cpython-312.pyc
                test_repr.cpython-312.pyc
                test_stack_unstack.cpython-312.pyc
                test_subclass.cpython-312.pyc
                test_ufunc.cpython-312.pyc
                test_unary.cpython-312.pyc
                test_validate.cpython-312.pyc
                __init__.cpython-312.pyc
            generic/
              test_duplicate_labels.py
              test_finalize.py
              test_frame.py
              test_generic.py
              test_label_or_level_utils.py
              test_series.py
              test_to_xarray.py
              __init__.py
              __pycache__/
                test_duplicate_labels.cpython-312.pyc
                test_finalize.cpython-312.pyc
                test_frame.cpython-312.pyc
                test_generic.cpython-312.pyc
                test_label_or_level_utils.cpython-312.pyc
                test_series.cpython-312.pyc
                test_to_xarray.cpython-312.pyc
                __init__.cpython-312.pyc
            groupby/
              conftest.py
              test_all_methods.py
              test_api.py
              test_apply.py
              test_apply_mutate.py
              test_bin_groupby.py
              test_categorical.py
              test_counting.py
              test_cumulative.py
              test_filters.py
              test_groupby.py
              test_groupby_dropna.py
              test_groupby_subclass.py
              test_grouping.py
              test_indexing.py
              test_index_as_string.py
              test_libgroupby.py
              test_missing.py
              test_numba.py
              test_numeric_only.py
              test_pipe.py
              test_raises.py
              test_reductions.py
              test_timegrouper.py
              __init__.py
              aggregate/
                test_aggregate.py
                test_cython.py
                test_numba.py
                test_other.py
                __init__.py
                __pycache__/
                  test_aggregate.cpython-312.pyc
                  test_cython.cpython-312.pyc
                  test_numba.cpython-312.pyc
                  test_other.cpython-312.pyc
                  __init__.cpython-312.pyc
              methods/
                test_corrwith.py
                test_describe.py
                test_groupby_shift_diff.py
                test_is_monotonic.py
                test_nlargest_nsmallest.py
                test_nth.py
                test_quantile.py
                test_rank.py
                test_sample.py
                test_size.py
                test_skew.py
                test_value_counts.py
                __init__.py
                __pycache__/
                  test_corrwith.cpython-312.pyc
                  test_describe.cpython-312.pyc
                  test_groupby_shift_diff.cpython-312.pyc
                  test_is_monotonic.cpython-312.pyc
                  test_nlargest_nsmallest.cpython-312.pyc
                  test_nth.cpython-312.pyc
                  test_quantile.cpython-312.pyc
                  test_rank.cpython-312.pyc
                  test_sample.cpython-312.pyc
                  test_size.cpython-312.pyc
                  test_skew.cpython-312.pyc
                  test_value_counts.cpython-312.pyc
                  __init__.cpython-312.pyc
              transform/
                test_numba.py
                test_transform.py
                __init__.py
                __pycache__/
                  test_numba.cpython-312.pyc
                  test_transform.cpython-312.pyc
                  __init__.cpython-312.pyc
              __pycache__/
                conftest.cpython-312.pyc
                test_all_methods.cpython-312.pyc
                test_api.cpython-312.pyc
                test_apply.cpython-312.pyc
                test_apply_mutate.cpython-312.pyc
                test_bin_groupby.cpython-312.pyc
                test_categorical.cpython-312.pyc
                test_counting.cpython-312.pyc
                test_cumulative.cpython-312.pyc
                test_filters.cpython-312.pyc
                test_groupby.cpython-312.pyc
                test_groupby_dropna.cpython-312.pyc
                test_groupby_subclass.cpython-312.pyc
                test_grouping.cpython-312.pyc
                test_indexing.cpython-312.pyc
                test_index_as_string.cpython-312.pyc
                test_libgroupby.cpython-312.pyc
                test_missing.cpython-312.pyc
                test_numba.cpython-312.pyc
                test_numeric_only.cpython-312.pyc
                test_pipe.cpython-312.pyc
                test_raises.cpython-312.pyc
                test_reductions.cpython-312.pyc
                test_timegrouper.cpython-312.pyc
                __init__.cpython-312.pyc
            indexes/
              conftest.py
              test_any_index.py
              test_base.py
              test_common.py
              test_datetimelike.py
              test_engines.py
              test_frozen.py
              test_indexing.py
              test_index_new.py
              test_numpy_compat.py
              test_old_base.py
              test_setops.py
              test_subclass.py
              __init__.py
              base_class/
                test_constructors.py
                test_formats.py
                test_indexing.py
                test_pickle.py
                test_reshape.py
                test_setops.py
                test_where.py
                __init__.py
                __pycache__/
                  test_constructors.cpython-312.pyc
                  test_formats.cpython-312.pyc
                  test_indexing.cpython-312.pyc
                  test_pickle.cpython-312.pyc
                  test_reshape.cpython-312.pyc
                  test_setops.cpython-312.pyc
                  test_where.cpython-312.pyc
                  __init__.cpython-312.pyc
              categorical/
                test_append.py
                test_astype.py
                test_category.py
                test_constructors.py
                test_equals.py
                test_fillna.py
                test_formats.py
                test_indexing.py
                test_map.py
                test_reindex.py
                test_setops.py
                __init__.py
                __pycache__/
                  test_append.cpython-312.pyc
                  test_astype.cpython-312.pyc
                  test_category.cpython-312.pyc
                  test_constructors.cpython-312.pyc
                  test_equals.cpython-312.pyc
                  test_fillna.cpython-312.pyc
                  test_formats.cpython-312.pyc
                  test_indexing.cpython-312.pyc
                  test_map.cpython-312.pyc
                  test_reindex.cpython-312.pyc
                  test_setops.cpython-312.pyc
                  __init__.cpython-312.pyc
              datetimelike_/
                test_drop_duplicates.py
                test_equals.py
                test_indexing.py
                test_is_monotonic.py
                test_nat.py
                test_sort_values.py
                test_value_counts.py
                __init__.py
                __pycache__/
                  test_drop_duplicates.cpython-312.pyc
                  test_equals.cpython-312.pyc
                  test_indexing.cpython-312.pyc
                  test_is_monotonic.cpython-312.pyc
                  test_nat.cpython-312.pyc
                  test_sort_values.cpython-312.pyc
                  test_value_counts.cpython-312.pyc
                  __init__.cpython-312.pyc
              datetimes/
                test_arithmetic.py
                test_constructors.py
                test_datetime.py
                test_date_range.py
                test_formats.py
                test_freq_attr.py
                test_indexing.py
                test_iter.py
                test_join.py
                test_npfuncs.py
                test_ops.py
                test_partial_slicing.py
                test_pickle.py
                test_reindex.py
                test_scalar_compat.py
                test_setops.py
                test_timezones.py
                __init__.py
                methods/
                  test_asof.py
                  test_astype.py
                  test_delete.py
                  test_factorize.py
                  test_fillna.py
                  test_insert.py
                  test_isocalendar.py
                  test_map.py
                  test_normalize.py
                  test_repeat.py
                  test_resolution.py
                  test_round.py
                  test_shift.py
                  test_snap.py
                  test_to_frame.py
                  test_to_julian_date.py
                  test_to_period.py
                  test_to_pydatetime.py
                  test_to_series.py
                  test_tz_convert.py
                  test_tz_localize.py
                  test_unique.py
                  __init__.py
                  __pycache__/
                    test_asof.cpython-312.pyc
                    test_astype.cpython-312.pyc
                    test_delete.cpython-312.pyc
                    test_factorize.cpython-312.pyc
                    test_fillna.cpython-312.pyc
                    test_insert.cpython-312.pyc
                    test_isocalendar.cpython-312.pyc
                    test_map.cpython-312.pyc
                    test_normalize.cpython-312.pyc
                    test_repeat.cpython-312.pyc
                    test_resolution.cpython-312.pyc
                    test_round.cpython-312.pyc
                    test_shift.cpython-312.pyc
                    test_snap.cpython-312.pyc
                    test_to_frame.cpython-312.pyc
                    test_to_julian_date.cpython-312.pyc
                    test_to_period.cpython-312.pyc
                    test_to_pydatetime.cpython-312.pyc
                    test_to_series.cpython-312.pyc
                    test_tz_convert.cpython-312.pyc
                    test_tz_localize.cpython-312.pyc
                    test_unique.cpython-312.pyc
                    __init__.cpython-312.pyc
                __pycache__/
                  test_arithmetic.cpython-312.pyc
                  test_constructors.cpython-312.pyc
                  test_datetime.cpython-312.pyc
                  test_date_range.cpython-312.pyc
                  test_formats.cpython-312.pyc
                  test_freq_attr.cpython-312.pyc
                  test_indexing.cpython-312.pyc
                  test_iter.cpython-312.pyc
                  test_join.cpython-312.pyc
                  test_npfuncs.cpython-312.pyc
                  test_ops.cpython-312.pyc
                  test_partial_slicing.cpython-312.pyc
                  test_pickle.cpython-312.pyc
                  test_reindex.cpython-312.pyc
                  test_scalar_compat.cpython-312.pyc
                  test_setops.cpython-312.pyc
                  test_timezones.cpython-312.pyc
                  __init__.cpython-312.pyc
              interval/
                test_astype.py
                test_constructors.py
                test_equals.py
                test_formats.py
                test_indexing.py
                test_interval.py
                test_interval_range.py
                test_interval_tree.py
                test_join.py
                test_pickle.py
                test_setops.py
                __init__.py
                __pycache__/
                  test_astype.cpython-312.pyc
                  test_constructors.cpython-312.pyc
                  test_equals.cpython-312.pyc
                  test_formats.cpython-312.pyc
                  test_indexing.cpython-312.pyc
                  test_interval.cpython-312.pyc
                  test_interval_range.cpython-312.pyc
                  test_interval_tree.cpython-312.pyc
                  test_join.cpython-312.pyc
                  test_pickle.cpython-312.pyc
                  test_setops.cpython-312.pyc
                  __init__.cpython-312.pyc
              multi/
                conftest.py
                test_analytics.py
                test_astype.py
                test_compat.py
                test_constructors.py
                test_conversion.py
                test_copy.py
                test_drop.py
                test_duplicates.py
                test_equivalence.py
                test_formats.py
                test_get_level_values.py
                test_get_set.py
                test_indexing.py
                test_integrity.py
                test_isin.py
                test_join.py
                test_lexsort.py
                test_missing.py
                test_monotonic.py
                test_names.py
                test_partial_indexing.py
                test_pickle.py
                test_reindex.py
                test_reshape.py
                test_setops.py
                test_sorting.py
                test_take.py
                __init__.py
                __pycache__/
                  conftest.cpython-312.pyc
                  test_analytics.cpython-312.pyc
                  test_astype.cpython-312.pyc
                  test_compat.cpython-312.pyc
                  test_constructors.cpython-312.pyc
                  test_conversion.cpython-312.pyc
                  test_copy.cpython-312.pyc
                  test_drop.cpython-312.pyc
                  test_duplicates.cpython-312.pyc
                  test_equivalence.cpython-312.pyc
                  test_formats.cpython-312.pyc
                  test_get_level_values.cpython-312.pyc
                  test_get_set.cpython-312.pyc
                  test_indexing.cpython-312.pyc
                  test_integrity.cpython-312.pyc
                  test_isin.cpython-312.pyc
                  test_join.cpython-312.pyc
                  test_lexsort.cpython-312.pyc
                  test_missing.cpython-312.pyc
                  test_monotonic.cpython-312.pyc
                  test_names.cpython-312.pyc
                  test_partial_indexing.cpython-312.pyc
                  test_pickle.cpython-312.pyc
                  test_reindex.cpython-312.pyc
                  test_reshape.cpython-312.pyc
                  test_setops.cpython-312.pyc
                  test_sorting.cpython-312.pyc
                  test_take.cpython-312.pyc
                  __init__.cpython-312.pyc
              numeric/
                test_astype.py
                test_indexing.py
                test_join.py
                test_numeric.py
                test_setops.py
                __init__.py
                __pycache__/
                  test_astype.cpython-312.pyc
                  test_indexing.cpython-312.pyc
                  test_join.cpython-312.pyc
                  test_numeric.cpython-312.pyc
                  test_setops.cpython-312.pyc
                  __init__.cpython-312.pyc
              object/
                test_astype.py
                test_indexing.py
                __init__.py
                __pycache__/
                  test_astype.cpython-312.pyc
                  test_indexing.cpython-312.pyc
                  __init__.cpython-312.pyc
              period/
                test_constructors.py
                test_formats.py
                test_freq_attr.py
                test_indexing.py
                test_join.py
                test_monotonic.py
                test_partial_slicing.py
                test_period.py
                test_period_range.py
                test_pickle.py
                test_resolution.py
                test_scalar_compat.py
                test_searchsorted.py
                test_setops.py
                test_tools.py
                __init__.py
                methods/
                  test_asfreq.py
                  test_astype.py
                  test_factorize.py
                  test_fillna.py
                  test_insert.py
                  test_is_full.py
                  test_repeat.py
                  test_shift.py
                  test_to_timestamp.py
                  __init__.py
                  __pycache__/
                    test_asfreq.cpython-312.pyc
                    test_astype.cpython-312.pyc
                    test_factorize.cpython-312.pyc
                    test_fillna.cpython-312.pyc
                    test_insert.cpython-312.pyc
                    test_is_full.cpython-312.pyc
                    test_repeat.cpython-312.pyc
                    test_shift.cpython-312.pyc
                    test_to_timestamp.cpython-312.pyc
                    __init__.cpython-312.pyc
                __pycache__/
                  test_constructors.cpython-312.pyc
                  test_formats.cpython-312.pyc
                  test_freq_attr.cpython-312.pyc
                  test_indexing.cpython-312.pyc
                  test_join.cpython-312.pyc
                  test_monotonic.cpython-312.pyc
                  test_partial_slicing.cpython-312.pyc
                  test_period.cpython-312.pyc
                  test_period_range.cpython-312.pyc
                  test_pickle.cpython-312.pyc
                  test_resolution.cpython-312.pyc
                  test_scalar_compat.cpython-312.pyc
                  test_searchsorted.cpython-312.pyc
                  test_setops.cpython-312.pyc
                  test_tools.cpython-312.pyc
                  __init__.cpython-312.pyc
              ranges/
                test_constructors.py
                test_indexing.py
                test_join.py
                test_range.py
                test_setops.py
                __init__.py
                __pycache__/
                  test_constructors.cpython-312.pyc
                  test_indexing.cpython-312.pyc
                  test_join.cpython-312.pyc
                  test_range.cpython-312.pyc
                  test_setops.cpython-312.pyc
                  __init__.cpython-312.pyc
              timedeltas/
                test_arithmetic.py
                test_constructors.py
                test_delete.py
                test_formats.py
                test_freq_attr.py
                test_indexing.py
                test_join.py
                test_ops.py
                test_pickle.py
                test_scalar_compat.py
                test_searchsorted.py
                test_setops.py
                test_timedelta.py
                test_timedelta_range.py
                __init__.py
                methods/
                  test_astype.py
                  test_factorize.py
                  test_fillna.py
                  test_insert.py
                  test_repeat.py
                  test_shift.py
                  __init__.py
                  __pycache__/
                    test_astype.cpython-312.pyc
                    test_factorize.cpython-312.pyc
                    test_fillna.cpython-312.pyc
                    test_insert.cpython-312.pyc
                    test_repeat.cpython-312.pyc
                    test_shift.cpython-312.pyc
                    __init__.cpython-312.pyc
                __pycache__/
                  test_arithmetic.cpython-312.pyc
                  test_constructors.cpython-312.pyc
                  test_delete.cpython-312.pyc
                  test_formats.cpython-312.pyc
                  test_freq_attr.cpython-312.pyc
                  test_indexing.cpython-312.pyc
                  test_join.cpython-312.pyc
                  test_ops.cpython-312.pyc
                  test_pickle.cpython-312.pyc
                  test_scalar_compat.cpython-312.pyc
                  test_searchsorted.cpython-312.pyc
                  test_setops.cpython-312.pyc
                  test_timedelta.cpython-312.pyc
                  test_timedelta_range.cpython-312.pyc
                  __init__.cpython-312.pyc
              __pycache__/
                conftest.cpython-312.pyc
                test_any_index.cpython-312.pyc
                test_base.cpython-312.pyc
                test_common.cpython-312.pyc
                test_datetimelike.cpython-312.pyc
                test_engines.cpython-312.pyc
                test_frozen.cpython-312.pyc
                test_indexing.cpython-312.pyc
                test_index_new.cpython-312.pyc
                test_numpy_compat.cpython-312.pyc
                test_old_base.cpython-312.pyc
                test_setops.cpython-312.pyc
                test_subclass.cpython-312.pyc
                __init__.cpython-312.pyc
            indexing/
              common.py
              conftest.py
              test_at.py
              test_categorical.py
              test_chaining_and_caching.py
              test_check_indexer.py
              test_coercion.py
              test_datetime.py
              test_floats.py
              test_iat.py
              test_iloc.py
              test_indexers.py
              test_indexing.py
              test_loc.py
              test_na_indexing.py
              test_partial.py
              test_scalar.py
              __init__.py
              interval/
                test_interval.py
                test_interval_new.py
                __init__.py
                __pycache__/
                  test_interval.cpython-312.pyc
                  test_interval_new.cpython-312.pyc
                  __init__.cpython-312.pyc
              multiindex/
                test_chaining_and_caching.py
                test_datetime.py
                test_getitem.py
                test_iloc.py
                test_indexing_slow.py
                test_loc.py
                test_multiindex.py
                test_partial.py
                test_setitem.py
                test_slice.py
                test_sorted.py
                __init__.py
                __pycache__/
                  test_chaining_and_caching.cpython-312.pyc
                  test_datetime.cpython-312.pyc
                  test_getitem.cpython-312.pyc
                  test_iloc.cpython-312.pyc
                  test_indexing_slow.cpython-312.pyc
                  test_loc.cpython-312.pyc
                  test_multiindex.cpython-312.pyc
                  test_partial.cpython-312.pyc
                  test_setitem.cpython-312.pyc
                  test_slice.cpython-312.pyc
                  test_sorted.cpython-312.pyc
                  __init__.cpython-312.pyc
              __pycache__/
                common.cpython-312.pyc
                conftest.cpython-312.pyc
                test_at.cpython-312.pyc
                test_categorical.cpython-312.pyc
                test_chaining_and_caching.cpython-312.pyc
                test_check_indexer.cpython-312.pyc
                test_coercion.cpython-312.pyc
                test_datetime.cpython-312.pyc
                test_floats.cpython-312.pyc
                test_iat.cpython-312.pyc
                test_iloc.cpython-312.pyc
                test_indexers.cpython-312.pyc
                test_indexing.cpython-312.pyc
                test_loc.cpython-312.pyc
                test_na_indexing.cpython-312.pyc
                test_partial.cpython-312.pyc
                test_scalar.cpython-312.pyc
                __init__.cpython-312.pyc
            interchange/
              test_impl.py
              test_spec_conformance.py
              test_utils.py
              __init__.py
              __pycache__/
                test_impl.cpython-312.pyc
                test_spec_conformance.cpython-312.pyc
                test_utils.cpython-312.pyc
                __init__.cpython-312.pyc
            internals/
              test_api.py
              test_internals.py
              test_managers.py
              __init__.py
              __pycache__/
                test_api.cpython-312.pyc
                test_internals.cpython-312.pyc
                test_managers.cpython-312.pyc
                __init__.cpython-312.pyc
            io/
              conftest.py
              generate_legacy_storage_files.py
              test_clipboard.py
              test_common.py
              test_compression.py
              test_feather.py
              test_fsspec.py
              test_gbq.py
              test_gcs.py
              test_html.py
              test_http_headers.py
              test_orc.py
              test_parquet.py
              test_pickle.py
              test_s3.py
              test_spss.py
              test_sql.py
              test_stata.py
              __init__.py
              excel/
                test_odf.py
                test_odswriter.py
                test_openpyxl.py
                test_readers.py
                test_style.py
                test_writers.py
                test_xlrd.py
                test_xlsxwriter.py
                __init__.py
                __pycache__/
                  test_odf.cpython-312.pyc
                  test_odswriter.cpython-312.pyc
                  test_openpyxl.cpython-312.pyc
                  test_readers.cpython-312.pyc
                  test_style.cpython-312.pyc
                  test_writers.cpython-312.pyc
                  test_xlrd.cpython-312.pyc
                  test_xlsxwriter.cpython-312.pyc
                  __init__.cpython-312.pyc
              formats/
                test_console.py
                test_css.py
                test_eng_formatting.py
                test_format.py
                test_ipython_compat.py
                test_printing.py
                test_to_csv.py
                test_to_excel.py
                test_to_html.py
                test_to_latex.py
                test_to_markdown.py
                test_to_string.py
                __init__.py
                style/
                  test_bar.py
                  test_exceptions.py
                  test_format.py
                  test_highlight.py
                  test_html.py
                  test_matplotlib.py
                  test_non_unique.py
                  test_style.py
                  test_tooltip.py
                  test_to_latex.py
                  test_to_string.py
                  __init__.py
                  __pycache__/
                    test_bar.cpython-312.pyc
                    test_exceptions.cpython-312.pyc
                    test_format.cpython-312.pyc
                    test_highlight.cpython-312.pyc
                    test_html.cpython-312.pyc
                    test_matplotlib.cpython-312.pyc
                    test_non_unique.cpython-312.pyc
                    test_style.cpython-312.pyc
                    test_tooltip.cpython-312.pyc
                    test_to_latex.cpython-312.pyc
                    test_to_string.cpython-312.pyc
                    __init__.cpython-312.pyc
                __pycache__/
                  test_console.cpython-312.pyc
                  test_css.cpython-312.pyc
                  test_eng_formatting.cpython-312.pyc
                  test_format.cpython-312.pyc
                  test_ipython_compat.cpython-312.pyc
                  test_printing.cpython-312.pyc
                  test_to_csv.cpython-312.pyc
                  test_to_excel.cpython-312.pyc
                  test_to_html.cpython-312.pyc
                  test_to_latex.cpython-312.pyc
                  test_to_markdown.cpython-312.pyc
                  test_to_string.cpython-312.pyc
                  __init__.cpython-312.pyc
              json/
                conftest.py
                test_compression.py
                test_deprecated_kwargs.py
                test_json_table_schema.py
                test_json_table_schema_ext_dtype.py
                test_normalize.py
                test_pandas.py
                test_readlines.py
                test_ujson.py
                __init__.py
                __pycache__/
                  conftest.cpython-312.pyc
                  test_compression.cpython-312.pyc
                  test_deprecated_kwargs.cpython-312.pyc
                  test_json_table_schema.cpython-312.pyc
                  test_json_table_schema_ext_dtype.cpython-312.pyc
                  test_normalize.cpython-312.pyc
                  test_pandas.cpython-312.pyc
                  test_readlines.cpython-312.pyc
                  test_ujson.cpython-312.pyc
                  __init__.cpython-312.pyc
              parser/
                conftest.py
                test_comment.py
                test_compression.py
                test_concatenate_chunks.py
                test_converters.py
                test_c_parser_only.py
                test_dialect.py
                test_encoding.py
                test_header.py
                test_index_col.py
                test_mangle_dupes.py
                test_multi_thread.py
                test_na_values.py
                test_network.py
                test_parse_dates.py
                test_python_parser_only.py
                test_quoting.py
                test_read_fwf.py
                test_skiprows.py
                test_textreader.py
                test_unsupported.py
                test_upcast.py
                __init__.py
                common/
                  test_chunksize.py
                  test_common_basic.py
                  test_data_list.py
                  test_decimal.py
                  test_file_buffer_url.py
                  test_float.py
                  test_index.py
                  test_inf.py
                  test_ints.py
                  test_iterator.py
                  test_read_errors.py
                  test_verbose.py
                  __init__.py
                  __pycache__/
                    test_chunksize.cpython-312.pyc
                    test_common_basic.cpython-312.pyc
                    test_data_list.cpython-312.pyc
                    test_decimal.cpython-312.pyc
                    test_file_buffer_url.cpython-312.pyc
                    test_float.cpython-312.pyc
                    test_index.cpython-312.pyc
                    test_inf.cpython-312.pyc
                    test_ints.cpython-312.pyc
                    test_iterator.cpython-312.pyc
                    test_read_errors.cpython-312.pyc
                    test_verbose.cpython-312.pyc
                    __init__.cpython-312.pyc
                dtypes/
                  test_categorical.py
                  test_dtypes_basic.py
                  test_empty.py
                  __init__.py
                  __pycache__/
                    test_categorical.cpython-312.pyc
                    test_dtypes_basic.cpython-312.pyc
                    test_empty.cpython-312.pyc
                    __init__.cpython-312.pyc
                usecols/
                  test_parse_dates.py
                  test_strings.py
                  test_usecols_basic.py
                  __init__.py
                  __pycache__/
                    test_parse_dates.cpython-312.pyc
                    test_strings.cpython-312.pyc
                    test_usecols_basic.cpython-312.pyc
                    __init__.cpython-312.pyc
                __pycache__/
                  conftest.cpython-312.pyc
                  test_comment.cpython-312.pyc
                  test_compression.cpython-312.pyc
                  test_concatenate_chunks.cpython-312.pyc
                  test_converters.cpython-312.pyc
                  test_c_parser_only.cpython-312.pyc
                  test_dialect.cpython-312.pyc
                  test_encoding.cpython-312.pyc
                  test_header.cpython-312.pyc
                  test_index_col.cpython-312.pyc
                  test_mangle_dupes.cpython-312.pyc
                  test_multi_thread.cpython-312.pyc
                  test_na_values.cpython-312.pyc
                  test_network.cpython-312.pyc
                  test_parse_dates.cpython-312.pyc
                  test_python_parser_only.cpython-312.pyc
                  test_quoting.cpython-312.pyc
                  test_read_fwf.cpython-312.pyc
                  test_skiprows.cpython-312.pyc
                  test_textreader.cpython-312.pyc
                  test_unsupported.cpython-312.pyc
                  test_upcast.cpython-312.pyc
                  __init__.cpython-312.pyc
              pytables/
                common.py
                conftest.py
                test_append.py
                test_categorical.py
                test_compat.py
                test_complex.py
                test_errors.py
                test_file_handling.py
                test_keys.py
                test_put.py
                test_pytables_missing.py
                test_read.py
                test_retain_attributes.py
                test_round_trip.py
                test_select.py
                test_store.py
                test_subclass.py
                test_timezones.py
                test_time_series.py
                __init__.py
                __pycache__/
                  common.cpython-312.pyc
                  conftest.cpython-312.pyc
                  test_append.cpython-312.pyc
                  test_categorical.cpython-312.pyc
                  test_compat.cpython-312.pyc
                  test_complex.cpython-312.pyc
                  test_errors.cpython-312.pyc
                  test_file_handling.cpython-312.pyc
                  test_keys.cpython-312.pyc
                  test_put.cpython-312.pyc
                  test_pytables_missing.cpython-312.pyc
                  test_read.cpython-312.pyc
                  test_retain_attributes.cpython-312.pyc
                  test_round_trip.cpython-312.pyc
                  test_select.cpython-312.pyc
                  test_store.cpython-312.pyc
                  test_subclass.cpython-312.pyc
                  test_timezones.cpython-312.pyc
                  test_time_series.cpython-312.pyc
                  __init__.cpython-312.pyc
              sas/
                test_byteswap.py
                test_sas.py
                test_sas7bdat.py
                test_xport.py
                __init__.py
                __pycache__/
                  test_byteswap.cpython-312.pyc
                  test_sas.cpython-312.pyc
                  test_sas7bdat.cpython-312.pyc
                  test_xport.cpython-312.pyc
                  __init__.cpython-312.pyc
              xml/
                conftest.py
                test_to_xml.py
                test_xml.py
                test_xml_dtypes.py
                __init__.py
                __pycache__/
                  conftest.cpython-312.pyc
                  test_to_xml.cpython-312.pyc
                  test_xml.cpython-312.pyc
                  test_xml_dtypes.cpython-312.pyc
                  __init__.cpython-312.pyc
              __pycache__/
                conftest.cpython-312.pyc
                generate_legacy_storage_files.cpython-312.pyc
                test_clipboard.cpython-312.pyc
                test_common.cpython-312.pyc
                test_compression.cpython-312.pyc
                test_feather.cpython-312.pyc
                test_fsspec.cpython-312.pyc
                test_gbq.cpython-312.pyc
                test_gcs.cpython-312.pyc
                test_html.cpython-312.pyc
                test_http_headers.cpython-312.pyc
                test_orc.cpython-312.pyc
                test_parquet.cpython-312.pyc
                test_pickle.cpython-312.pyc
                test_s3.cpython-312.pyc
                test_spss.cpython-312.pyc
                test_sql.cpython-312.pyc
                test_stata.cpython-312.pyc
                __init__.cpython-312.pyc
            libs/
              test_hashtable.py
              test_join.py
              test_lib.py
              test_libalgos.py
              __init__.py
              __pycache__/
                test_hashtable.cpython-312.pyc
                test_join.cpython-312.pyc
                test_lib.cpython-312.pyc
                test_libalgos.cpython-312.pyc
                __init__.cpython-312.pyc
            plotting/
              common.py
              conftest.py
              test_backend.py
              test_boxplot_method.py
              test_common.py
              test_converter.py
              test_datetimelike.py
              test_groupby.py
              test_hist_method.py
              test_misc.py
              test_series.py
              test_style.py
              __init__.py
              frame/
                test_frame.py
                test_frame_color.py
                test_frame_groupby.py
                test_frame_legend.py
                test_frame_subplots.py
                test_hist_box_by.py
                __init__.py
                __pycache__/
                  test_frame.cpython-312.pyc
                  test_frame_color.cpython-312.pyc
                  test_frame_groupby.cpython-312.pyc
                  test_frame_legend.cpython-312.pyc
                  test_frame_subplots.cpython-312.pyc
                  test_hist_box_by.cpython-312.pyc
                  __init__.cpython-312.pyc
              __pycache__/
                common.cpython-312.pyc
                conftest.cpython-312.pyc
                test_backend.cpython-312.pyc
                test_boxplot_method.cpython-312.pyc
                test_common.cpython-312.pyc
                test_converter.cpython-312.pyc
                test_datetimelike.cpython-312.pyc
                test_groupby.cpython-312.pyc
                test_hist_method.cpython-312.pyc
                test_misc.cpython-312.pyc
                test_series.cpython-312.pyc
                test_style.cpython-312.pyc
                __init__.cpython-312.pyc
            reductions/
              test_reductions.py
              test_stat_reductions.py
              __init__.py
              __pycache__/
                test_reductions.cpython-312.pyc
                test_stat_reductions.cpython-312.pyc
                __init__.cpython-312.pyc
            resample/
              conftest.py
              test_base.py
              test_datetime_index.py
              test_period_index.py
              test_resampler_grouper.py
              test_resample_api.py
              test_timedelta.py
              test_time_grouper.py
              __init__.py
              __pycache__/
                conftest.cpython-312.pyc
                test_base.cpython-312.pyc
                test_datetime_index.cpython-312.pyc
                test_period_index.cpython-312.pyc
                test_resampler_grouper.cpython-312.pyc
                test_resample_api.cpython-312.pyc
                test_timedelta.cpython-312.pyc
                test_time_grouper.cpython-312.pyc
                __init__.cpython-312.pyc
            reshape/
              test_crosstab.py
              test_cut.py
              test_from_dummies.py
              test_get_dummies.py
              test_melt.py
              test_pivot.py
              test_pivot_multilevel.py
              test_qcut.py
              test_union_categoricals.py
              test_util.py
              __init__.py
              concat/
                conftest.py
                test_append.py
                test_append_common.py
                test_categorical.py
                test_concat.py
                test_dataframe.py
                test_datetimes.py
                test_empty.py
                test_index.py
                test_invalid.py
                test_series.py
                test_sort.py
                __init__.py
                __pycache__/
                  conftest.cpython-312.pyc
                  test_append.cpython-312.pyc
                  test_append_common.cpython-312.pyc
                  test_categorical.cpython-312.pyc
                  test_concat.cpython-312.pyc
                  test_dataframe.cpython-312.pyc
                  test_datetimes.cpython-312.pyc
                  test_empty.cpython-312.pyc
                  test_index.cpython-312.pyc
                  test_invalid.cpython-312.pyc
                  test_series.cpython-312.pyc
                  test_sort.cpython-312.pyc
                  __init__.cpython-312.pyc
              merge/
                test_join.py
                test_merge.py
                test_merge_asof.py
                test_merge_cross.py
                test_merge_index_as_string.py
                test_merge_ordered.py
                test_multi.py
                __init__.py
                __pycache__/
                  test_join.cpython-312.pyc
                  test_merge.cpython-312.pyc
                  test_merge_asof.cpython-312.pyc
                  test_merge_cross.cpython-312.pyc
                  test_merge_index_as_string.cpython-312.pyc
                  test_merge_ordered.cpython-312.pyc
                  test_multi.cpython-312.pyc
                  __init__.cpython-312.pyc
              __pycache__/
                test_crosstab.cpython-312.pyc
                test_cut.cpython-312.pyc
                test_from_dummies.cpython-312.pyc
                test_get_dummies.cpython-312.pyc
                test_melt.cpython-312.pyc
                test_pivot.cpython-312.pyc
                test_pivot_multilevel.cpython-312.pyc
                test_qcut.cpython-312.pyc
                test_union_categoricals.cpython-312.pyc
                test_util.cpython-312.pyc
                __init__.cpython-312.pyc
            scalar/
              test_nat.py
              test_na_scalar.py
              __init__.py
              interval/
                test_arithmetic.py
                test_constructors.py
                test_contains.py
                test_formats.py
                test_interval.py
                test_overlaps.py
                __init__.py
                __pycache__/
                  test_arithmetic.cpython-312.pyc
                  test_constructors.cpython-312.pyc
                  test_contains.cpython-312.pyc
                  test_formats.cpython-312.pyc
                  test_interval.cpython-312.pyc
                  test_overlaps.cpython-312.pyc
                  __init__.cpython-312.pyc
              period/
                test_arithmetic.py
                test_asfreq.py
                test_period.py
                __init__.py
                __pycache__/
                  test_arithmetic.cpython-312.pyc
                  test_asfreq.cpython-312.pyc
                  test_period.cpython-312.pyc
                  __init__.cpython-312.pyc
              timedelta/
                test_arithmetic.py
                test_constructors.py
                test_formats.py
                test_timedelta.py
                __init__.py
                methods/
                  test_as_unit.py
                  test_round.py
                  __init__.py
                  __pycache__/
                    test_as_unit.cpython-312.pyc
                    test_round.cpython-312.pyc
                    __init__.cpython-312.pyc
                __pycache__/
                  test_arithmetic.cpython-312.pyc
                  test_constructors.cpython-312.pyc
                  test_formats.cpython-312.pyc
                  test_timedelta.cpython-312.pyc
                  __init__.cpython-312.pyc
              timestamp/
                test_arithmetic.py
                test_comparisons.py
                test_constructors.py
                test_formats.py
                test_timestamp.py
                test_timezones.py
                __init__.py
                methods/
                  test_as_unit.py
                  test_normalize.py
                  test_replace.py
                  test_round.py
                  test_timestamp_method.py
                  test_to_julian_date.py
                  test_to_pydatetime.py
                  test_tz_convert.py
                  test_tz_localize.py
                  __init__.py
                  __pycache__/
                    test_as_unit.cpython-312.pyc
                    test_normalize.cpython-312.pyc
                    test_replace.cpython-312.pyc
                    test_round.cpython-312.pyc
                    test_timestamp_method.cpython-312.pyc
                    test_to_julian_date.cpython-312.pyc
                    test_to_pydatetime.cpython-312.pyc
                    test_tz_convert.cpython-312.pyc
                    test_tz_localize.cpython-312.pyc
                    __init__.cpython-312.pyc
                __pycache__/
                  test_arithmetic.cpython-312.pyc
                  test_comparisons.cpython-312.pyc
                  test_constructors.cpython-312.pyc
                  test_formats.cpython-312.pyc
                  test_timestamp.cpython-312.pyc
                  test_timezones.cpython-312.pyc
                  __init__.cpython-312.pyc
              __pycache__/
                test_nat.cpython-312.pyc
                test_na_scalar.cpython-312.pyc
                __init__.cpython-312.pyc
            series/
              test_api.py
              test_arithmetic.py
              test_constructors.py
              test_cumulative.py
              test_formats.py
              test_iteration.py
              test_logical_ops.py
              test_missing.py
              test_npfuncs.py
              test_reductions.py
              test_subclass.py
              test_ufunc.py
              test_unary.py
              test_validate.py
              __init__.py
              accessors/
                test_cat_accessor.py
                test_dt_accessor.py
                test_list_accessor.py
                test_sparse_accessor.py
                test_struct_accessor.py
                test_str_accessor.py
                __init__.py
                __pycache__/
                  test_cat_accessor.cpython-312.pyc
                  test_dt_accessor.cpython-312.pyc
                  test_list_accessor.cpython-312.pyc
                  test_sparse_accessor.cpython-312.pyc
                  test_struct_accessor.cpython-312.pyc
                  test_str_accessor.cpython-312.pyc
                  __init__.cpython-312.pyc
              indexing/
                test_datetime.py
                test_delitem.py
                test_get.py
                test_getitem.py
                test_indexing.py
                test_mask.py
                test_setitem.py
                test_set_value.py
                test_take.py
                test_where.py
                test_xs.py
                __init__.py
                __pycache__/
                  test_datetime.cpython-312.pyc
                  test_delitem.cpython-312.pyc
                  test_get.cpython-312.pyc
                  test_getitem.cpython-312.pyc
                  test_indexing.cpython-312.pyc
                  test_mask.cpython-312.pyc
                  test_setitem.cpython-312.pyc
                  test_set_value.cpython-312.pyc
                  test_take.cpython-312.pyc
                  test_where.cpython-312.pyc
                  test_xs.cpython-312.pyc
                  __init__.cpython-312.pyc
              methods/
                test_add_prefix_suffix.py
                test_align.py
                test_argsort.py
                test_asof.py
                test_astype.py
                test_autocorr.py
                test_between.py
                test_case_when.py
                test_clip.py
                test_combine.py
                test_combine_first.py
                test_compare.py
                test_convert_dtypes.py
                test_copy.py
                test_count.py
                test_cov_corr.py
                test_describe.py
                test_diff.py
                test_drop.py
                test_dropna.py
                test_drop_duplicates.py
                test_dtypes.py
                test_duplicated.py
                test_equals.py
                test_explode.py
                test_fillna.py
                test_get_numeric_data.py
                test_head_tail.py
                test_infer_objects.py
                test_info.py
                test_interpolate.py
                test_isin.py
                test_isna.py
                test_is_monotonic.py
                test_is_unique.py
                test_item.py
                test_map.py
                test_matmul.py
                test_nlargest.py
                test_nunique.py
                test_pct_change.py
                test_pop.py
                test_quantile.py
                test_rank.py
                test_reindex.py
                test_reindex_like.py
                test_rename.py
                test_rename_axis.py
                test_repeat.py
                test_replace.py
                test_reset_index.py
                test_round.py
                test_searchsorted.py
                test_set_name.py
                test_size.py
                test_sort_index.py
                test_sort_values.py
                test_tolist.py
                test_to_csv.py
                test_to_dict.py
                test_to_frame.py
                test_to_numpy.py
                test_truncate.py
                test_tz_localize.py
                test_unique.py
                test_unstack.py
                test_update.py
                test_values.py
                test_value_counts.py
                test_view.py
                __init__.py
                __pycache__/
                  test_add_prefix_suffix.cpython-312.pyc
                  test_align.cpython-312.pyc
                  test_argsort.cpython-312.pyc
                  test_asof.cpython-312.pyc
                  test_astype.cpython-312.pyc
                  test_autocorr.cpython-312.pyc
                  test_between.cpython-312.pyc
                  test_case_when.cpython-312.pyc
                  test_clip.cpython-312.pyc
                  test_combine.cpython-312.pyc
                  test_combine_first.cpython-312.pyc
                  test_compare.cpython-312.pyc
                  test_convert_dtypes.cpython-312.pyc
                  test_copy.cpython-312.pyc
                  test_count.cpython-312.pyc
                  test_cov_corr.cpython-312.pyc
                  test_describe.cpython-312.pyc
                  test_diff.cpython-312.pyc
                  test_drop.cpython-312.pyc
                  test_dropna.cpython-312.pyc
                  test_drop_duplicates.cpython-312.pyc
                  test_dtypes.cpython-312.pyc
                  test_duplicated.cpython-312.pyc
                  test_equals.cpython-312.pyc
                  test_explode.cpython-312.pyc
                  test_fillna.cpython-312.pyc
                  test_get_numeric_data.cpython-312.pyc
                  test_head_tail.cpython-312.pyc
                  test_infer_objects.cpython-312.pyc
                  test_info.cpython-312.pyc
                  test_interpolate.cpython-312.pyc
                  test_isin.cpython-312.pyc
                  test_isna.cpython-312.pyc
                  test_is_monotonic.cpython-312.pyc
                  test_is_unique.cpython-312.pyc
                  test_item.cpython-312.pyc
                  test_map.cpython-312.pyc
                  test_matmul.cpython-312.pyc
                  test_nlargest.cpython-312.pyc
                  test_nunique.cpython-312.pyc
                  test_pct_change.cpython-312.pyc
                  test_pop.cpython-312.pyc
                  test_quantile.cpython-312.pyc
                  test_rank.cpython-312.pyc
                  test_reindex.cpython-312.pyc
                  test_reindex_like.cpython-312.pyc
                  test_rename.cpython-312.pyc
                  test_rename_axis.cpython-312.pyc
                  test_repeat.cpython-312.pyc
                  test_replace.cpython-312.pyc
                  test_reset_index.cpython-312.pyc
                  test_round.cpython-312.pyc
                  test_searchsorted.cpython-312.pyc
                  test_set_name.cpython-312.pyc
                  test_size.cpython-312.pyc
                  test_sort_index.cpython-312.pyc
                  test_sort_values.cpython-312.pyc
                  test_tolist.cpython-312.pyc
                  test_to_csv.cpython-312.pyc
                  test_to_dict.cpython-312.pyc
                  test_to_frame.cpython-312.pyc
                  test_to_numpy.cpython-312.pyc
                  test_truncate.cpython-312.pyc
                  test_tz_localize.cpython-312.pyc
                  test_unique.cpython-312.pyc
                  test_unstack.cpython-312.pyc
                  test_update.cpython-312.pyc
                  test_values.cpython-312.pyc
                  test_value_counts.cpython-312.pyc
                  test_view.cpython-312.pyc
                  __init__.cpython-312.pyc
              __pycache__/
                test_api.cpython-312.pyc
                test_arithmetic.cpython-312.pyc
                test_constructors.cpython-312.pyc
                test_cumulative.cpython-312.pyc
                test_formats.cpython-312.pyc
                test_iteration.cpython-312.pyc
                test_logical_ops.cpython-312.pyc
                test_missing.cpython-312.pyc
                test_npfuncs.cpython-312.pyc
                test_reductions.cpython-312.pyc
                test_subclass.cpython-312.pyc
                test_ufunc.cpython-312.pyc
                test_unary.cpython-312.pyc
                test_validate.cpython-312.pyc
                __init__.cpython-312.pyc
            strings/
              conftest.py
              test_api.py
              test_case_justify.py
              test_cat.py
              test_extract.py
              test_find_replace.py
              test_get_dummies.py
              test_split_partition.py
              test_strings.py
              test_string_array.py
              __init__.py
              __pycache__/
                conftest.cpython-312.pyc
                test_api.cpython-312.pyc
                test_case_justify.cpython-312.pyc
                test_cat.cpython-312.pyc
                test_extract.cpython-312.pyc
                test_find_replace.cpython-312.pyc
                test_get_dummies.cpython-312.pyc
                test_split_partition.cpython-312.pyc
                test_strings.cpython-312.pyc
                test_string_array.cpython-312.pyc
                __init__.cpython-312.pyc
            tools/
              test_to_datetime.py
              test_to_numeric.py
              test_to_time.py
              test_to_timedelta.py
              __init__.py
              __pycache__/
                test_to_datetime.cpython-312.pyc
                test_to_numeric.cpython-312.pyc
                test_to_time.cpython-312.pyc
                test_to_timedelta.cpython-312.pyc
                __init__.cpython-312.pyc
            tseries/
              __init__.py
              frequencies/
                test_frequencies.py
                test_freq_code.py
                test_inference.py
                __init__.py
                __pycache__/
                  test_frequencies.cpython-312.pyc
                  test_freq_code.cpython-312.pyc
                  test_inference.cpython-312.pyc
                  __init__.cpython-312.pyc
              holiday/
                test_calendar.py
                test_federal.py
                test_holiday.py
                test_observance.py
                __init__.py
                __pycache__/
                  test_calendar.cpython-312.pyc
                  test_federal.cpython-312.pyc
                  test_holiday.cpython-312.pyc
                  test_observance.cpython-312.pyc
                  __init__.cpython-312.pyc
              offsets/
                common.py
                test_business_day.py
                test_business_hour.py
                test_business_month.py
                test_business_quarter.py
                test_business_year.py
                test_common.py
                test_custom_business_day.py
                test_custom_business_hour.py
                test_custom_business_month.py
                test_dst.py
                test_easter.py
                test_fiscal.py
                test_index.py
                test_month.py
                test_offsets.py
                test_offsets_properties.py
                test_quarter.py
                test_ticks.py
                test_week.py
                test_year.py
                __init__.py
                __pycache__/
                  common.cpython-312.pyc
                  test_business_day.cpython-312.pyc
                  test_business_hour.cpython-312.pyc
                  test_business_month.cpython-312.pyc
                  test_business_quarter.cpython-312.pyc
                  test_business_year.cpython-312.pyc
                  test_common.cpython-312.pyc
                  test_custom_business_day.cpython-312.pyc
                  test_custom_business_hour.cpython-312.pyc
                  test_custom_business_month.cpython-312.pyc
                  test_dst.cpython-312.pyc
                  test_easter.cpython-312.pyc
                  test_fiscal.cpython-312.pyc
                  test_index.cpython-312.pyc
                  test_month.cpython-312.pyc
                  test_offsets.cpython-312.pyc
                  test_offsets_properties.cpython-312.pyc
                  test_quarter.cpython-312.pyc
                  test_ticks.cpython-312.pyc
                  test_week.cpython-312.pyc
                  test_year.cpython-312.pyc
                  __init__.cpython-312.pyc
              __pycache__/
                __init__.cpython-312.pyc
            tslibs/
              test_api.py
              test_array_to_datetime.py
              test_ccalendar.py
              test_conversion.py
              test_fields.py
              test_libfrequencies.py
              test_liboffsets.py
              test_npy_units.py
              test_np_datetime.py
              test_parse_iso8601.py
              test_parsing.py
              test_period.py
              test_resolution.py
              test_strptime.py
              test_timedeltas.py
              test_timezones.py
              test_to_offset.py
              test_tzconversion.py
              __init__.py
              __pycache__/
                test_api.cpython-312.pyc
                test_array_to_datetime.cpython-312.pyc
                test_ccalendar.cpython-312.pyc
                test_conversion.cpython-312.pyc
                test_fields.cpython-312.pyc
                test_libfrequencies.cpython-312.pyc
                test_liboffsets.cpython-312.pyc
                test_npy_units.cpython-312.pyc
                test_np_datetime.cpython-312.pyc
                test_parse_iso8601.cpython-312.pyc
                test_parsing.cpython-312.pyc
                test_period.cpython-312.pyc
                test_resolution.cpython-312.pyc
                test_strptime.cpython-312.pyc
                test_timedeltas.cpython-312.pyc
                test_timezones.cpython-312.pyc
                test_to_offset.cpython-312.pyc
                test_tzconversion.cpython-312.pyc
                __init__.cpython-312.pyc
            util/
              conftest.py
              test_assert_almost_equal.py
              test_assert_attr_equal.py
              test_assert_categorical_equal.py
              test_assert_extension_array_equal.py
              test_assert_frame_equal.py
              test_assert_index_equal.py
              test_assert_interval_array_equal.py
              test_assert_numpy_array_equal.py
              test_assert_produces_warning.py
              test_assert_series_equal.py
              test_deprecate.py
              test_deprecate_kwarg.py
              test_deprecate_nonkeyword_arguments.py
              test_doc.py
              test_hashing.py
              test_numba.py
              test_rewrite_warning.py
              test_shares_memory.py
              test_show_versions.py
              test_util.py
              test_validate_args.py
              test_validate_args_and_kwargs.py
              test_validate_inclusive.py
              test_validate_kwargs.py
              __init__.py
              __pycache__/
                conftest.cpython-312.pyc
                test_assert_almost_equal.cpython-312.pyc
                test_assert_attr_equal.cpython-312.pyc
                test_assert_categorical_equal.cpython-312.pyc
                test_assert_extension_array_equal.cpython-312.pyc
                test_assert_frame_equal.cpython-312.pyc
                test_assert_index_equal.cpython-312.pyc
                test_assert_interval_array_equal.cpython-312.pyc
                test_assert_numpy_array_equal.cpython-312.pyc
                test_assert_produces_warning.cpython-312.pyc
                test_assert_series_equal.cpython-312.pyc
                test_deprecate.cpython-312.pyc
                test_deprecate_kwarg.cpython-312.pyc
                test_deprecate_nonkeyword_arguments.cpython-312.pyc
                test_doc.cpython-312.pyc
                test_hashing.cpython-312.pyc
                test_numba.cpython-312.pyc
                test_rewrite_warning.cpython-312.pyc
                test_shares_memory.cpython-312.pyc
                test_show_versions.cpython-312.pyc
                test_util.cpython-312.pyc
                test_validate_args.cpython-312.pyc
                test_validate_args_and_kwargs.cpython-312.pyc
                test_validate_inclusive.cpython-312.pyc
                test_validate_kwargs.cpython-312.pyc
                __init__.cpython-312.pyc
            window/
              conftest.py
              test_api.py
              test_apply.py
              test_base_indexer.py
              test_cython_aggregations.py
              test_dtypes.py
              test_ewm.py
              test_expanding.py
              test_groupby.py
              test_numba.py
              test_online.py
              test_pairwise.py
              test_rolling.py
              test_rolling_functions.py
              test_rolling_quantile.py
              test_rolling_skew_kurt.py
              test_timeseries_window.py
              test_win_type.py
              __init__.py
              moments/
                conftest.py
                test_moments_consistency_ewm.py
                test_moments_consistency_expanding.py
                test_moments_consistency_rolling.py
                __init__.py
                __pycache__/
                  conftest.cpython-312.pyc
                  test_moments_consistency_ewm.cpython-312.pyc
                  test_moments_consistency_expanding.cpython-312.pyc
                  test_moments_consistency_rolling.cpython-312.pyc
                  __init__.cpython-312.pyc
              __pycache__/
                conftest.cpython-312.pyc
                test_api.cpython-312.pyc
                test_apply.cpython-312.pyc
                test_base_indexer.cpython-312.pyc
                test_cython_aggregations.cpython-312.pyc
                test_dtypes.cpython-312.pyc
                test_ewm.cpython-312.pyc
                test_expanding.cpython-312.pyc
                test_groupby.cpython-312.pyc
                test_numba.cpython-312.pyc
                test_online.cpython-312.pyc
                test_pairwise.cpython-312.pyc
                test_rolling.cpython-312.pyc
                test_rolling_functions.cpython-312.pyc
                test_rolling_quantile.cpython-312.pyc
                test_rolling_skew_kurt.cpython-312.pyc
                test_timeseries_window.cpython-312.pyc
                test_win_type.cpython-312.pyc
                __init__.cpython-312.pyc
            __pycache__/
              test_aggregation.cpython-312.pyc
              test_algos.cpython-312.pyc
              test_common.cpython-312.pyc
              test_downstream.cpython-312.pyc
              test_errors.cpython-312.pyc
              test_expressions.cpython-312.pyc
              test_flags.cpython-312.pyc
              test_multilevel.cpython-312.pyc
              test_nanops.cpython-312.pyc
              test_optional_dependency.cpython-312.pyc
              test_register_accessor.cpython-312.pyc
              test_sorting.cpython-312.pyc
              test_take.cpython-312.pyc
              __init__.cpython-312.pyc
          tseries/
            api.py
            frequencies.py
            holiday.py
            offsets.py
            __init__.py
            __pycache__/
              api.cpython-312.pyc
              frequencies.cpython-312.pyc
              holiday.cpython-312.pyc
              offsets.cpython-312.pyc
              __init__.cpython-312.pyc
          util/
            _decorators.py
            _doctools.py
            _exceptions.py
            _print_versions.py
            _tester.py
            _test_decorators.py
            _validators.py
            __init__.py
            version/
              __init__.py
              __pycache__/
                __init__.cpython-312.pyc
            __pycache__/
              _decorators.cpython-312.pyc
              _doctools.cpython-312.pyc
              _exceptions.cpython-312.pyc
              _print_versions.cpython-312.pyc
              _tester.cpython-312.pyc
              _test_decorators.cpython-312.pyc
              _validators.cpython-312.pyc
              __init__.cpython-312.pyc
          _config/
            config.py
            dates.py
            display.py
            localization.py
            __init__.py
            __pycache__/
              config.cpython-312.pyc
              dates.cpython-312.pyc
              display.cpython-312.pyc
              localization.cpython-312.pyc
              __init__.cpython-312.pyc
          _libs/
            algos.cp312-win_amd64.lib
            algos.cp312-win_amd64.pyd
            algos.pyi
            arrays.cp312-win_amd64.lib
            arrays.cp312-win_amd64.pyd
            arrays.pyi
            byteswap.cp312-win_amd64.lib
            byteswap.cp312-win_amd64.pyd
            byteswap.pyi
            groupby.cp312-win_amd64.lib
            groupby.cp312-win_amd64.pyd
            groupby.pyi
            hashing.cp312-win_amd64.lib
            hashing.cp312-win_amd64.pyd
            hashing.pyi
            hashtable.cp312-win_amd64.lib
            hashtable.cp312-win_amd64.pyd
            hashtable.pyi
            index.cp312-win_amd64.lib
            index.cp312-win_amd64.pyd
            index.pyi
            indexing.cp312-win_amd64.lib
            indexing.cp312-win_amd64.pyd
            indexing.pyi
            internals.cp312-win_amd64.lib
            internals.cp312-win_amd64.pyd
            internals.pyi
            interval.cp312-win_amd64.lib
            interval.cp312-win_amd64.pyd
            interval.pyi
            join.cp312-win_amd64.lib
            join.cp312-win_amd64.pyd
            join.pyi
            json.cp312-win_amd64.lib
            json.cp312-win_amd64.pyd
            json.pyi
            lib.cp312-win_amd64.lib
            lib.cp312-win_amd64.pyd
            lib.pyi
            missing.cp312-win_amd64.lib
            missing.cp312-win_amd64.pyd
            missing.pyi
            ops.cp312-win_amd64.lib
            ops.cp312-win_amd64.pyd
            ops.pyi
            ops_dispatch.cp312-win_amd64.lib
            ops_dispatch.cp312-win_amd64.pyd
            ops_dispatch.pyi
            pandas_datetime.cp312-win_amd64.lib
            pandas_datetime.cp312-win_amd64.pyd
            pandas_parser.cp312-win_amd64.lib
            pandas_parser.cp312-win_amd64.pyd
            parsers.cp312-win_amd64.lib
            parsers.cp312-win_amd64.pyd
            parsers.pyi
            properties.cp312-win_amd64.lib
            properties.cp312-win_amd64.pyd
            properties.pyi
            reshape.cp312-win_amd64.lib
            reshape.cp312-win_amd64.pyd
            reshape.pyi
            sas.cp312-win_amd64.lib
            sas.cp312-win_amd64.pyd
            sas.pyi
            sparse.cp312-win_amd64.lib
            sparse.cp312-win_amd64.pyd
            sparse.pyi
            testing.cp312-win_amd64.lib
            testing.cp312-win_amd64.pyd
            testing.pyi
            tslib.cp312-win_amd64.lib
            tslib.cp312-win_amd64.pyd
            tslib.pyi
            writers.cp312-win_amd64.lib
            writers.cp312-win_amd64.pyd
            writers.pyi
            __init__.py
            tslibs/
              base.cp312-win_amd64.lib
              base.cp312-win_amd64.pyd
              ccalendar.cp312-win_amd64.lib
              ccalendar.cp312-win_amd64.pyd
              ccalendar.pyi
              conversion.cp312-win_amd64.lib
              conversion.cp312-win_amd64.pyd
              conversion.pyi
              dtypes.cp312-win_amd64.lib
              dtypes.cp312-win_amd64.pyd
              dtypes.pyi
              fields.cp312-win_amd64.lib
              fields.cp312-win_amd64.pyd
              fields.pyi
              nattype.cp312-win_amd64.lib
              nattype.cp312-win_amd64.pyd
              nattype.pyi
              np_datetime.cp312-win_amd64.lib
              np_datetime.cp312-win_amd64.pyd
              np_datetime.pyi
              offsets.cp312-win_amd64.lib
              offsets.cp312-win_amd64.pyd
              offsets.pyi
              parsing.cp312-win_amd64.lib
              parsing.cp312-win_amd64.pyd
              parsing.pyi
              period.cp312-win_amd64.lib
              period.cp312-win_amd64.pyd
              period.pyi
              strptime.cp312-win_amd64.lib
              strptime.cp312-win_amd64.pyd
              strptime.pyi
              timedeltas.cp312-win_amd64.lib
              timedeltas.cp312-win_amd64.pyd
              timedeltas.pyi
              timestamps.cp312-win_amd64.lib
              timestamps.cp312-win_amd64.pyd
              timestamps.pyi
              timezones.cp312-win_amd64.lib
              timezones.cp312-win_amd64.pyd
              timezones.pyi
              tzconversion.cp312-win_amd64.lib
              tzconversion.cp312-win_amd64.pyd
              tzconversion.pyi
              vectorized.cp312-win_amd64.lib
              vectorized.cp312-win_amd64.pyd
              vectorized.pyi
              __init__.py
              __pycache__/
                __init__.cpython-312.pyc
            window/
              aggregations.cp312-win_amd64.lib
              aggregations.cp312-win_amd64.pyd
              aggregations.pyi
              indexers.cp312-win_amd64.lib
              indexers.cp312-win_amd64.pyd
              indexers.pyi
              __init__.py
              __pycache__/
                __init__.cpython-312.pyc
            __pycache__/
              __init__.cpython-312.pyc
          _testing/
            asserters.py
            compat.py
            contexts.py
            _hypothesis.py
            _io.py
            _warnings.py
            __init__.py
            __pycache__/
              asserters.cpython-312.pyc
              compat.cpython-312.pyc
              contexts.cpython-312.pyc
              _hypothesis.cpython-312.pyc
              _io.cpython-312.pyc
              _warnings.cpython-312.pyc
              __init__.cpython-312.pyc
          __pycache__/
            conftest.cpython-312.pyc
            testing.cpython-312.pyc
            _typing.cpython-312.pyc
            _version.cpython-312.pyc
            _version_meson.cpython-312.pyc
            __init__.cpython-312.pyc
        pandas-2.2.3.dist-info/
          DELVEWHEEL
          entry_points.txt
          INSTALLER
          LICENSE
          METADATA
          RECORD
          WHEEL
        pandas.libs/
          msvcp140-0f2ea95580b32bcfc81c235d5751ce78.dll
        pefile-2023.2.7.dist-info/
          INSTALLER
          LICENSE
          METADATA
          RECORD
          top_level.txt
          WHEEL
        PIL/
          AvifImagePlugin.py
          BdfFontFile.py
          BlpImagePlugin.py
          BmpImagePlugin.py
          BufrStubImagePlugin.py
          ContainerIO.py
          CurImagePlugin.py
          DcxImagePlugin.py
          DdsImagePlugin.py
          EpsImagePlugin.py
          ExifTags.py
          features.py
          FitsImagePlugin.py
          FliImagePlugin.py
          FontFile.py
          FpxImagePlugin.py
          FtexImagePlugin.py
          GbrImagePlugin.py
          GdImageFile.py
          GifImagePlugin.py
          GimpGradientFile.py
          GimpPaletteFile.py
          GribStubImagePlugin.py
          Hdf5StubImagePlugin.py
          IcnsImagePlugin.py
          IcoImagePlugin.py
          Image.py
          ImageChops.py
          ImageCms.py
          ImageColor.py
          ImageDraw.py
          ImageDraw2.py
          ImageEnhance.py
          ImageFile.py
          ImageFilter.py
          ImageFont.py
          ImageGrab.py
          ImageMath.py
          ImageMode.py
          ImageMorph.py
          ImageOps.py
          ImagePalette.py
          ImagePath.py
          ImageQt.py
          ImageSequence.py
          ImageShow.py
          ImageStat.py
          ImageTk.py
          ImageTransform.py
          ImageWin.py
          ImImagePlugin.py
          ImtImagePlugin.py
          IptcImagePlugin.py
          Jpeg2KImagePlugin.py
          JpegImagePlugin.py
          JpegPresets.py
          McIdasImagePlugin.py
          MicImagePlugin.py
          MpegImagePlugin.py
          MpoImagePlugin.py
          MspImagePlugin.py
          PaletteFile.py
          PalmImagePlugin.py
          PcdImagePlugin.py
          PcfFontFile.py
          PcxImagePlugin.py
          PdfImagePlugin.py
          PdfParser.py
          PixarImagePlugin.py
          PngImagePlugin.py
          PpmImagePlugin.py
          PsdImagePlugin.py
          PSDraw.py
          py.typed
          QoiImagePlugin.py
          report.py
          SgiImagePlugin.py
          SpiderImagePlugin.py
          SunImagePlugin.py
          TarIO.py
          TgaImagePlugin.py
          TiffImagePlugin.py
          TiffTags.py
          WalImageFile.py
          WebPImagePlugin.py
          WmfImagePlugin.py
          XbmImagePlugin.py
          XpmImagePlugin.py
          XVThumbImagePlugin.py
          _avif.pyi
          _binary.py
          _deprecate.py
          _imaging.cp312-win_amd64.pyd
          _imaging.pyi
          _imagingcms.cp312-win_amd64.pyd
          _imagingcms.pyi
          _imagingft.cp312-win_amd64.pyd
          _imagingft.pyi
          _imagingmath.cp312-win_amd64.pyd
          _imagingmath.pyi
          _imagingmorph.cp312-win_amd64.pyd
          _imagingmorph.pyi
          _imagingtk.cp312-win_amd64.pyd
          _imagingtk.pyi
          _tkinter_finder.py
          _typing.py
          _util.py
          _version.py
          _webp.cp312-win_amd64.pyd
          _webp.pyi
          __init__.py
          __main__.py
          __pycache__/
            AvifImagePlugin.cpython-312.pyc
            BdfFontFile.cpython-312.pyc
            BlpImagePlugin.cpython-312.pyc
            BmpImagePlugin.cpython-312.pyc
            BufrStubImagePlugin.cpython-312.pyc
            ContainerIO.cpython-312.pyc
            CurImagePlugin.cpython-312.pyc
            DcxImagePlugin.cpython-312.pyc
            DdsImagePlugin.cpython-312.pyc
            EpsImagePlugin.cpython-312.pyc
            ExifTags.cpython-312.pyc
            features.cpython-312.pyc
            FitsImagePlugin.cpython-312.pyc
            FliImagePlugin.cpython-312.pyc
            FontFile.cpython-312.pyc
            FpxImagePlugin.cpython-312.pyc
            FtexImagePlugin.cpython-312.pyc
            GbrImagePlugin.cpython-312.pyc
            GdImageFile.cpython-312.pyc
            GifImagePlugin.cpython-312.pyc
            GimpGradientFile.cpython-312.pyc
            GimpPaletteFile.cpython-312.pyc
            GribStubImagePlugin.cpython-312.pyc
            Hdf5StubImagePlugin.cpython-312.pyc
            IcnsImagePlugin.cpython-312.pyc
            IcoImagePlugin.cpython-312.pyc
            Image.cpython-312.pyc
            ImageChops.cpython-312.pyc
            ImageCms.cpython-312.pyc
            ImageColor.cpython-312.pyc
            ImageDraw.cpython-312.pyc
            ImageDraw2.cpython-312.pyc
            ImageEnhance.cpython-312.pyc
            ImageFile.cpython-312.pyc
            ImageFilter.cpython-312.pyc
            ImageFont.cpython-312.pyc
            ImageGrab.cpython-312.pyc
            ImageMath.cpython-312.pyc
            ImageMode.cpython-312.pyc
            ImageMorph.cpython-312.pyc
            ImageOps.cpython-312.pyc
            ImagePalette.cpython-312.pyc
            ImagePath.cpython-312.pyc
            ImageQt.cpython-312.pyc
            ImageSequence.cpython-312.pyc
            ImageShow.cpython-312.pyc
            ImageStat.cpython-312.pyc
            ImageTk.cpython-312.pyc
            ImageTransform.cpython-312.pyc
            ImageWin.cpython-312.pyc
            ImImagePlugin.cpython-312.pyc
            ImtImagePlugin.cpython-312.pyc
            IptcImagePlugin.cpython-312.pyc
            Jpeg2KImagePlugin.cpython-312.pyc
            JpegImagePlugin.cpython-312.pyc
            JpegPresets.cpython-312.pyc
            McIdasImagePlugin.cpython-312.pyc
            MicImagePlugin.cpython-312.pyc
            MpegImagePlugin.cpython-312.pyc
            MpoImagePlugin.cpython-312.pyc
            MspImagePlugin.cpython-312.pyc
            PaletteFile.cpython-312.pyc
            PalmImagePlugin.cpython-312.pyc
            PcdImagePlugin.cpython-312.pyc
            PcfFontFile.cpython-312.pyc
            PcxImagePlugin.cpython-312.pyc
            PdfImagePlugin.cpython-312.pyc
            PdfParser.cpython-312.pyc
            PixarImagePlugin.cpython-312.pyc
            PngImagePlugin.cpython-312.pyc
            PpmImagePlugin.cpython-312.pyc
            PsdImagePlugin.cpython-312.pyc
            PSDraw.cpython-312.pyc
            QoiImagePlugin.cpython-312.pyc
            report.cpython-312.pyc
            SgiImagePlugin.cpython-312.pyc
            SpiderImagePlugin.cpython-312.pyc
            SunImagePlugin.cpython-312.pyc
            TarIO.cpython-312.pyc
            TgaImagePlugin.cpython-312.pyc
            TiffImagePlugin.cpython-312.pyc
            TiffTags.cpython-312.pyc
            WalImageFile.cpython-312.pyc
            WebPImagePlugin.cpython-312.pyc
            WmfImagePlugin.cpython-312.pyc
            XbmImagePlugin.cpython-312.pyc
            XpmImagePlugin.cpython-312.pyc
            XVThumbImagePlugin.cpython-312.pyc
            _binary.cpython-312.pyc
            _deprecate.cpython-312.pyc
            _tkinter_finder.cpython-312.pyc
            _typing.cpython-312.pyc
            _util.cpython-312.pyc
            _version.cpython-312.pyc
            __init__.cpython-312.pyc
            __main__.cpython-312.pyc
        pillow-11.2.1.dist-info/
          INSTALLER
          METADATA
          RECORD
          top_level.txt
          WHEEL
          zip-safe
          licenses/
            LICENSE
        pip/
          py.typed
          __init__.py
          __main__.py
          __pip-runner__.py
          _internal/
            build_env.py
            cache.py
            configuration.py
            exceptions.py
            main.py
            pyproject.py
            self_outdated_check.py
            wheel_builder.py
            __init__.py
            cli/
              autocompletion.py
              base_command.py
              cmdoptions.py
              command_context.py
              index_command.py
              main.py
              main_parser.py
              parser.py
              progress_bars.py
              req_command.py
              spinners.py
              status_codes.py
              __init__.py
              __pycache__/
                autocompletion.cpython-312.pyc
                base_command.cpython-312.pyc
                cmdoptions.cpython-312.pyc
                command_context.cpython-312.pyc
                index_command.cpython-312.pyc
                main.cpython-312.pyc
                main_parser.cpython-312.pyc
                parser.cpython-312.pyc
                progress_bars.cpython-312.pyc
                req_command.cpython-312.pyc
                spinners.cpython-312.pyc
                status_codes.cpython-312.pyc
                __init__.cpython-312.pyc
            commands/
              cache.py
              check.py
              completion.py
              configuration.py
              debug.py
              download.py
              freeze.py
              hash.py
              help.py
              index.py
              inspect.py
              install.py
              list.py
              search.py
              show.py
              uninstall.py
              wheel.py
              __init__.py
              __pycache__/
                cache.cpython-312.pyc
                check.cpython-312.pyc
                completion.cpython-312.pyc
                configuration.cpython-312.pyc
                debug.cpython-312.pyc
                download.cpython-312.pyc
                freeze.cpython-312.pyc
                hash.cpython-312.pyc
                help.cpython-312.pyc
                index.cpython-312.pyc
                inspect.cpython-312.pyc
                install.cpython-312.pyc
                list.cpython-312.pyc
                search.cpython-312.pyc
